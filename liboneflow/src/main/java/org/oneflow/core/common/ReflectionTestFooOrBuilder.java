// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/common/cfg_reflection_test.proto

package org.oneflow.core.common;

public interface ReflectionTestFooOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.ReflectionTestFoo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>required int32 required_int32 = 1;</code>
   */
  boolean hasRequiredInt32();
  /**
   * <code>required int32 required_int32 = 1;</code>
   */
  int getRequiredInt32();

  /**
   * <code>optional string optional_string = 2 [default = "undefined"];</code>
   */
  boolean hasOptionalString();
  /**
   * <code>optional string optional_string = 2 [default = "undefined"];</code>
   */
  java.lang.String getOptionalString();
  /**
   * <code>optional string optional_string = 2 [default = "undefined"];</code>
   */
  com.google.protobuf.ByteString
      getOptionalStringBytes();

  /**
   * <code>repeated int32 repeated_int32 = 3;</code>
   */
  java.util.List<java.lang.Integer> getRepeatedInt32List();
  /**
   * <code>repeated int32 repeated_int32 = 3;</code>
   */
  int getRepeatedInt32Count();
  /**
   * <code>repeated int32 repeated_int32 = 3;</code>
   */
  int getRepeatedInt32(int index);

  /**
   * <code>repeated string repeated_string = 4;</code>
   */
  java.util.List<java.lang.String>
      getRepeatedStringList();
  /**
   * <code>repeated string repeated_string = 4;</code>
   */
  int getRepeatedStringCount();
  /**
   * <code>repeated string repeated_string = 4;</code>
   */
  java.lang.String getRepeatedString(int index);
  /**
   * <code>repeated string repeated_string = 4;</code>
   */
  com.google.protobuf.ByteString
      getRepeatedStringBytes(int index);

  /**
   * <code>map&lt;int32, int32&gt; map_int32 = 5;</code>
   */
  int getMapInt32Count();
  /**
   * <code>map&lt;int32, int32&gt; map_int32 = 5;</code>
   */
  boolean containsMapInt32(
      int key);
  /**
   * Use {@link #getMapInt32Map()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getMapInt32();
  /**
   * <code>map&lt;int32, int32&gt; map_int32 = 5;</code>
   */
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getMapInt32Map();
  /**
   * <code>map&lt;int32, int32&gt; map_int32 = 5;</code>
   */

  int getMapInt32OrDefault(
      int key,
      int defaultValue);
  /**
   * <code>map&lt;int32, int32&gt; map_int32 = 5;</code>
   */

  int getMapInt32OrThrow(
      int key);

  /**
   * <code>optional int32 oneof_int32 = 6;</code>
   */
  boolean hasOneofInt32();
  /**
   * <code>optional int32 oneof_int32 = 6;</code>
   */
  int getOneofInt32();

  /**
   * <code>optional int32 another_oneof_int32 = 7;</code>
   */
  boolean hasAnotherOneofInt32();
  /**
   * <code>optional int32 another_oneof_int32 = 7;</code>
   */
  int getAnotherOneofInt32();

  public org.oneflow.core.common.ReflectionTestFoo.TypeCase getTypeCase();
}
