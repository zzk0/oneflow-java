// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/common/error.proto

package org.oneflow.core.common;

/**
 * Protobuf enum {@code oneflow.OpcodeType}
 */
public enum OpcodeType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>kInvalidCompareType = 0;</code>
   */
  kInvalidCompareType(0),
  /**
   * <code>kEq = 1;</code>
   */
  kEq(1),
  /**
   * <code>kNe = 2;</code>
   */
  kNe(2),
  /**
   * <code>kGt = 3;</code>
   */
  kGt(3),
  /**
   * <code>kGe = 4;</code>
   */
  kGe(4),
  /**
   * <code>kLt = 5;</code>
   */
  kLt(5),
  /**
   * <code>kLe = 6;</code>
   */
  kLe(6),
  ;

  /**
   * <code>kInvalidCompareType = 0;</code>
   */
  public static final int kInvalidCompareType_VALUE = 0;
  /**
   * <code>kEq = 1;</code>
   */
  public static final int kEq_VALUE = 1;
  /**
   * <code>kNe = 2;</code>
   */
  public static final int kNe_VALUE = 2;
  /**
   * <code>kGt = 3;</code>
   */
  public static final int kGt_VALUE = 3;
  /**
   * <code>kGe = 4;</code>
   */
  public static final int kGe_VALUE = 4;
  /**
   * <code>kLt = 5;</code>
   */
  public static final int kLt_VALUE = 5;
  /**
   * <code>kLe = 6;</code>
   */
  public static final int kLe_VALUE = 6;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static OpcodeType valueOf(int value) {
    return forNumber(value);
  }

  public static OpcodeType forNumber(int value) {
    switch (value) {
      case 0: return kInvalidCompareType;
      case 1: return kEq;
      case 2: return kNe;
      case 3: return kGt;
      case 4: return kGe;
      case 5: return kLt;
      case 6: return kLe;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<OpcodeType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      OpcodeType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<OpcodeType>() {
          public OpcodeType findValueByNumber(int number) {
            return OpcodeType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.oneflow.core.common.Error.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final OpcodeType[] VALUES = values();

  public static OpcodeType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private OpcodeType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:oneflow.OpcodeType)
}

