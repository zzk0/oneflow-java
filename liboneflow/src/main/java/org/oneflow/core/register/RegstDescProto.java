// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/register/register_desc.proto

package org.oneflow.core.register;

/**
 * Protobuf type {@code oneflow.RegstDescProto}
 */
public  final class RegstDescProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oneflow.RegstDescProto)
    RegstDescProtoOrBuilder {
  // Use RegstDescProto.newBuilder() to construct.
  private RegstDescProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RegstDescProto() {
    regstDescId_ = 0L;
    producerTaskId_ = 0L;
    consumerTaskId_ = java.util.Collections.emptyList();
    minRegisterNum_ = 0;
    maxRegisterNum_ = 0;
    registerNum_ = 0;
    enableReuseMem_ = false;
    memBlockId_ = 0L;
    memBlockOffset_ = 0L;
    separatedHeaderMemBlockId_ = -1L;
    inplaceConsumedRegstDescId_ = -1L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RegstDescProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            regstDescId_ = input.readInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            producerTaskId_ = input.readInt64();
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              consumerTaskId_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000004;
            }
            consumerTaskId_.add(input.readInt64());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              consumerTaskId_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              consumerTaskId_.add(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {
            bitField0_ |= 0x00000004;
            minRegisterNum_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000008;
            maxRegisterNum_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000010;
            registerNum_ = input.readInt32();
            break;
          }
          case 58: {
            oneflow.MemoryCaseOuterClass.MemoryCase.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              subBuilder = memCase_.toBuilder();
            }
            memCase_ = input.readMessage(oneflow.MemoryCaseOuterClass.MemoryCase.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(memCase_);
              memCase_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
          case 66: {
            org.oneflow.core.register.RegstDescTypeProto.Builder subBuilder = null;
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              subBuilder = regstDescType_.toBuilder();
            }
            regstDescType_ = input.readMessage(org.oneflow.core.register.RegstDescTypeProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(regstDescType_);
              regstDescType_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000040;
            break;
          }
          case 72: {
            bitField0_ |= 0x00000080;
            enableReuseMem_ = input.readBool();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000100;
            memBlockId_ = input.readInt64();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000200;
            memBlockOffset_ = input.readInt64();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000400;
            separatedHeaderMemBlockId_ = input.readInt64();
            break;
          }
          case 104: {
            bitField0_ |= 0x00000800;
            inplaceConsumedRegstDescId_ = input.readInt64();
            break;
          }
          case 112: {
            inplaceInfoTypeCase_ = 14;
            inplaceInfoType_ = input.readInt64();
            break;
          }
          case 120: {
            inplaceInfoTypeCase_ = 15;
            inplaceInfoType_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        consumerTaskId_ = java.util.Collections.unmodifiableList(consumerTaskId_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.oneflow.core.register.RegisterDesc.internal_static_oneflow_RegstDescProto_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.oneflow.core.register.RegisterDesc.internal_static_oneflow_RegstDescProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.oneflow.core.register.RegstDescProto.class, org.oneflow.core.register.RegstDescProto.Builder.class);
  }

  private int bitField0_;
  private int inplaceInfoTypeCase_ = 0;
  private java.lang.Object inplaceInfoType_;
  public enum InplaceInfoTypeCase
      implements com.google.protobuf.Internal.EnumLite {
    HINT_INPLACE_CONSUMED_REGST_DESC_ID(14),
    FORCE_INPLACE_CONSUMED_REGST_DESC_ID(15),
    INPLACEINFOTYPE_NOT_SET(0);
    private final int value;
    private InplaceInfoTypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InplaceInfoTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static InplaceInfoTypeCase forNumber(int value) {
      switch (value) {
        case 14: return HINT_INPLACE_CONSUMED_REGST_DESC_ID;
        case 15: return FORCE_INPLACE_CONSUMED_REGST_DESC_ID;
        case 0: return INPLACEINFOTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public InplaceInfoTypeCase
  getInplaceInfoTypeCase() {
    return InplaceInfoTypeCase.forNumber(
        inplaceInfoTypeCase_);
  }

  public static final int REGST_DESC_ID_FIELD_NUMBER = 1;
  private long regstDescId_;
  /**
   * <code>required int64 regst_desc_id = 1;</code>
   */
  public boolean hasRegstDescId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int64 regst_desc_id = 1;</code>
   */
  public long getRegstDescId() {
    return regstDescId_;
  }

  public static final int PRODUCER_TASK_ID_FIELD_NUMBER = 2;
  private long producerTaskId_;
  /**
   * <code>required int64 producer_task_id = 2;</code>
   */
  public boolean hasProducerTaskId() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required int64 producer_task_id = 2;</code>
   */
  public long getProducerTaskId() {
    return producerTaskId_;
  }

  public static final int CONSUMER_TASK_ID_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Long> consumerTaskId_;
  /**
   * <code>repeated int64 consumer_task_id = 3;</code>
   */
  public java.util.List<java.lang.Long>
      getConsumerTaskIdList() {
    return consumerTaskId_;
  }
  /**
   * <code>repeated int64 consumer_task_id = 3;</code>
   */
  public int getConsumerTaskIdCount() {
    return consumerTaskId_.size();
  }
  /**
   * <code>repeated int64 consumer_task_id = 3;</code>
   */
  public long getConsumerTaskId(int index) {
    return consumerTaskId_.get(index);
  }

  public static final int MIN_REGISTER_NUM_FIELD_NUMBER = 4;
  private int minRegisterNum_;
  /**
   * <code>required int32 min_register_num = 4;</code>
   */
  public boolean hasMinRegisterNum() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required int32 min_register_num = 4;</code>
   */
  public int getMinRegisterNum() {
    return minRegisterNum_;
  }

  public static final int MAX_REGISTER_NUM_FIELD_NUMBER = 5;
  private int maxRegisterNum_;
  /**
   * <code>required int32 max_register_num = 5;</code>
   */
  public boolean hasMaxRegisterNum() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>required int32 max_register_num = 5;</code>
   */
  public int getMaxRegisterNum() {
    return maxRegisterNum_;
  }

  public static final int REGISTER_NUM_FIELD_NUMBER = 6;
  private int registerNum_;
  /**
   * <code>required int32 register_num = 6;</code>
   */
  public boolean hasRegisterNum() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>required int32 register_num = 6;</code>
   */
  public int getRegisterNum() {
    return registerNum_;
  }

  public static final int MEM_CASE_FIELD_NUMBER = 7;
  private oneflow.MemoryCaseOuterClass.MemoryCase memCase_;
  /**
   * <code>required .oneflow.MemoryCase mem_case = 7;</code>
   */
  public boolean hasMemCase() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>required .oneflow.MemoryCase mem_case = 7;</code>
   */
  public oneflow.MemoryCaseOuterClass.MemoryCase getMemCase() {
    return memCase_ == null ? oneflow.MemoryCaseOuterClass.MemoryCase.getDefaultInstance() : memCase_;
  }
  /**
   * <code>required .oneflow.MemoryCase mem_case = 7;</code>
   */
  public oneflow.MemoryCaseOuterClass.MemoryCaseOrBuilder getMemCaseOrBuilder() {
    return memCase_ == null ? oneflow.MemoryCaseOuterClass.MemoryCase.getDefaultInstance() : memCase_;
  }

  public static final int REGST_DESC_TYPE_FIELD_NUMBER = 8;
  private org.oneflow.core.register.RegstDescTypeProto regstDescType_;
  /**
   * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
   */
  public boolean hasRegstDescType() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
   */
  public org.oneflow.core.register.RegstDescTypeProto getRegstDescType() {
    return regstDescType_ == null ? org.oneflow.core.register.RegstDescTypeProto.getDefaultInstance() : regstDescType_;
  }
  /**
   * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
   */
  public org.oneflow.core.register.RegstDescTypeProtoOrBuilder getRegstDescTypeOrBuilder() {
    return regstDescType_ == null ? org.oneflow.core.register.RegstDescTypeProto.getDefaultInstance() : regstDescType_;
  }

  public static final int ENABLE_REUSE_MEM_FIELD_NUMBER = 9;
  private boolean enableReuseMem_;
  /**
   * <code>required bool enable_reuse_mem = 9;</code>
   */
  public boolean hasEnableReuseMem() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>required bool enable_reuse_mem = 9;</code>
   */
  public boolean getEnableReuseMem() {
    return enableReuseMem_;
  }

  public static final int MEM_BLOCK_ID_FIELD_NUMBER = 10;
  private long memBlockId_;
  /**
   * <code>required int64 mem_block_id = 10;</code>
   */
  public boolean hasMemBlockId() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <code>required int64 mem_block_id = 10;</code>
   */
  public long getMemBlockId() {
    return memBlockId_;
  }

  public static final int MEM_BLOCK_OFFSET_FIELD_NUMBER = 11;
  private long memBlockOffset_;
  /**
   * <code>required int64 mem_block_offset = 11;</code>
   */
  public boolean hasMemBlockOffset() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <code>required int64 mem_block_offset = 11;</code>
   */
  public long getMemBlockOffset() {
    return memBlockOffset_;
  }

  public static final int SEPARATED_HEADER_MEM_BLOCK_ID_FIELD_NUMBER = 12;
  private long separatedHeaderMemBlockId_;
  /**
   * <code>optional int64 separated_header_mem_block_id = 12 [default = -1];</code>
   */
  public boolean hasSeparatedHeaderMemBlockId() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <code>optional int64 separated_header_mem_block_id = 12 [default = -1];</code>
   */
  public long getSeparatedHeaderMemBlockId() {
    return separatedHeaderMemBlockId_;
  }

  public static final int INPLACE_CONSUMED_REGST_DESC_ID_FIELD_NUMBER = 13;
  private long inplaceConsumedRegstDescId_;
  /**
   * <code>optional int64 inplace_consumed_regst_desc_id = 13 [default = -1];</code>
   */
  public boolean hasInplaceConsumedRegstDescId() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <code>optional int64 inplace_consumed_regst_desc_id = 13 [default = -1];</code>
   */
  public long getInplaceConsumedRegstDescId() {
    return inplaceConsumedRegstDescId_;
  }

  public static final int HINT_INPLACE_CONSUMED_REGST_DESC_ID_FIELD_NUMBER = 14;
  /**
   * <code>optional int64 hint_inplace_consumed_regst_desc_id = 14 [default = -1];</code>
   */
  public boolean hasHintInplaceConsumedRegstDescId() {
    return inplaceInfoTypeCase_ == 14;
  }
  /**
   * <code>optional int64 hint_inplace_consumed_regst_desc_id = 14 [default = -1];</code>
   */
  public long getHintInplaceConsumedRegstDescId() {
    if (inplaceInfoTypeCase_ == 14) {
      return (java.lang.Long) inplaceInfoType_;
    }
    return -1L;
  }

  public static final int FORCE_INPLACE_CONSUMED_REGST_DESC_ID_FIELD_NUMBER = 15;
  /**
   * <code>optional int64 force_inplace_consumed_regst_desc_id = 15 [default = -1];</code>
   */
  public boolean hasForceInplaceConsumedRegstDescId() {
    return inplaceInfoTypeCase_ == 15;
  }
  /**
   * <code>optional int64 force_inplace_consumed_regst_desc_id = 15 [default = -1];</code>
   */
  public long getForceInplaceConsumedRegstDescId() {
    if (inplaceInfoTypeCase_ == 15) {
      return (java.lang.Long) inplaceInfoType_;
    }
    return -1L;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRegstDescId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasProducerTaskId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMinRegisterNum()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMaxRegisterNum()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRegisterNum()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMemCase()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRegstDescType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasEnableReuseMem()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMemBlockId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMemBlockOffset()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getMemCase().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getRegstDescType().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, regstDescId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, producerTaskId_);
    }
    for (int i = 0; i < consumerTaskId_.size(); i++) {
      output.writeInt64(3, consumerTaskId_.get(i));
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(4, minRegisterNum_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(5, maxRegisterNum_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(6, registerNum_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(7, getMemCase());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeMessage(8, getRegstDescType());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeBool(9, enableReuseMem_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt64(10, memBlockId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt64(11, memBlockOffset_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt64(12, separatedHeaderMemBlockId_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeInt64(13, inplaceConsumedRegstDescId_);
    }
    if (inplaceInfoTypeCase_ == 14) {
      output.writeInt64(
          14, (long)((java.lang.Long) inplaceInfoType_));
    }
    if (inplaceInfoTypeCase_ == 15) {
      output.writeInt64(
          15, (long)((java.lang.Long) inplaceInfoType_));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, regstDescId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, producerTaskId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < consumerTaskId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(consumerTaskId_.get(i));
      }
      size += dataSize;
      size += 1 * getConsumerTaskIdList().size();
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, minRegisterNum_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, maxRegisterNum_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, registerNum_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getMemCase());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getRegstDescType());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, enableReuseMem_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, memBlockId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, memBlockOffset_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(12, separatedHeaderMemBlockId_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(13, inplaceConsumedRegstDescId_);
    }
    if (inplaceInfoTypeCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            14, (long)((java.lang.Long) inplaceInfoType_));
    }
    if (inplaceInfoTypeCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            15, (long)((java.lang.Long) inplaceInfoType_));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.oneflow.core.register.RegstDescProto)) {
      return super.equals(obj);
    }
    org.oneflow.core.register.RegstDescProto other = (org.oneflow.core.register.RegstDescProto) obj;

    boolean result = true;
    result = result && (hasRegstDescId() == other.hasRegstDescId());
    if (hasRegstDescId()) {
      result = result && (getRegstDescId()
          == other.getRegstDescId());
    }
    result = result && (hasProducerTaskId() == other.hasProducerTaskId());
    if (hasProducerTaskId()) {
      result = result && (getProducerTaskId()
          == other.getProducerTaskId());
    }
    result = result && getConsumerTaskIdList()
        .equals(other.getConsumerTaskIdList());
    result = result && (hasMinRegisterNum() == other.hasMinRegisterNum());
    if (hasMinRegisterNum()) {
      result = result && (getMinRegisterNum()
          == other.getMinRegisterNum());
    }
    result = result && (hasMaxRegisterNum() == other.hasMaxRegisterNum());
    if (hasMaxRegisterNum()) {
      result = result && (getMaxRegisterNum()
          == other.getMaxRegisterNum());
    }
    result = result && (hasRegisterNum() == other.hasRegisterNum());
    if (hasRegisterNum()) {
      result = result && (getRegisterNum()
          == other.getRegisterNum());
    }
    result = result && (hasMemCase() == other.hasMemCase());
    if (hasMemCase()) {
      result = result && getMemCase()
          .equals(other.getMemCase());
    }
    result = result && (hasRegstDescType() == other.hasRegstDescType());
    if (hasRegstDescType()) {
      result = result && getRegstDescType()
          .equals(other.getRegstDescType());
    }
    result = result && (hasEnableReuseMem() == other.hasEnableReuseMem());
    if (hasEnableReuseMem()) {
      result = result && (getEnableReuseMem()
          == other.getEnableReuseMem());
    }
    result = result && (hasMemBlockId() == other.hasMemBlockId());
    if (hasMemBlockId()) {
      result = result && (getMemBlockId()
          == other.getMemBlockId());
    }
    result = result && (hasMemBlockOffset() == other.hasMemBlockOffset());
    if (hasMemBlockOffset()) {
      result = result && (getMemBlockOffset()
          == other.getMemBlockOffset());
    }
    result = result && (hasSeparatedHeaderMemBlockId() == other.hasSeparatedHeaderMemBlockId());
    if (hasSeparatedHeaderMemBlockId()) {
      result = result && (getSeparatedHeaderMemBlockId()
          == other.getSeparatedHeaderMemBlockId());
    }
    result = result && (hasInplaceConsumedRegstDescId() == other.hasInplaceConsumedRegstDescId());
    if (hasInplaceConsumedRegstDescId()) {
      result = result && (getInplaceConsumedRegstDescId()
          == other.getInplaceConsumedRegstDescId());
    }
    result = result && getInplaceInfoTypeCase().equals(
        other.getInplaceInfoTypeCase());
    if (!result) return false;
    switch (inplaceInfoTypeCase_) {
      case 14:
        result = result && (getHintInplaceConsumedRegstDescId()
            == other.getHintInplaceConsumedRegstDescId());
        break;
      case 15:
        result = result && (getForceInplaceConsumedRegstDescId()
            == other.getForceInplaceConsumedRegstDescId());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasRegstDescId()) {
      hash = (37 * hash) + REGST_DESC_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRegstDescId());
    }
    if (hasProducerTaskId()) {
      hash = (37 * hash) + PRODUCER_TASK_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getProducerTaskId());
    }
    if (getConsumerTaskIdCount() > 0) {
      hash = (37 * hash) + CONSUMER_TASK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getConsumerTaskIdList().hashCode();
    }
    if (hasMinRegisterNum()) {
      hash = (37 * hash) + MIN_REGISTER_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getMinRegisterNum();
    }
    if (hasMaxRegisterNum()) {
      hash = (37 * hash) + MAX_REGISTER_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRegisterNum();
    }
    if (hasRegisterNum()) {
      hash = (37 * hash) + REGISTER_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getRegisterNum();
    }
    if (hasMemCase()) {
      hash = (37 * hash) + MEM_CASE_FIELD_NUMBER;
      hash = (53 * hash) + getMemCase().hashCode();
    }
    if (hasRegstDescType()) {
      hash = (37 * hash) + REGST_DESC_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getRegstDescType().hashCode();
    }
    if (hasEnableReuseMem()) {
      hash = (37 * hash) + ENABLE_REUSE_MEM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableReuseMem());
    }
    if (hasMemBlockId()) {
      hash = (37 * hash) + MEM_BLOCK_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMemBlockId());
    }
    if (hasMemBlockOffset()) {
      hash = (37 * hash) + MEM_BLOCK_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMemBlockOffset());
    }
    if (hasSeparatedHeaderMemBlockId()) {
      hash = (37 * hash) + SEPARATED_HEADER_MEM_BLOCK_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSeparatedHeaderMemBlockId());
    }
    if (hasInplaceConsumedRegstDescId()) {
      hash = (37 * hash) + INPLACE_CONSUMED_REGST_DESC_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInplaceConsumedRegstDescId());
    }
    switch (inplaceInfoTypeCase_) {
      case 14:
        hash = (37 * hash) + HINT_INPLACE_CONSUMED_REGST_DESC_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getHintInplaceConsumedRegstDescId());
        break;
      case 15:
        hash = (37 * hash) + FORCE_INPLACE_CONSUMED_REGST_DESC_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getForceInplaceConsumedRegstDescId());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.oneflow.core.register.RegstDescProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.register.RegstDescProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.register.RegstDescProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.register.RegstDescProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.register.RegstDescProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.register.RegstDescProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.register.RegstDescProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.oneflow.core.register.RegstDescProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.register.RegstDescProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.register.RegstDescProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.oneflow.core.register.RegstDescProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code oneflow.RegstDescProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oneflow.RegstDescProto)
      org.oneflow.core.register.RegstDescProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.oneflow.core.register.RegisterDesc.internal_static_oneflow_RegstDescProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.oneflow.core.register.RegisterDesc.internal_static_oneflow_RegstDescProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.oneflow.core.register.RegstDescProto.class, org.oneflow.core.register.RegstDescProto.Builder.class);
    }

    // Construct using org.oneflow.core.register.RegstDescProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMemCaseFieldBuilder();
        getRegstDescTypeFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      regstDescId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      producerTaskId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      consumerTaskId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      minRegisterNum_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      maxRegisterNum_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      registerNum_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      if (memCaseBuilder_ == null) {
        memCase_ = null;
      } else {
        memCaseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (regstDescTypeBuilder_ == null) {
        regstDescType_ = null;
      } else {
        regstDescTypeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      enableReuseMem_ = false;
      bitField0_ = (bitField0_ & ~0x00000100);
      memBlockId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000200);
      memBlockOffset_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000400);
      separatedHeaderMemBlockId_ = -1L;
      bitField0_ = (bitField0_ & ~0x00000800);
      inplaceConsumedRegstDescId_ = -1L;
      bitField0_ = (bitField0_ & ~0x00001000);
      inplaceInfoTypeCase_ = 0;
      inplaceInfoType_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.oneflow.core.register.RegisterDesc.internal_static_oneflow_RegstDescProto_descriptor;
    }

    public org.oneflow.core.register.RegstDescProto getDefaultInstanceForType() {
      return org.oneflow.core.register.RegstDescProto.getDefaultInstance();
    }

    public org.oneflow.core.register.RegstDescProto build() {
      org.oneflow.core.register.RegstDescProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.oneflow.core.register.RegstDescProto buildPartial() {
      org.oneflow.core.register.RegstDescProto result = new org.oneflow.core.register.RegstDescProto(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.regstDescId_ = regstDescId_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.producerTaskId_ = producerTaskId_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        consumerTaskId_ = java.util.Collections.unmodifiableList(consumerTaskId_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.consumerTaskId_ = consumerTaskId_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000004;
      }
      result.minRegisterNum_ = minRegisterNum_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000008;
      }
      result.maxRegisterNum_ = maxRegisterNum_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000010;
      }
      result.registerNum_ = registerNum_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000020;
      }
      if (memCaseBuilder_ == null) {
        result.memCase_ = memCase_;
      } else {
        result.memCase_ = memCaseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000040;
      }
      if (regstDescTypeBuilder_ == null) {
        result.regstDescType_ = regstDescType_;
      } else {
        result.regstDescType_ = regstDescTypeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000080;
      }
      result.enableReuseMem_ = enableReuseMem_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000100;
      }
      result.memBlockId_ = memBlockId_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000200;
      }
      result.memBlockOffset_ = memBlockOffset_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000400;
      }
      result.separatedHeaderMemBlockId_ = separatedHeaderMemBlockId_;
      if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
        to_bitField0_ |= 0x00000800;
      }
      result.inplaceConsumedRegstDescId_ = inplaceConsumedRegstDescId_;
      if (inplaceInfoTypeCase_ == 14) {
        result.inplaceInfoType_ = inplaceInfoType_;
      }
      if (inplaceInfoTypeCase_ == 15) {
        result.inplaceInfoType_ = inplaceInfoType_;
      }
      result.bitField0_ = to_bitField0_;
      result.inplaceInfoTypeCase_ = inplaceInfoTypeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.oneflow.core.register.RegstDescProto) {
        return mergeFrom((org.oneflow.core.register.RegstDescProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.oneflow.core.register.RegstDescProto other) {
      if (other == org.oneflow.core.register.RegstDescProto.getDefaultInstance()) return this;
      if (other.hasRegstDescId()) {
        setRegstDescId(other.getRegstDescId());
      }
      if (other.hasProducerTaskId()) {
        setProducerTaskId(other.getProducerTaskId());
      }
      if (!other.consumerTaskId_.isEmpty()) {
        if (consumerTaskId_.isEmpty()) {
          consumerTaskId_ = other.consumerTaskId_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureConsumerTaskIdIsMutable();
          consumerTaskId_.addAll(other.consumerTaskId_);
        }
        onChanged();
      }
      if (other.hasMinRegisterNum()) {
        setMinRegisterNum(other.getMinRegisterNum());
      }
      if (other.hasMaxRegisterNum()) {
        setMaxRegisterNum(other.getMaxRegisterNum());
      }
      if (other.hasRegisterNum()) {
        setRegisterNum(other.getRegisterNum());
      }
      if (other.hasMemCase()) {
        mergeMemCase(other.getMemCase());
      }
      if (other.hasRegstDescType()) {
        mergeRegstDescType(other.getRegstDescType());
      }
      if (other.hasEnableReuseMem()) {
        setEnableReuseMem(other.getEnableReuseMem());
      }
      if (other.hasMemBlockId()) {
        setMemBlockId(other.getMemBlockId());
      }
      if (other.hasMemBlockOffset()) {
        setMemBlockOffset(other.getMemBlockOffset());
      }
      if (other.hasSeparatedHeaderMemBlockId()) {
        setSeparatedHeaderMemBlockId(other.getSeparatedHeaderMemBlockId());
      }
      if (other.hasInplaceConsumedRegstDescId()) {
        setInplaceConsumedRegstDescId(other.getInplaceConsumedRegstDescId());
      }
      switch (other.getInplaceInfoTypeCase()) {
        case HINT_INPLACE_CONSUMED_REGST_DESC_ID: {
          setHintInplaceConsumedRegstDescId(other.getHintInplaceConsumedRegstDescId());
          break;
        }
        case FORCE_INPLACE_CONSUMED_REGST_DESC_ID: {
          setForceInplaceConsumedRegstDescId(other.getForceInplaceConsumedRegstDescId());
          break;
        }
        case INPLACEINFOTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRegstDescId()) {
        return false;
      }
      if (!hasProducerTaskId()) {
        return false;
      }
      if (!hasMinRegisterNum()) {
        return false;
      }
      if (!hasMaxRegisterNum()) {
        return false;
      }
      if (!hasRegisterNum()) {
        return false;
      }
      if (!hasMemCase()) {
        return false;
      }
      if (!hasRegstDescType()) {
        return false;
      }
      if (!hasEnableReuseMem()) {
        return false;
      }
      if (!hasMemBlockId()) {
        return false;
      }
      if (!hasMemBlockOffset()) {
        return false;
      }
      if (!getMemCase().isInitialized()) {
        return false;
      }
      if (!getRegstDescType().isInitialized()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.oneflow.core.register.RegstDescProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.oneflow.core.register.RegstDescProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int inplaceInfoTypeCase_ = 0;
    private java.lang.Object inplaceInfoType_;
    public InplaceInfoTypeCase
        getInplaceInfoTypeCase() {
      return InplaceInfoTypeCase.forNumber(
          inplaceInfoTypeCase_);
    }

    public Builder clearInplaceInfoType() {
      inplaceInfoTypeCase_ = 0;
      inplaceInfoType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private long regstDescId_ ;
    /**
     * <code>required int64 regst_desc_id = 1;</code>
     */
    public boolean hasRegstDescId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 regst_desc_id = 1;</code>
     */
    public long getRegstDescId() {
      return regstDescId_;
    }
    /**
     * <code>required int64 regst_desc_id = 1;</code>
     */
    public Builder setRegstDescId(long value) {
      bitField0_ |= 0x00000001;
      regstDescId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 regst_desc_id = 1;</code>
     */
    public Builder clearRegstDescId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      regstDescId_ = 0L;
      onChanged();
      return this;
    }

    private long producerTaskId_ ;
    /**
     * <code>required int64 producer_task_id = 2;</code>
     */
    public boolean hasProducerTaskId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 producer_task_id = 2;</code>
     */
    public long getProducerTaskId() {
      return producerTaskId_;
    }
    /**
     * <code>required int64 producer_task_id = 2;</code>
     */
    public Builder setProducerTaskId(long value) {
      bitField0_ |= 0x00000002;
      producerTaskId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 producer_task_id = 2;</code>
     */
    public Builder clearProducerTaskId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      producerTaskId_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> consumerTaskId_ = java.util.Collections.emptyList();
    private void ensureConsumerTaskIdIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        consumerTaskId_ = new java.util.ArrayList<java.lang.Long>(consumerTaskId_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated int64 consumer_task_id = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getConsumerTaskIdList() {
      return java.util.Collections.unmodifiableList(consumerTaskId_);
    }
    /**
     * <code>repeated int64 consumer_task_id = 3;</code>
     */
    public int getConsumerTaskIdCount() {
      return consumerTaskId_.size();
    }
    /**
     * <code>repeated int64 consumer_task_id = 3;</code>
     */
    public long getConsumerTaskId(int index) {
      return consumerTaskId_.get(index);
    }
    /**
     * <code>repeated int64 consumer_task_id = 3;</code>
     */
    public Builder setConsumerTaskId(
        int index, long value) {
      ensureConsumerTaskIdIsMutable();
      consumerTaskId_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 consumer_task_id = 3;</code>
     */
    public Builder addConsumerTaskId(long value) {
      ensureConsumerTaskIdIsMutable();
      consumerTaskId_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 consumer_task_id = 3;</code>
     */
    public Builder addAllConsumerTaskId(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureConsumerTaskIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, consumerTaskId_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 consumer_task_id = 3;</code>
     */
    public Builder clearConsumerTaskId() {
      consumerTaskId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private int minRegisterNum_ ;
    /**
     * <code>required int32 min_register_num = 4;</code>
     */
    public boolean hasMinRegisterNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 min_register_num = 4;</code>
     */
    public int getMinRegisterNum() {
      return minRegisterNum_;
    }
    /**
     * <code>required int32 min_register_num = 4;</code>
     */
    public Builder setMinRegisterNum(int value) {
      bitField0_ |= 0x00000008;
      minRegisterNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 min_register_num = 4;</code>
     */
    public Builder clearMinRegisterNum() {
      bitField0_ = (bitField0_ & ~0x00000008);
      minRegisterNum_ = 0;
      onChanged();
      return this;
    }

    private int maxRegisterNum_ ;
    /**
     * <code>required int32 max_register_num = 5;</code>
     */
    public boolean hasMaxRegisterNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 max_register_num = 5;</code>
     */
    public int getMaxRegisterNum() {
      return maxRegisterNum_;
    }
    /**
     * <code>required int32 max_register_num = 5;</code>
     */
    public Builder setMaxRegisterNum(int value) {
      bitField0_ |= 0x00000010;
      maxRegisterNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 max_register_num = 5;</code>
     */
    public Builder clearMaxRegisterNum() {
      bitField0_ = (bitField0_ & ~0x00000010);
      maxRegisterNum_ = 0;
      onChanged();
      return this;
    }

    private int registerNum_ ;
    /**
     * <code>required int32 register_num = 6;</code>
     */
    public boolean hasRegisterNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 register_num = 6;</code>
     */
    public int getRegisterNum() {
      return registerNum_;
    }
    /**
     * <code>required int32 register_num = 6;</code>
     */
    public Builder setRegisterNum(int value) {
      bitField0_ |= 0x00000020;
      registerNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 register_num = 6;</code>
     */
    public Builder clearRegisterNum() {
      bitField0_ = (bitField0_ & ~0x00000020);
      registerNum_ = 0;
      onChanged();
      return this;
    }

    private oneflow.MemoryCaseOuterClass.MemoryCase memCase_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        oneflow.MemoryCaseOuterClass.MemoryCase, oneflow.MemoryCaseOuterClass.MemoryCase.Builder, oneflow.MemoryCaseOuterClass.MemoryCaseOrBuilder> memCaseBuilder_;
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public boolean hasMemCase() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public oneflow.MemoryCaseOuterClass.MemoryCase getMemCase() {
      if (memCaseBuilder_ == null) {
        return memCase_ == null ? oneflow.MemoryCaseOuterClass.MemoryCase.getDefaultInstance() : memCase_;
      } else {
        return memCaseBuilder_.getMessage();
      }
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public Builder setMemCase(oneflow.MemoryCaseOuterClass.MemoryCase value) {
      if (memCaseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        memCase_ = value;
        onChanged();
      } else {
        memCaseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public Builder setMemCase(
        oneflow.MemoryCaseOuterClass.MemoryCase.Builder builderForValue) {
      if (memCaseBuilder_ == null) {
        memCase_ = builderForValue.build();
        onChanged();
      } else {
        memCaseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public Builder mergeMemCase(oneflow.MemoryCaseOuterClass.MemoryCase value) {
      if (memCaseBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            memCase_ != null &&
            memCase_ != oneflow.MemoryCaseOuterClass.MemoryCase.getDefaultInstance()) {
          memCase_ =
            oneflow.MemoryCaseOuterClass.MemoryCase.newBuilder(memCase_).mergeFrom(value).buildPartial();
        } else {
          memCase_ = value;
        }
        onChanged();
      } else {
        memCaseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public Builder clearMemCase() {
      if (memCaseBuilder_ == null) {
        memCase_ = null;
        onChanged();
      } else {
        memCaseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public oneflow.MemoryCaseOuterClass.MemoryCase.Builder getMemCaseBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getMemCaseFieldBuilder().getBuilder();
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    public oneflow.MemoryCaseOuterClass.MemoryCaseOrBuilder getMemCaseOrBuilder() {
      if (memCaseBuilder_ != null) {
        return memCaseBuilder_.getMessageOrBuilder();
      } else {
        return memCase_ == null ?
            oneflow.MemoryCaseOuterClass.MemoryCase.getDefaultInstance() : memCase_;
      }
    }
    /**
     * <code>required .oneflow.MemoryCase mem_case = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        oneflow.MemoryCaseOuterClass.MemoryCase, oneflow.MemoryCaseOuterClass.MemoryCase.Builder, oneflow.MemoryCaseOuterClass.MemoryCaseOrBuilder> 
        getMemCaseFieldBuilder() {
      if (memCaseBuilder_ == null) {
        memCaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            oneflow.MemoryCaseOuterClass.MemoryCase, oneflow.MemoryCaseOuterClass.MemoryCase.Builder, oneflow.MemoryCaseOuterClass.MemoryCaseOrBuilder>(
                getMemCase(),
                getParentForChildren(),
                isClean());
        memCase_ = null;
      }
      return memCaseBuilder_;
    }

    private org.oneflow.core.register.RegstDescTypeProto regstDescType_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.register.RegstDescTypeProto, org.oneflow.core.register.RegstDescTypeProto.Builder, org.oneflow.core.register.RegstDescTypeProtoOrBuilder> regstDescTypeBuilder_;
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public boolean hasRegstDescType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public org.oneflow.core.register.RegstDescTypeProto getRegstDescType() {
      if (regstDescTypeBuilder_ == null) {
        return regstDescType_ == null ? org.oneflow.core.register.RegstDescTypeProto.getDefaultInstance() : regstDescType_;
      } else {
        return regstDescTypeBuilder_.getMessage();
      }
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public Builder setRegstDescType(org.oneflow.core.register.RegstDescTypeProto value) {
      if (regstDescTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        regstDescType_ = value;
        onChanged();
      } else {
        regstDescTypeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public Builder setRegstDescType(
        org.oneflow.core.register.RegstDescTypeProto.Builder builderForValue) {
      if (regstDescTypeBuilder_ == null) {
        regstDescType_ = builderForValue.build();
        onChanged();
      } else {
        regstDescTypeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public Builder mergeRegstDescType(org.oneflow.core.register.RegstDescTypeProto value) {
      if (regstDescTypeBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            regstDescType_ != null &&
            regstDescType_ != org.oneflow.core.register.RegstDescTypeProto.getDefaultInstance()) {
          regstDescType_ =
            org.oneflow.core.register.RegstDescTypeProto.newBuilder(regstDescType_).mergeFrom(value).buildPartial();
        } else {
          regstDescType_ = value;
        }
        onChanged();
      } else {
        regstDescTypeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public Builder clearRegstDescType() {
      if (regstDescTypeBuilder_ == null) {
        regstDescType_ = null;
        onChanged();
      } else {
        regstDescTypeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public org.oneflow.core.register.RegstDescTypeProto.Builder getRegstDescTypeBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getRegstDescTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    public org.oneflow.core.register.RegstDescTypeProtoOrBuilder getRegstDescTypeOrBuilder() {
      if (regstDescTypeBuilder_ != null) {
        return regstDescTypeBuilder_.getMessageOrBuilder();
      } else {
        return regstDescType_ == null ?
            org.oneflow.core.register.RegstDescTypeProto.getDefaultInstance() : regstDescType_;
      }
    }
    /**
     * <code>required .oneflow.RegstDescTypeProto regst_desc_type = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.register.RegstDescTypeProto, org.oneflow.core.register.RegstDescTypeProto.Builder, org.oneflow.core.register.RegstDescTypeProtoOrBuilder> 
        getRegstDescTypeFieldBuilder() {
      if (regstDescTypeBuilder_ == null) {
        regstDescTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.register.RegstDescTypeProto, org.oneflow.core.register.RegstDescTypeProto.Builder, org.oneflow.core.register.RegstDescTypeProtoOrBuilder>(
                getRegstDescType(),
                getParentForChildren(),
                isClean());
        regstDescType_ = null;
      }
      return regstDescTypeBuilder_;
    }

    private boolean enableReuseMem_ ;
    /**
     * <code>required bool enable_reuse_mem = 9;</code>
     */
    public boolean hasEnableReuseMem() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required bool enable_reuse_mem = 9;</code>
     */
    public boolean getEnableReuseMem() {
      return enableReuseMem_;
    }
    /**
     * <code>required bool enable_reuse_mem = 9;</code>
     */
    public Builder setEnableReuseMem(boolean value) {
      bitField0_ |= 0x00000100;
      enableReuseMem_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required bool enable_reuse_mem = 9;</code>
     */
    public Builder clearEnableReuseMem() {
      bitField0_ = (bitField0_ & ~0x00000100);
      enableReuseMem_ = false;
      onChanged();
      return this;
    }

    private long memBlockId_ ;
    /**
     * <code>required int64 mem_block_id = 10;</code>
     */
    public boolean hasMemBlockId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int64 mem_block_id = 10;</code>
     */
    public long getMemBlockId() {
      return memBlockId_;
    }
    /**
     * <code>required int64 mem_block_id = 10;</code>
     */
    public Builder setMemBlockId(long value) {
      bitField0_ |= 0x00000200;
      memBlockId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 mem_block_id = 10;</code>
     */
    public Builder clearMemBlockId() {
      bitField0_ = (bitField0_ & ~0x00000200);
      memBlockId_ = 0L;
      onChanged();
      return this;
    }

    private long memBlockOffset_ ;
    /**
     * <code>required int64 mem_block_offset = 11;</code>
     */
    public boolean hasMemBlockOffset() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int64 mem_block_offset = 11;</code>
     */
    public long getMemBlockOffset() {
      return memBlockOffset_;
    }
    /**
     * <code>required int64 mem_block_offset = 11;</code>
     */
    public Builder setMemBlockOffset(long value) {
      bitField0_ |= 0x00000400;
      memBlockOffset_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 mem_block_offset = 11;</code>
     */
    public Builder clearMemBlockOffset() {
      bitField0_ = (bitField0_ & ~0x00000400);
      memBlockOffset_ = 0L;
      onChanged();
      return this;
    }

    private long separatedHeaderMemBlockId_ = -1L;
    /**
     * <code>optional int64 separated_header_mem_block_id = 12 [default = -1];</code>
     */
    public boolean hasSeparatedHeaderMemBlockId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 separated_header_mem_block_id = 12 [default = -1];</code>
     */
    public long getSeparatedHeaderMemBlockId() {
      return separatedHeaderMemBlockId_;
    }
    /**
     * <code>optional int64 separated_header_mem_block_id = 12 [default = -1];</code>
     */
    public Builder setSeparatedHeaderMemBlockId(long value) {
      bitField0_ |= 0x00000800;
      separatedHeaderMemBlockId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 separated_header_mem_block_id = 12 [default = -1];</code>
     */
    public Builder clearSeparatedHeaderMemBlockId() {
      bitField0_ = (bitField0_ & ~0x00000800);
      separatedHeaderMemBlockId_ = -1L;
      onChanged();
      return this;
    }

    private long inplaceConsumedRegstDescId_ = -1L;
    /**
     * <code>optional int64 inplace_consumed_regst_desc_id = 13 [default = -1];</code>
     */
    public boolean hasInplaceConsumedRegstDescId() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 inplace_consumed_regst_desc_id = 13 [default = -1];</code>
     */
    public long getInplaceConsumedRegstDescId() {
      return inplaceConsumedRegstDescId_;
    }
    /**
     * <code>optional int64 inplace_consumed_regst_desc_id = 13 [default = -1];</code>
     */
    public Builder setInplaceConsumedRegstDescId(long value) {
      bitField0_ |= 0x00001000;
      inplaceConsumedRegstDescId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 inplace_consumed_regst_desc_id = 13 [default = -1];</code>
     */
    public Builder clearInplaceConsumedRegstDescId() {
      bitField0_ = (bitField0_ & ~0x00001000);
      inplaceConsumedRegstDescId_ = -1L;
      onChanged();
      return this;
    }

    /**
     * <code>optional int64 hint_inplace_consumed_regst_desc_id = 14 [default = -1];</code>
     */
    public boolean hasHintInplaceConsumedRegstDescId() {
      return inplaceInfoTypeCase_ == 14;
    }
    /**
     * <code>optional int64 hint_inplace_consumed_regst_desc_id = 14 [default = -1];</code>
     */
    public long getHintInplaceConsumedRegstDescId() {
      if (inplaceInfoTypeCase_ == 14) {
        return (java.lang.Long) inplaceInfoType_;
      }
      return -1L;
    }
    /**
     * <code>optional int64 hint_inplace_consumed_regst_desc_id = 14 [default = -1];</code>
     */
    public Builder setHintInplaceConsumedRegstDescId(long value) {
      inplaceInfoTypeCase_ = 14;
      inplaceInfoType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 hint_inplace_consumed_regst_desc_id = 14 [default = -1];</code>
     */
    public Builder clearHintInplaceConsumedRegstDescId() {
      if (inplaceInfoTypeCase_ == 14) {
        inplaceInfoTypeCase_ = 0;
        inplaceInfoType_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional int64 force_inplace_consumed_regst_desc_id = 15 [default = -1];</code>
     */
    public boolean hasForceInplaceConsumedRegstDescId() {
      return inplaceInfoTypeCase_ == 15;
    }
    /**
     * <code>optional int64 force_inplace_consumed_regst_desc_id = 15 [default = -1];</code>
     */
    public long getForceInplaceConsumedRegstDescId() {
      if (inplaceInfoTypeCase_ == 15) {
        return (java.lang.Long) inplaceInfoType_;
      }
      return -1L;
    }
    /**
     * <code>optional int64 force_inplace_consumed_regst_desc_id = 15 [default = -1];</code>
     */
    public Builder setForceInplaceConsumedRegstDescId(long value) {
      inplaceInfoTypeCase_ = 15;
      inplaceInfoType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 force_inplace_consumed_regst_desc_id = 15 [default = -1];</code>
     */
    public Builder clearForceInplaceConsumedRegstDescId() {
      if (inplaceInfoTypeCase_ == 15) {
        inplaceInfoTypeCase_ = 0;
        inplaceInfoType_ = null;
        onChanged();
      }
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oneflow.RegstDescProto)
  }

  // @@protoc_insertion_point(class_scope:oneflow.RegstDescProto)
  private static final org.oneflow.core.register.RegstDescProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.oneflow.core.register.RegstDescProto();
  }

  public static org.oneflow.core.register.RegstDescProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<RegstDescProto>
      PARSER = new com.google.protobuf.AbstractParser<RegstDescProto>() {
    public RegstDescProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegstDescProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RegstDescProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RegstDescProto> getParserForType() {
    return PARSER;
  }

  public org.oneflow.core.register.RegstDescProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

