// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/vm/instruction.proto

package org.oneflow.core.vm;

/**
 * Protobuf type {@code oneflow.vm.InstructionOperandProto}
 */
public  final class InstructionOperandProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oneflow.vm.InstructionOperandProto)
    InstructionOperandProtoOrBuilder {
  // Use InstructionOperandProto.newBuilder() to construct.
  private InstructionOperandProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InstructionOperandProto() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private InstructionOperandProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            org.oneflow.core.vm.OperandProto.Builder subBuilder = null;
            if (typeCase_ == 1) {
              subBuilder = ((org.oneflow.core.vm.OperandProto) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.vm.OperandProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.vm.OperandProto) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 1;
            break;
          }
          case 18: {
            org.oneflow.core.vm.OperandProto.Builder subBuilder = null;
            if (typeCase_ == 2) {
              subBuilder = ((org.oneflow.core.vm.OperandProto) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.vm.OperandProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.vm.OperandProto) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 2;
            break;
          }
          case 26: {
            org.oneflow.core.vm.OperandProto.Builder subBuilder = null;
            if (typeCase_ == 3) {
              subBuilder = ((org.oneflow.core.vm.OperandProto) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.vm.OperandProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.vm.OperandProto) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 3;
            break;
          }
          case 34: {
            org.oneflow.core.vm.OperandProto.Builder subBuilder = null;
            if (typeCase_ == 4) {
              subBuilder = ((org.oneflow.core.vm.OperandProto) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.vm.OperandProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.vm.OperandProto) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 4;
            break;
          }
          case 42: {
            org.oneflow.core.vm.OperandProto.Builder subBuilder = null;
            if (typeCase_ == 5) {
              subBuilder = ((org.oneflow.core.vm.OperandProto) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.vm.OperandProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.vm.OperandProto) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 5;
            break;
          }
          case 50: {
            org.oneflow.core.vm.OperandProto.Builder subBuilder = null;
            if (typeCase_ == 6) {
              subBuilder = ((org.oneflow.core.vm.OperandProto) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.vm.OperandProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.vm.OperandProto) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 6;
            break;
          }
          case 58: {
            org.oneflow.core.vm.OperandSeparatorProto.Builder subBuilder = null;
            if (typeCase_ == 7) {
              subBuilder = ((org.oneflow.core.vm.OperandSeparatorProto) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.vm.OperandSeparatorProto.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.vm.OperandSeparatorProto) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 7;
            break;
          }
          case 65: {
            typeCase_ = 8;
            type_ = input.readDouble();
            break;
          }
          case 72: {
            typeCase_ = 9;
            type_ = input.readInt64();
            break;
          }
          case 80: {
            typeCase_ = 10;
            type_ = input.readUInt64();
            break;
          }
          case 88: {
            typeCase_ = 11;
            type_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.oneflow.core.vm.Instruction.internal_static_oneflow_vm_InstructionOperandProto_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.oneflow.core.vm.Instruction.internal_static_oneflow_vm_InstructionOperandProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.oneflow.core.vm.InstructionOperandProto.class, org.oneflow.core.vm.InstructionOperandProto.Builder.class);
  }

  private int bitField0_;
  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite {
    CONST_OPERAND(1),
    MUT_OPERAND(2),
    MUT2_OPERAND(3),
    DEL_OPERAND(4),
    SYMBOL_OPERAND(5),
    INIT_SYMBOL_OPERAND(6),
    SEPARATOR(7),
    DOUBLE_OPERAND(8),
    INT64_OPERAND(9),
    UINT64_OPERAND(10),
    BOOL_OPERAND(11),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return CONST_OPERAND;
        case 2: return MUT_OPERAND;
        case 3: return MUT2_OPERAND;
        case 4: return DEL_OPERAND;
        case 5: return SYMBOL_OPERAND;
        case 6: return INIT_SYMBOL_OPERAND;
        case 7: return SEPARATOR;
        case 8: return DOUBLE_OPERAND;
        case 9: return INT64_OPERAND;
        case 10: return UINT64_OPERAND;
        case 11: return BOOL_OPERAND;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int CONST_OPERAND_FIELD_NUMBER = 1;
  /**
   * <pre>
   * read only object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
   */
  public boolean hasConstOperand() {
    return typeCase_ == 1;
  }
  /**
   * <pre>
   * read only object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
   */
  public org.oneflow.core.vm.OperandProto getConstOperand() {
    if (typeCase_ == 1) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }
  /**
   * <pre>
   * read only object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
   */
  public org.oneflow.core.vm.OperandProtoOrBuilder getConstOperandOrBuilder() {
    if (typeCase_ == 1) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }

  public static final int MUT_OPERAND_FIELD_NUMBER = 2;
  /**
   * <pre>
   * writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
   */
  public boolean hasMutOperand() {
    return typeCase_ == 2;
  }
  /**
   * <pre>
   * writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
   */
  public org.oneflow.core.vm.OperandProto getMutOperand() {
    if (typeCase_ == 2) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }
  /**
   * <pre>
   * writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
   */
  public org.oneflow.core.vm.OperandProtoOrBuilder getMutOperandOrBuilder() {
    if (typeCase_ == 2) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }

  public static final int MUT2_OPERAND_FIELD_NUMBER = 3;
  /**
   * <pre>
   * mut2 writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
   */
  public boolean hasMut2Operand() {
    return typeCase_ == 3;
  }
  /**
   * <pre>
   * mut2 writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
   */
  public org.oneflow.core.vm.OperandProto getMut2Operand() {
    if (typeCase_ == 3) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }
  /**
   * <pre>
   * mut2 writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
   */
  public org.oneflow.core.vm.OperandProtoOrBuilder getMut2OperandOrBuilder() {
    if (typeCase_ == 3) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }

  public static final int DEL_OPERAND_FIELD_NUMBER = 4;
  /**
   * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
   */
  public boolean hasDelOperand() {
    return typeCase_ == 4;
  }
  /**
   * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
   */
  public org.oneflow.core.vm.OperandProto getDelOperand() {
    if (typeCase_ == 4) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }
  /**
   * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
   */
  public org.oneflow.core.vm.OperandProtoOrBuilder getDelOperandOrBuilder() {
    if (typeCase_ == 4) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }

  public static final int SYMBOL_OPERAND_FIELD_NUMBER = 5;
  /**
   * <pre>
   * read only symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
   */
  public boolean hasSymbolOperand() {
    return typeCase_ == 5;
  }
  /**
   * <pre>
   * read only symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
   */
  public org.oneflow.core.vm.OperandProto getSymbolOperand() {
    if (typeCase_ == 5) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }
  /**
   * <pre>
   * read only symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
   */
  public org.oneflow.core.vm.OperandProtoOrBuilder getSymbolOperandOrBuilder() {
    if (typeCase_ == 5) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }

  public static final int INIT_SYMBOL_OPERAND_FIELD_NUMBER = 6;
  /**
   * <pre>
   * initializable symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
   */
  public boolean hasInitSymbolOperand() {
    return typeCase_ == 6;
  }
  /**
   * <pre>
   * initializable symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
   */
  public org.oneflow.core.vm.OperandProto getInitSymbolOperand() {
    if (typeCase_ == 6) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }
  /**
   * <pre>
   * initializable symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
   */
  public org.oneflow.core.vm.OperandProtoOrBuilder getInitSymbolOperandOrBuilder() {
    if (typeCase_ == 6) {
       return (org.oneflow.core.vm.OperandProto) type_;
    }
    return org.oneflow.core.vm.OperandProto.getDefaultInstance();
  }

  public static final int SEPARATOR_FIELD_NUMBER = 7;
  /**
   * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
   */
  public boolean hasSeparator() {
    return typeCase_ == 7;
  }
  /**
   * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
   */
  public org.oneflow.core.vm.OperandSeparatorProto getSeparator() {
    if (typeCase_ == 7) {
       return (org.oneflow.core.vm.OperandSeparatorProto) type_;
    }
    return org.oneflow.core.vm.OperandSeparatorProto.getDefaultInstance();
  }
  /**
   * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
   */
  public org.oneflow.core.vm.OperandSeparatorProtoOrBuilder getSeparatorOrBuilder() {
    if (typeCase_ == 7) {
       return (org.oneflow.core.vm.OperandSeparatorProto) type_;
    }
    return org.oneflow.core.vm.OperandSeparatorProto.getDefaultInstance();
  }

  public static final int DOUBLE_OPERAND_FIELD_NUMBER = 8;
  /**
   * <code>optional double double_operand = 8;</code>
   */
  public boolean hasDoubleOperand() {
    return typeCase_ == 8;
  }
  /**
   * <code>optional double double_operand = 8;</code>
   */
  public double getDoubleOperand() {
    if (typeCase_ == 8) {
      return (java.lang.Double) type_;
    }
    return 0D;
  }

  public static final int INT64_OPERAND_FIELD_NUMBER = 9;
  /**
   * <code>optional int64 int64_operand = 9;</code>
   */
  public boolean hasInt64Operand() {
    return typeCase_ == 9;
  }
  /**
   * <code>optional int64 int64_operand = 9;</code>
   */
  public long getInt64Operand() {
    if (typeCase_ == 9) {
      return (java.lang.Long) type_;
    }
    return 0L;
  }

  public static final int UINT64_OPERAND_FIELD_NUMBER = 10;
  /**
   * <code>optional uint64 uint64_operand = 10;</code>
   */
  public boolean hasUint64Operand() {
    return typeCase_ == 10;
  }
  /**
   * <code>optional uint64 uint64_operand = 10;</code>
   */
  public long getUint64Operand() {
    if (typeCase_ == 10) {
      return (java.lang.Long) type_;
    }
    return 0L;
  }

  public static final int BOOL_OPERAND_FIELD_NUMBER = 11;
  /**
   * <code>optional bool bool_operand = 11;</code>
   */
  public boolean hasBoolOperand() {
    return typeCase_ == 11;
  }
  /**
   * <code>optional bool bool_operand = 11;</code>
   */
  public boolean getBoolOperand() {
    if (typeCase_ == 11) {
      return (java.lang.Boolean) type_;
    }
    return false;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasConstOperand()) {
      if (!getConstOperand().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasMutOperand()) {
      if (!getMutOperand().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasMut2Operand()) {
      if (!getMut2Operand().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasDelOperand()) {
      if (!getDelOperand().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasSymbolOperand()) {
      if (!getSymbolOperand().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasInitSymbolOperand()) {
      if (!getInitSymbolOperand().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 3) {
      output.writeMessage(3, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 4) {
      output.writeMessage(4, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 5) {
      output.writeMessage(5, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 6) {
      output.writeMessage(6, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 7) {
      output.writeMessage(7, (org.oneflow.core.vm.OperandSeparatorProto) type_);
    }
    if (typeCase_ == 8) {
      output.writeDouble(
          8, (double)((java.lang.Double) type_));
    }
    if (typeCase_ == 9) {
      output.writeInt64(
          9, (long)((java.lang.Long) type_));
    }
    if (typeCase_ == 10) {
      output.writeUInt64(
          10, (long)((java.lang.Long) type_));
    }
    if (typeCase_ == 11) {
      output.writeBool(
          11, (boolean)((java.lang.Boolean) type_));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.oneflow.core.vm.OperandProto) type_);
    }
    if (typeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (org.oneflow.core.vm.OperandSeparatorProto) type_);
    }
    if (typeCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            8, (double)((java.lang.Double) type_));
    }
    if (typeCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            9, (long)((java.lang.Long) type_));
    }
    if (typeCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(
            10, (long)((java.lang.Long) type_));
    }
    if (typeCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            11, (boolean)((java.lang.Boolean) type_));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.oneflow.core.vm.InstructionOperandProto)) {
      return super.equals(obj);
    }
    org.oneflow.core.vm.InstructionOperandProto other = (org.oneflow.core.vm.InstructionOperandProto) obj;

    boolean result = true;
    result = result && getTypeCase().equals(
        other.getTypeCase());
    if (!result) return false;
    switch (typeCase_) {
      case 1:
        result = result && getConstOperand()
            .equals(other.getConstOperand());
        break;
      case 2:
        result = result && getMutOperand()
            .equals(other.getMutOperand());
        break;
      case 3:
        result = result && getMut2Operand()
            .equals(other.getMut2Operand());
        break;
      case 4:
        result = result && getDelOperand()
            .equals(other.getDelOperand());
        break;
      case 5:
        result = result && getSymbolOperand()
            .equals(other.getSymbolOperand());
        break;
      case 6:
        result = result && getInitSymbolOperand()
            .equals(other.getInitSymbolOperand());
        break;
      case 7:
        result = result && getSeparator()
            .equals(other.getSeparator());
        break;
      case 8:
        result = result && (
            java.lang.Double.doubleToLongBits(getDoubleOperand())
            == java.lang.Double.doubleToLongBits(
                other.getDoubleOperand()));
        break;
      case 9:
        result = result && (getInt64Operand()
            == other.getInt64Operand());
        break;
      case 10:
        result = result && (getUint64Operand()
            == other.getUint64Operand());
        break;
      case 11:
        result = result && (getBoolOperand()
            == other.getBoolOperand());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    switch (typeCase_) {
      case 1:
        hash = (37 * hash) + CONST_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + getConstOperand().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MUT_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + getMutOperand().hashCode();
        break;
      case 3:
        hash = (37 * hash) + MUT2_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + getMut2Operand().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DEL_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + getDelOperand().hashCode();
        break;
      case 5:
        hash = (37 * hash) + SYMBOL_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolOperand().hashCode();
        break;
      case 6:
        hash = (37 * hash) + INIT_SYMBOL_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + getInitSymbolOperand().hashCode();
        break;
      case 7:
        hash = (37 * hash) + SEPARATOR_FIELD_NUMBER;
        hash = (53 * hash) + getSeparator().hashCode();
        break;
      case 8:
        hash = (37 * hash) + DOUBLE_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDoubleOperand()));
        break;
      case 9:
        hash = (37 * hash) + INT64_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInt64Operand());
        break;
      case 10:
        hash = (37 * hash) + UINT64_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUint64Operand());
        break;
      case 11:
        hash = (37 * hash) + BOOL_OPERAND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBoolOperand());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.vm.InstructionOperandProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.oneflow.core.vm.InstructionOperandProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code oneflow.vm.InstructionOperandProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oneflow.vm.InstructionOperandProto)
      org.oneflow.core.vm.InstructionOperandProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.oneflow.core.vm.Instruction.internal_static_oneflow_vm_InstructionOperandProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.oneflow.core.vm.Instruction.internal_static_oneflow_vm_InstructionOperandProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.oneflow.core.vm.InstructionOperandProto.class, org.oneflow.core.vm.InstructionOperandProto.Builder.class);
    }

    // Construct using org.oneflow.core.vm.InstructionOperandProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.oneflow.core.vm.Instruction.internal_static_oneflow_vm_InstructionOperandProto_descriptor;
    }

    public org.oneflow.core.vm.InstructionOperandProto getDefaultInstanceForType() {
      return org.oneflow.core.vm.InstructionOperandProto.getDefaultInstance();
    }

    public org.oneflow.core.vm.InstructionOperandProto build() {
      org.oneflow.core.vm.InstructionOperandProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.oneflow.core.vm.InstructionOperandProto buildPartial() {
      org.oneflow.core.vm.InstructionOperandProto result = new org.oneflow.core.vm.InstructionOperandProto(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (typeCase_ == 1) {
        if (constOperandBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = constOperandBuilder_.build();
        }
      }
      if (typeCase_ == 2) {
        if (mutOperandBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = mutOperandBuilder_.build();
        }
      }
      if (typeCase_ == 3) {
        if (mut2OperandBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = mut2OperandBuilder_.build();
        }
      }
      if (typeCase_ == 4) {
        if (delOperandBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = delOperandBuilder_.build();
        }
      }
      if (typeCase_ == 5) {
        if (symbolOperandBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = symbolOperandBuilder_.build();
        }
      }
      if (typeCase_ == 6) {
        if (initSymbolOperandBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = initSymbolOperandBuilder_.build();
        }
      }
      if (typeCase_ == 7) {
        if (separatorBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = separatorBuilder_.build();
        }
      }
      if (typeCase_ == 8) {
        result.type_ = type_;
      }
      if (typeCase_ == 9) {
        result.type_ = type_;
      }
      if (typeCase_ == 10) {
        result.type_ = type_;
      }
      if (typeCase_ == 11) {
        result.type_ = type_;
      }
      result.bitField0_ = to_bitField0_;
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.oneflow.core.vm.InstructionOperandProto) {
        return mergeFrom((org.oneflow.core.vm.InstructionOperandProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.oneflow.core.vm.InstructionOperandProto other) {
      if (other == org.oneflow.core.vm.InstructionOperandProto.getDefaultInstance()) return this;
      switch (other.getTypeCase()) {
        case CONST_OPERAND: {
          mergeConstOperand(other.getConstOperand());
          break;
        }
        case MUT_OPERAND: {
          mergeMutOperand(other.getMutOperand());
          break;
        }
        case MUT2_OPERAND: {
          mergeMut2Operand(other.getMut2Operand());
          break;
        }
        case DEL_OPERAND: {
          mergeDelOperand(other.getDelOperand());
          break;
        }
        case SYMBOL_OPERAND: {
          mergeSymbolOperand(other.getSymbolOperand());
          break;
        }
        case INIT_SYMBOL_OPERAND: {
          mergeInitSymbolOperand(other.getInitSymbolOperand());
          break;
        }
        case SEPARATOR: {
          mergeSeparator(other.getSeparator());
          break;
        }
        case DOUBLE_OPERAND: {
          setDoubleOperand(other.getDoubleOperand());
          break;
        }
        case INT64_OPERAND: {
          setInt64Operand(other.getInt64Operand());
          break;
        }
        case UINT64_OPERAND: {
          setUint64Operand(other.getUint64Operand());
          break;
        }
        case BOOL_OPERAND: {
          setBoolOperand(other.getBoolOperand());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (hasConstOperand()) {
        if (!getConstOperand().isInitialized()) {
          return false;
        }
      }
      if (hasMutOperand()) {
        if (!getMutOperand().isInitialized()) {
          return false;
        }
      }
      if (hasMut2Operand()) {
        if (!getMut2Operand().isInitialized()) {
          return false;
        }
      }
      if (hasDelOperand()) {
        if (!getDelOperand().isInitialized()) {
          return false;
        }
      }
      if (hasSymbolOperand()) {
        if (!getSymbolOperand().isInitialized()) {
          return false;
        }
      }
      if (hasInitSymbolOperand()) {
        if (!getInitSymbolOperand().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.oneflow.core.vm.InstructionOperandProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.oneflow.core.vm.InstructionOperandProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> constOperandBuilder_;
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public boolean hasConstOperand() {
      return typeCase_ == 1;
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public org.oneflow.core.vm.OperandProto getConstOperand() {
      if (constOperandBuilder_ == null) {
        if (typeCase_ == 1) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      } else {
        if (typeCase_ == 1) {
          return constOperandBuilder_.getMessage();
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public Builder setConstOperand(org.oneflow.core.vm.OperandProto value) {
      if (constOperandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        constOperandBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public Builder setConstOperand(
        org.oneflow.core.vm.OperandProto.Builder builderForValue) {
      if (constOperandBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        constOperandBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public Builder mergeConstOperand(org.oneflow.core.vm.OperandProto value) {
      if (constOperandBuilder_ == null) {
        if (typeCase_ == 1 &&
            type_ != org.oneflow.core.vm.OperandProto.getDefaultInstance()) {
          type_ = org.oneflow.core.vm.OperandProto.newBuilder((org.oneflow.core.vm.OperandProto) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 1) {
          constOperandBuilder_.mergeFrom(value);
        }
        constOperandBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public Builder clearConstOperand() {
      if (constOperandBuilder_ == null) {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
        }
        constOperandBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public org.oneflow.core.vm.OperandProto.Builder getConstOperandBuilder() {
      return getConstOperandFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    public org.oneflow.core.vm.OperandProtoOrBuilder getConstOperandOrBuilder() {
      if ((typeCase_ == 1) && (constOperandBuilder_ != null)) {
        return constOperandBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 1) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * read only object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> 
        getConstOperandFieldBuilder() {
      if (constOperandBuilder_ == null) {
        if (!(typeCase_ == 1)) {
          type_ = org.oneflow.core.vm.OperandProto.getDefaultInstance();
        }
        constOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder>(
                (org.oneflow.core.vm.OperandProto) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 1;
      onChanged();;
      return constOperandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> mutOperandBuilder_;
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public boolean hasMutOperand() {
      return typeCase_ == 2;
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public org.oneflow.core.vm.OperandProto getMutOperand() {
      if (mutOperandBuilder_ == null) {
        if (typeCase_ == 2) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return mutOperandBuilder_.getMessage();
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public Builder setMutOperand(org.oneflow.core.vm.OperandProto value) {
      if (mutOperandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        mutOperandBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public Builder setMutOperand(
        org.oneflow.core.vm.OperandProto.Builder builderForValue) {
      if (mutOperandBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        mutOperandBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public Builder mergeMutOperand(org.oneflow.core.vm.OperandProto value) {
      if (mutOperandBuilder_ == null) {
        if (typeCase_ == 2 &&
            type_ != org.oneflow.core.vm.OperandProto.getDefaultInstance()) {
          type_ = org.oneflow.core.vm.OperandProto.newBuilder((org.oneflow.core.vm.OperandProto) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          mutOperandBuilder_.mergeFrom(value);
        }
        mutOperandBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public Builder clearMutOperand() {
      if (mutOperandBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        mutOperandBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public org.oneflow.core.vm.OperandProto.Builder getMutOperandBuilder() {
      return getMutOperandFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    public org.oneflow.core.vm.OperandProtoOrBuilder getMutOperandOrBuilder() {
      if ((typeCase_ == 2) && (mutOperandBuilder_ != null)) {
        return mutOperandBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> 
        getMutOperandFieldBuilder() {
      if (mutOperandBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = org.oneflow.core.vm.OperandProto.getDefaultInstance();
        }
        mutOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder>(
                (org.oneflow.core.vm.OperandProto) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();;
      return mutOperandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> mut2OperandBuilder_;
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public boolean hasMut2Operand() {
      return typeCase_ == 3;
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public org.oneflow.core.vm.OperandProto getMut2Operand() {
      if (mut2OperandBuilder_ == null) {
        if (typeCase_ == 3) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      } else {
        if (typeCase_ == 3) {
          return mut2OperandBuilder_.getMessage();
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public Builder setMut2Operand(org.oneflow.core.vm.OperandProto value) {
      if (mut2OperandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        mut2OperandBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public Builder setMut2Operand(
        org.oneflow.core.vm.OperandProto.Builder builderForValue) {
      if (mut2OperandBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        mut2OperandBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public Builder mergeMut2Operand(org.oneflow.core.vm.OperandProto value) {
      if (mut2OperandBuilder_ == null) {
        if (typeCase_ == 3 &&
            type_ != org.oneflow.core.vm.OperandProto.getDefaultInstance()) {
          type_ = org.oneflow.core.vm.OperandProto.newBuilder((org.oneflow.core.vm.OperandProto) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 3) {
          mut2OperandBuilder_.mergeFrom(value);
        }
        mut2OperandBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public Builder clearMut2Operand() {
      if (mut2OperandBuilder_ == null) {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
        }
        mut2OperandBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public org.oneflow.core.vm.OperandProto.Builder getMut2OperandBuilder() {
      return getMut2OperandFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    public org.oneflow.core.vm.OperandProtoOrBuilder getMut2OperandOrBuilder() {
      if ((typeCase_ == 3) && (mut2OperandBuilder_ != null)) {
        return mut2OperandBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 3) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * mut2 writeable object
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> 
        getMut2OperandFieldBuilder() {
      if (mut2OperandBuilder_ == null) {
        if (!(typeCase_ == 3)) {
          type_ = org.oneflow.core.vm.OperandProto.getDefaultInstance();
        }
        mut2OperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder>(
                (org.oneflow.core.vm.OperandProto) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 3;
      onChanged();;
      return mut2OperandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> delOperandBuilder_;
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public boolean hasDelOperand() {
      return typeCase_ == 4;
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public org.oneflow.core.vm.OperandProto getDelOperand() {
      if (delOperandBuilder_ == null) {
        if (typeCase_ == 4) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      } else {
        if (typeCase_ == 4) {
          return delOperandBuilder_.getMessage();
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public Builder setDelOperand(org.oneflow.core.vm.OperandProto value) {
      if (delOperandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        delOperandBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public Builder setDelOperand(
        org.oneflow.core.vm.OperandProto.Builder builderForValue) {
      if (delOperandBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        delOperandBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public Builder mergeDelOperand(org.oneflow.core.vm.OperandProto value) {
      if (delOperandBuilder_ == null) {
        if (typeCase_ == 4 &&
            type_ != org.oneflow.core.vm.OperandProto.getDefaultInstance()) {
          type_ = org.oneflow.core.vm.OperandProto.newBuilder((org.oneflow.core.vm.OperandProto) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 4) {
          delOperandBuilder_.mergeFrom(value);
        }
        delOperandBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public Builder clearDelOperand() {
      if (delOperandBuilder_ == null) {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
        }
        delOperandBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public org.oneflow.core.vm.OperandProto.Builder getDelOperandBuilder() {
      return getDelOperandFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    public org.oneflow.core.vm.OperandProtoOrBuilder getDelOperandOrBuilder() {
      if ((typeCase_ == 4) && (delOperandBuilder_ != null)) {
        return delOperandBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 4) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> 
        getDelOperandFieldBuilder() {
      if (delOperandBuilder_ == null) {
        if (!(typeCase_ == 4)) {
          type_ = org.oneflow.core.vm.OperandProto.getDefaultInstance();
        }
        delOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder>(
                (org.oneflow.core.vm.OperandProto) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 4;
      onChanged();;
      return delOperandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> symbolOperandBuilder_;
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public boolean hasSymbolOperand() {
      return typeCase_ == 5;
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public org.oneflow.core.vm.OperandProto getSymbolOperand() {
      if (symbolOperandBuilder_ == null) {
        if (typeCase_ == 5) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      } else {
        if (typeCase_ == 5) {
          return symbolOperandBuilder_.getMessage();
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public Builder setSymbolOperand(org.oneflow.core.vm.OperandProto value) {
      if (symbolOperandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        symbolOperandBuilder_.setMessage(value);
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public Builder setSymbolOperand(
        org.oneflow.core.vm.OperandProto.Builder builderForValue) {
      if (symbolOperandBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        symbolOperandBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public Builder mergeSymbolOperand(org.oneflow.core.vm.OperandProto value) {
      if (symbolOperandBuilder_ == null) {
        if (typeCase_ == 5 &&
            type_ != org.oneflow.core.vm.OperandProto.getDefaultInstance()) {
          type_ = org.oneflow.core.vm.OperandProto.newBuilder((org.oneflow.core.vm.OperandProto) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 5) {
          symbolOperandBuilder_.mergeFrom(value);
        }
        symbolOperandBuilder_.setMessage(value);
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public Builder clearSymbolOperand() {
      if (symbolOperandBuilder_ == null) {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
        }
        symbolOperandBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public org.oneflow.core.vm.OperandProto.Builder getSymbolOperandBuilder() {
      return getSymbolOperandFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    public org.oneflow.core.vm.OperandProtoOrBuilder getSymbolOperandOrBuilder() {
      if ((typeCase_ == 5) && (symbolOperandBuilder_ != null)) {
        return symbolOperandBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 5) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * read only symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> 
        getSymbolOperandFieldBuilder() {
      if (symbolOperandBuilder_ == null) {
        if (!(typeCase_ == 5)) {
          type_ = org.oneflow.core.vm.OperandProto.getDefaultInstance();
        }
        symbolOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder>(
                (org.oneflow.core.vm.OperandProto) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 5;
      onChanged();;
      return symbolOperandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> initSymbolOperandBuilder_;
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public boolean hasInitSymbolOperand() {
      return typeCase_ == 6;
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public org.oneflow.core.vm.OperandProto getInitSymbolOperand() {
      if (initSymbolOperandBuilder_ == null) {
        if (typeCase_ == 6) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      } else {
        if (typeCase_ == 6) {
          return initSymbolOperandBuilder_.getMessage();
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public Builder setInitSymbolOperand(org.oneflow.core.vm.OperandProto value) {
      if (initSymbolOperandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        initSymbolOperandBuilder_.setMessage(value);
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public Builder setInitSymbolOperand(
        org.oneflow.core.vm.OperandProto.Builder builderForValue) {
      if (initSymbolOperandBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        initSymbolOperandBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public Builder mergeInitSymbolOperand(org.oneflow.core.vm.OperandProto value) {
      if (initSymbolOperandBuilder_ == null) {
        if (typeCase_ == 6 &&
            type_ != org.oneflow.core.vm.OperandProto.getDefaultInstance()) {
          type_ = org.oneflow.core.vm.OperandProto.newBuilder((org.oneflow.core.vm.OperandProto) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 6) {
          initSymbolOperandBuilder_.mergeFrom(value);
        }
        initSymbolOperandBuilder_.setMessage(value);
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public Builder clearInitSymbolOperand() {
      if (initSymbolOperandBuilder_ == null) {
        if (typeCase_ == 6) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 6) {
          typeCase_ = 0;
          type_ = null;
        }
        initSymbolOperandBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public org.oneflow.core.vm.OperandProto.Builder getInitSymbolOperandBuilder() {
      return getInitSymbolOperandFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    public org.oneflow.core.vm.OperandProtoOrBuilder getInitSymbolOperandOrBuilder() {
      if ((typeCase_ == 6) && (initSymbolOperandBuilder_ != null)) {
        return initSymbolOperandBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 6) {
          return (org.oneflow.core.vm.OperandProto) type_;
        }
        return org.oneflow.core.vm.OperandProto.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * initializable symbol
     * </pre>
     *
     * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder> 
        getInitSymbolOperandFieldBuilder() {
      if (initSymbolOperandBuilder_ == null) {
        if (!(typeCase_ == 6)) {
          type_ = org.oneflow.core.vm.OperandProto.getDefaultInstance();
        }
        initSymbolOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.vm.OperandProto, org.oneflow.core.vm.OperandProto.Builder, org.oneflow.core.vm.OperandProtoOrBuilder>(
                (org.oneflow.core.vm.OperandProto) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 6;
      onChanged();;
      return initSymbolOperandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandSeparatorProto, org.oneflow.core.vm.OperandSeparatorProto.Builder, org.oneflow.core.vm.OperandSeparatorProtoOrBuilder> separatorBuilder_;
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public boolean hasSeparator() {
      return typeCase_ == 7;
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public org.oneflow.core.vm.OperandSeparatorProto getSeparator() {
      if (separatorBuilder_ == null) {
        if (typeCase_ == 7) {
          return (org.oneflow.core.vm.OperandSeparatorProto) type_;
        }
        return org.oneflow.core.vm.OperandSeparatorProto.getDefaultInstance();
      } else {
        if (typeCase_ == 7) {
          return separatorBuilder_.getMessage();
        }
        return org.oneflow.core.vm.OperandSeparatorProto.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public Builder setSeparator(org.oneflow.core.vm.OperandSeparatorProto value) {
      if (separatorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        separatorBuilder_.setMessage(value);
      }
      typeCase_ = 7;
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public Builder setSeparator(
        org.oneflow.core.vm.OperandSeparatorProto.Builder builderForValue) {
      if (separatorBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        separatorBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 7;
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public Builder mergeSeparator(org.oneflow.core.vm.OperandSeparatorProto value) {
      if (separatorBuilder_ == null) {
        if (typeCase_ == 7 &&
            type_ != org.oneflow.core.vm.OperandSeparatorProto.getDefaultInstance()) {
          type_ = org.oneflow.core.vm.OperandSeparatorProto.newBuilder((org.oneflow.core.vm.OperandSeparatorProto) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 7) {
          separatorBuilder_.mergeFrom(value);
        }
        separatorBuilder_.setMessage(value);
      }
      typeCase_ = 7;
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public Builder clearSeparator() {
      if (separatorBuilder_ == null) {
        if (typeCase_ == 7) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 7) {
          typeCase_ = 0;
          type_ = null;
        }
        separatorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public org.oneflow.core.vm.OperandSeparatorProto.Builder getSeparatorBuilder() {
      return getSeparatorFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    public org.oneflow.core.vm.OperandSeparatorProtoOrBuilder getSeparatorOrBuilder() {
      if ((typeCase_ == 7) && (separatorBuilder_ != null)) {
        return separatorBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 7) {
          return (org.oneflow.core.vm.OperandSeparatorProto) type_;
        }
        return org.oneflow.core.vm.OperandSeparatorProto.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.vm.OperandSeparatorProto, org.oneflow.core.vm.OperandSeparatorProto.Builder, org.oneflow.core.vm.OperandSeparatorProtoOrBuilder> 
        getSeparatorFieldBuilder() {
      if (separatorBuilder_ == null) {
        if (!(typeCase_ == 7)) {
          type_ = org.oneflow.core.vm.OperandSeparatorProto.getDefaultInstance();
        }
        separatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.vm.OperandSeparatorProto, org.oneflow.core.vm.OperandSeparatorProto.Builder, org.oneflow.core.vm.OperandSeparatorProtoOrBuilder>(
                (org.oneflow.core.vm.OperandSeparatorProto) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 7;
      onChanged();;
      return separatorBuilder_;
    }

    /**
     * <code>optional double double_operand = 8;</code>
     */
    public boolean hasDoubleOperand() {
      return typeCase_ == 8;
    }
    /**
     * <code>optional double double_operand = 8;</code>
     */
    public double getDoubleOperand() {
      if (typeCase_ == 8) {
        return (java.lang.Double) type_;
      }
      return 0D;
    }
    /**
     * <code>optional double double_operand = 8;</code>
     */
    public Builder setDoubleOperand(double value) {
      typeCase_ = 8;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double double_operand = 8;</code>
     */
    public Builder clearDoubleOperand() {
      if (typeCase_ == 8) {
        typeCase_ = 0;
        type_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional int64 int64_operand = 9;</code>
     */
    public boolean hasInt64Operand() {
      return typeCase_ == 9;
    }
    /**
     * <code>optional int64 int64_operand = 9;</code>
     */
    public long getInt64Operand() {
      if (typeCase_ == 9) {
        return (java.lang.Long) type_;
      }
      return 0L;
    }
    /**
     * <code>optional int64 int64_operand = 9;</code>
     */
    public Builder setInt64Operand(long value) {
      typeCase_ = 9;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 int64_operand = 9;</code>
     */
    public Builder clearInt64Operand() {
      if (typeCase_ == 9) {
        typeCase_ = 0;
        type_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional uint64 uint64_operand = 10;</code>
     */
    public boolean hasUint64Operand() {
      return typeCase_ == 10;
    }
    /**
     * <code>optional uint64 uint64_operand = 10;</code>
     */
    public long getUint64Operand() {
      if (typeCase_ == 10) {
        return (java.lang.Long) type_;
      }
      return 0L;
    }
    /**
     * <code>optional uint64 uint64_operand = 10;</code>
     */
    public Builder setUint64Operand(long value) {
      typeCase_ = 10;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint64 uint64_operand = 10;</code>
     */
    public Builder clearUint64Operand() {
      if (typeCase_ == 10) {
        typeCase_ = 0;
        type_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional bool bool_operand = 11;</code>
     */
    public boolean hasBoolOperand() {
      return typeCase_ == 11;
    }
    /**
     * <code>optional bool bool_operand = 11;</code>
     */
    public boolean getBoolOperand() {
      if (typeCase_ == 11) {
        return (java.lang.Boolean) type_;
      }
      return false;
    }
    /**
     * <code>optional bool bool_operand = 11;</code>
     */
    public Builder setBoolOperand(boolean value) {
      typeCase_ = 11;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool bool_operand = 11;</code>
     */
    public Builder clearBoolOperand() {
      if (typeCase_ == 11) {
        typeCase_ = 0;
        type_ = null;
        onChanged();
      }
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oneflow.vm.InstructionOperandProto)
  }

  // @@protoc_insertion_point(class_scope:oneflow.vm.InstructionOperandProto)
  private static final org.oneflow.core.vm.InstructionOperandProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.oneflow.core.vm.InstructionOperandProto();
  }

  public static org.oneflow.core.vm.InstructionOperandProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<InstructionOperandProto>
      PARSER = new com.google.protobuf.AbstractParser<InstructionOperandProto>() {
    public InstructionOperandProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstructionOperandProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<InstructionOperandProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InstructionOperandProto> getParserForType() {
    return PARSER;
  }

  public org.oneflow.core.vm.InstructionOperandProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

