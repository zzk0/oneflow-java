// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/vm/instruction.proto

package org.oneflow.core.vm;

public interface InstructionOperandProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.vm.InstructionOperandProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * read only object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
   */
  boolean hasConstOperand();
  /**
   * <pre>
   * read only object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
   */
  org.oneflow.core.vm.OperandProto getConstOperand();
  /**
   * <pre>
   * read only object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto const_operand = 1;</code>
   */
  org.oneflow.core.vm.OperandProtoOrBuilder getConstOperandOrBuilder();

  /**
   * <pre>
   * writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
   */
  boolean hasMutOperand();
  /**
   * <pre>
   * writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
   */
  org.oneflow.core.vm.OperandProto getMutOperand();
  /**
   * <pre>
   * writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut_operand = 2;</code>
   */
  org.oneflow.core.vm.OperandProtoOrBuilder getMutOperandOrBuilder();

  /**
   * <pre>
   * mut2 writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
   */
  boolean hasMut2Operand();
  /**
   * <pre>
   * mut2 writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
   */
  org.oneflow.core.vm.OperandProto getMut2Operand();
  /**
   * <pre>
   * mut2 writeable object
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto mut2_operand = 3;</code>
   */
  org.oneflow.core.vm.OperandProtoOrBuilder getMut2OperandOrBuilder();

  /**
   * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
   */
  boolean hasDelOperand();
  /**
   * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
   */
  org.oneflow.core.vm.OperandProto getDelOperand();
  /**
   * <code>optional .oneflow.vm.OperandProto del_operand = 4;</code>
   */
  org.oneflow.core.vm.OperandProtoOrBuilder getDelOperandOrBuilder();

  /**
   * <pre>
   * read only symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
   */
  boolean hasSymbolOperand();
  /**
   * <pre>
   * read only symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
   */
  org.oneflow.core.vm.OperandProto getSymbolOperand();
  /**
   * <pre>
   * read only symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto symbol_operand = 5;</code>
   */
  org.oneflow.core.vm.OperandProtoOrBuilder getSymbolOperandOrBuilder();

  /**
   * <pre>
   * initializable symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
   */
  boolean hasInitSymbolOperand();
  /**
   * <pre>
   * initializable symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
   */
  org.oneflow.core.vm.OperandProto getInitSymbolOperand();
  /**
   * <pre>
   * initializable symbol
   * </pre>
   *
   * <code>optional .oneflow.vm.OperandProto init_symbol_operand = 6;</code>
   */
  org.oneflow.core.vm.OperandProtoOrBuilder getInitSymbolOperandOrBuilder();

  /**
   * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
   */
  boolean hasSeparator();
  /**
   * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
   */
  org.oneflow.core.vm.OperandSeparatorProto getSeparator();
  /**
   * <code>optional .oneflow.vm.OperandSeparatorProto separator = 7;</code>
   */
  org.oneflow.core.vm.OperandSeparatorProtoOrBuilder getSeparatorOrBuilder();

  /**
   * <code>optional double double_operand = 8;</code>
   */
  boolean hasDoubleOperand();
  /**
   * <code>optional double double_operand = 8;</code>
   */
  double getDoubleOperand();

  /**
   * <code>optional int64 int64_operand = 9;</code>
   */
  boolean hasInt64Operand();
  /**
   * <code>optional int64 int64_operand = 9;</code>
   */
  long getInt64Operand();

  /**
   * <code>optional uint64 uint64_operand = 10;</code>
   */
  boolean hasUint64Operand();
  /**
   * <code>optional uint64 uint64_operand = 10;</code>
   */
  long getUint64Operand();

  /**
   * <code>optional bool bool_operand = 11;</code>
   */
  boolean hasBoolOperand();
  /**
   * <code>optional bool bool_operand = 11;</code>
   */
  boolean getBoolOperand();

  public org.oneflow.core.vm.InstructionOperandProto.TypeCase getTypeCase();
}
