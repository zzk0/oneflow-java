// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/vm/instruction.proto

package org.oneflow.core.vm;

public interface OperandProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.vm.OperandProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>required int64 logical_object_id = 1;</code>
   */
  boolean hasLogicalObjectId();
  /**
   * <code>required int64 logical_object_id = 1;</code>
   */
  long getLogicalObjectId();

  /**
   * <code>optional .oneflow.vm.CurrentGlobalDeviceIdProto current_global_device_id = 2;</code>
   */
  boolean hasCurrentGlobalDeviceId();
  /**
   * <code>optional .oneflow.vm.CurrentGlobalDeviceIdProto current_global_device_id = 2;</code>
   */
  org.oneflow.core.vm.CurrentGlobalDeviceIdProto getCurrentGlobalDeviceId();
  /**
   * <code>optional .oneflow.vm.CurrentGlobalDeviceIdProto current_global_device_id = 2;</code>
   */
  org.oneflow.core.vm.CurrentGlobalDeviceIdProtoOrBuilder getCurrentGlobalDeviceIdOrBuilder();

  /**
   * <code>optional .oneflow.vm.SoleMirroredObjectProto sole_mirrored_object = 3;</code>
   */
  boolean hasSoleMirroredObject();
  /**
   * <code>optional .oneflow.vm.SoleMirroredObjectProto sole_mirrored_object = 3;</code>
   */
  org.oneflow.core.vm.SoleMirroredObjectProto getSoleMirroredObject();
  /**
   * <code>optional .oneflow.vm.SoleMirroredObjectProto sole_mirrored_object = 3;</code>
   */
  org.oneflow.core.vm.SoleMirroredObjectProtoOrBuilder getSoleMirroredObjectOrBuilder();

  /**
   * <code>optional .oneflow.vm.AllMirroredObjectProto all_mirrored_object = 4;</code>
   */
  boolean hasAllMirroredObject();
  /**
   * <code>optional .oneflow.vm.AllMirroredObjectProto all_mirrored_object = 4;</code>
   */
  org.oneflow.core.vm.AllMirroredObjectProto getAllMirroredObject();
  /**
   * <code>optional .oneflow.vm.AllMirroredObjectProto all_mirrored_object = 4;</code>
   */
  org.oneflow.core.vm.AllMirroredObjectProtoOrBuilder getAllMirroredObjectOrBuilder();

  public org.oneflow.core.vm.OperandProto.OperandTypeCase getOperandTypeCase();
}
