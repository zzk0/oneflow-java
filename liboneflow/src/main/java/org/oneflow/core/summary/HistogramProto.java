// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/summary/summary.proto

package org.oneflow.core.summary;

/**
 * Protobuf type {@code oneflow.summary.HistogramProto}
 */
public  final class HistogramProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oneflow.summary.HistogramProto)
    HistogramProtoOrBuilder {
  // Use HistogramProto.newBuilder() to construct.
  private HistogramProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HistogramProto() {
    min_ = 0D;
    max_ = 0D;
    num_ = 0D;
    sum_ = 0D;
    sumSquares_ = 0D;
    bucketLimit_ = java.util.Collections.emptyList();
    bucket_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HistogramProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 9: {
            bitField0_ |= 0x00000001;
            min_ = input.readDouble();
            break;
          }
          case 17: {
            bitField0_ |= 0x00000002;
            max_ = input.readDouble();
            break;
          }
          case 25: {
            bitField0_ |= 0x00000004;
            num_ = input.readDouble();
            break;
          }
          case 33: {
            bitField0_ |= 0x00000008;
            sum_ = input.readDouble();
            break;
          }
          case 41: {
            bitField0_ |= 0x00000010;
            sumSquares_ = input.readDouble();
            break;
          }
          case 49: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              bucketLimit_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000020;
            }
            bucketLimit_.add(input.readDouble());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              bucketLimit_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              bucketLimit_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 57: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              bucket_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000040;
            }
            bucket_.add(input.readDouble());
            break;
          }
          case 58: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
              bucket_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              bucket_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        bucketLimit_ = java.util.Collections.unmodifiableList(bucketLimit_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        bucket_ = java.util.Collections.unmodifiableList(bucket_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.oneflow.core.summary.SummaryOuterClass.internal_static_oneflow_summary_HistogramProto_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.oneflow.core.summary.SummaryOuterClass.internal_static_oneflow_summary_HistogramProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.oneflow.core.summary.HistogramProto.class, org.oneflow.core.summary.HistogramProto.Builder.class);
  }

  private int bitField0_;
  public static final int MIN_FIELD_NUMBER = 1;
  private double min_;
  /**
   * <code>required double min = 1;</code>
   */
  public boolean hasMin() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required double min = 1;</code>
   */
  public double getMin() {
    return min_;
  }

  public static final int MAX_FIELD_NUMBER = 2;
  private double max_;
  /**
   * <code>required double max = 2;</code>
   */
  public boolean hasMax() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required double max = 2;</code>
   */
  public double getMax() {
    return max_;
  }

  public static final int NUM_FIELD_NUMBER = 3;
  private double num_;
  /**
   * <code>required double num = 3;</code>
   */
  public boolean hasNum() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required double num = 3;</code>
   */
  public double getNum() {
    return num_;
  }

  public static final int SUM_FIELD_NUMBER = 4;
  private double sum_;
  /**
   * <code>required double sum = 4;</code>
   */
  public boolean hasSum() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>required double sum = 4;</code>
   */
  public double getSum() {
    return sum_;
  }

  public static final int SUM_SQUARES_FIELD_NUMBER = 5;
  private double sumSquares_;
  /**
   * <code>required double sum_squares = 5;</code>
   */
  public boolean hasSumSquares() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>required double sum_squares = 5;</code>
   */
  public double getSumSquares() {
    return sumSquares_;
  }

  public static final int BUCKET_LIMIT_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Double> bucketLimit_;
  /**
   * <code>repeated double bucket_limit = 6 [packed = true];</code>
   */
  public java.util.List<java.lang.Double>
      getBucketLimitList() {
    return bucketLimit_;
  }
  /**
   * <code>repeated double bucket_limit = 6 [packed = true];</code>
   */
  public int getBucketLimitCount() {
    return bucketLimit_.size();
  }
  /**
   * <code>repeated double bucket_limit = 6 [packed = true];</code>
   */
  public double getBucketLimit(int index) {
    return bucketLimit_.get(index);
  }
  private int bucketLimitMemoizedSerializedSize = -1;

  public static final int BUCKET_FIELD_NUMBER = 7;
  private java.util.List<java.lang.Double> bucket_;
  /**
   * <code>repeated double bucket = 7 [packed = true];</code>
   */
  public java.util.List<java.lang.Double>
      getBucketList() {
    return bucket_;
  }
  /**
   * <code>repeated double bucket = 7 [packed = true];</code>
   */
  public int getBucketCount() {
    return bucket_.size();
  }
  /**
   * <code>repeated double bucket = 7 [packed = true];</code>
   */
  public double getBucket(int index) {
    return bucket_.get(index);
  }
  private int bucketMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasMin()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMax()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasNum()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasSum()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasSumSquares()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeDouble(1, min_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeDouble(2, max_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeDouble(3, num_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeDouble(4, sum_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeDouble(5, sumSquares_);
    }
    if (getBucketLimitList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(bucketLimitMemoizedSerializedSize);
    }
    for (int i = 0; i < bucketLimit_.size(); i++) {
      output.writeDoubleNoTag(bucketLimit_.get(i));
    }
    if (getBucketList().size() > 0) {
      output.writeUInt32NoTag(58);
      output.writeUInt32NoTag(bucketMemoizedSerializedSize);
    }
    for (int i = 0; i < bucket_.size(); i++) {
      output.writeDoubleNoTag(bucket_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, min_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, max_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, num_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, sum_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, sumSquares_);
    }
    {
      int dataSize = 0;
      dataSize = 8 * getBucketLimitList().size();
      size += dataSize;
      if (!getBucketLimitList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      bucketLimitMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getBucketList().size();
      size += dataSize;
      if (!getBucketList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      bucketMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.oneflow.core.summary.HistogramProto)) {
      return super.equals(obj);
    }
    org.oneflow.core.summary.HistogramProto other = (org.oneflow.core.summary.HistogramProto) obj;

    boolean result = true;
    result = result && (hasMin() == other.hasMin());
    if (hasMin()) {
      result = result && (
          java.lang.Double.doubleToLongBits(getMin())
          == java.lang.Double.doubleToLongBits(
              other.getMin()));
    }
    result = result && (hasMax() == other.hasMax());
    if (hasMax()) {
      result = result && (
          java.lang.Double.doubleToLongBits(getMax())
          == java.lang.Double.doubleToLongBits(
              other.getMax()));
    }
    result = result && (hasNum() == other.hasNum());
    if (hasNum()) {
      result = result && (
          java.lang.Double.doubleToLongBits(getNum())
          == java.lang.Double.doubleToLongBits(
              other.getNum()));
    }
    result = result && (hasSum() == other.hasSum());
    if (hasSum()) {
      result = result && (
          java.lang.Double.doubleToLongBits(getSum())
          == java.lang.Double.doubleToLongBits(
              other.getSum()));
    }
    result = result && (hasSumSquares() == other.hasSumSquares());
    if (hasSumSquares()) {
      result = result && (
          java.lang.Double.doubleToLongBits(getSumSquares())
          == java.lang.Double.doubleToLongBits(
              other.getSumSquares()));
    }
    result = result && getBucketLimitList()
        .equals(other.getBucketLimitList());
    result = result && getBucketList()
        .equals(other.getBucketList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasMin()) {
      hash = (37 * hash) + MIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMin()));
    }
    if (hasMax()) {
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMax()));
    }
    if (hasNum()) {
      hash = (37 * hash) + NUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNum()));
    }
    if (hasSum()) {
      hash = (37 * hash) + SUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSum()));
    }
    if (hasSumSquares()) {
      hash = (37 * hash) + SUM_SQUARES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSumSquares()));
    }
    if (getBucketLimitCount() > 0) {
      hash = (37 * hash) + BUCKET_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getBucketLimitList().hashCode();
    }
    if (getBucketCount() > 0) {
      hash = (37 * hash) + BUCKET_FIELD_NUMBER;
      hash = (53 * hash) + getBucketList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.oneflow.core.summary.HistogramProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.summary.HistogramProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.summary.HistogramProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.summary.HistogramProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.summary.HistogramProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.summary.HistogramProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.summary.HistogramProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.oneflow.core.summary.HistogramProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.summary.HistogramProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.summary.HistogramProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.oneflow.core.summary.HistogramProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code oneflow.summary.HistogramProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oneflow.summary.HistogramProto)
      org.oneflow.core.summary.HistogramProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.oneflow.core.summary.SummaryOuterClass.internal_static_oneflow_summary_HistogramProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.oneflow.core.summary.SummaryOuterClass.internal_static_oneflow_summary_HistogramProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.oneflow.core.summary.HistogramProto.class, org.oneflow.core.summary.HistogramProto.Builder.class);
    }

    // Construct using org.oneflow.core.summary.HistogramProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      min_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000001);
      max_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000002);
      num_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000004);
      sum_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000008);
      sumSquares_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000010);
      bucketLimit_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      bucket_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.oneflow.core.summary.SummaryOuterClass.internal_static_oneflow_summary_HistogramProto_descriptor;
    }

    public org.oneflow.core.summary.HistogramProto getDefaultInstanceForType() {
      return org.oneflow.core.summary.HistogramProto.getDefaultInstance();
    }

    public org.oneflow.core.summary.HistogramProto build() {
      org.oneflow.core.summary.HistogramProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.oneflow.core.summary.HistogramProto buildPartial() {
      org.oneflow.core.summary.HistogramProto result = new org.oneflow.core.summary.HistogramProto(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.min_ = min_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.max_ = max_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.num_ = num_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.sum_ = sum_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.sumSquares_ = sumSquares_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        bucketLimit_ = java.util.Collections.unmodifiableList(bucketLimit_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.bucketLimit_ = bucketLimit_;
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        bucket_ = java.util.Collections.unmodifiableList(bucket_);
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.bucket_ = bucket_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.oneflow.core.summary.HistogramProto) {
        return mergeFrom((org.oneflow.core.summary.HistogramProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.oneflow.core.summary.HistogramProto other) {
      if (other == org.oneflow.core.summary.HistogramProto.getDefaultInstance()) return this;
      if (other.hasMin()) {
        setMin(other.getMin());
      }
      if (other.hasMax()) {
        setMax(other.getMax());
      }
      if (other.hasNum()) {
        setNum(other.getNum());
      }
      if (other.hasSum()) {
        setSum(other.getSum());
      }
      if (other.hasSumSquares()) {
        setSumSquares(other.getSumSquares());
      }
      if (!other.bucketLimit_.isEmpty()) {
        if (bucketLimit_.isEmpty()) {
          bucketLimit_ = other.bucketLimit_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureBucketLimitIsMutable();
          bucketLimit_.addAll(other.bucketLimit_);
        }
        onChanged();
      }
      if (!other.bucket_.isEmpty()) {
        if (bucket_.isEmpty()) {
          bucket_ = other.bucket_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureBucketIsMutable();
          bucket_.addAll(other.bucket_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasMin()) {
        return false;
      }
      if (!hasMax()) {
        return false;
      }
      if (!hasNum()) {
        return false;
      }
      if (!hasSum()) {
        return false;
      }
      if (!hasSumSquares()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.oneflow.core.summary.HistogramProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.oneflow.core.summary.HistogramProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private double min_ ;
    /**
     * <code>required double min = 1;</code>
     */
    public boolean hasMin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double min = 1;</code>
     */
    public double getMin() {
      return min_;
    }
    /**
     * <code>required double min = 1;</code>
     */
    public Builder setMin(double value) {
      bitField0_ |= 0x00000001;
      min_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required double min = 1;</code>
     */
    public Builder clearMin() {
      bitField0_ = (bitField0_ & ~0x00000001);
      min_ = 0D;
      onChanged();
      return this;
    }

    private double max_ ;
    /**
     * <code>required double max = 2;</code>
     */
    public boolean hasMax() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double max = 2;</code>
     */
    public double getMax() {
      return max_;
    }
    /**
     * <code>required double max = 2;</code>
     */
    public Builder setMax(double value) {
      bitField0_ |= 0x00000002;
      max_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required double max = 2;</code>
     */
    public Builder clearMax() {
      bitField0_ = (bitField0_ & ~0x00000002);
      max_ = 0D;
      onChanged();
      return this;
    }

    private double num_ ;
    /**
     * <code>required double num = 3;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double num = 3;</code>
     */
    public double getNum() {
      return num_;
    }
    /**
     * <code>required double num = 3;</code>
     */
    public Builder setNum(double value) {
      bitField0_ |= 0x00000004;
      num_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required double num = 3;</code>
     */
    public Builder clearNum() {
      bitField0_ = (bitField0_ & ~0x00000004);
      num_ = 0D;
      onChanged();
      return this;
    }

    private double sum_ ;
    /**
     * <code>required double sum = 4;</code>
     */
    public boolean hasSum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double sum = 4;</code>
     */
    public double getSum() {
      return sum_;
    }
    /**
     * <code>required double sum = 4;</code>
     */
    public Builder setSum(double value) {
      bitField0_ |= 0x00000008;
      sum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required double sum = 4;</code>
     */
    public Builder clearSum() {
      bitField0_ = (bitField0_ & ~0x00000008);
      sum_ = 0D;
      onChanged();
      return this;
    }

    private double sumSquares_ ;
    /**
     * <code>required double sum_squares = 5;</code>
     */
    public boolean hasSumSquares() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double sum_squares = 5;</code>
     */
    public double getSumSquares() {
      return sumSquares_;
    }
    /**
     * <code>required double sum_squares = 5;</code>
     */
    public Builder setSumSquares(double value) {
      bitField0_ |= 0x00000010;
      sumSquares_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required double sum_squares = 5;</code>
     */
    public Builder clearSumSquares() {
      bitField0_ = (bitField0_ & ~0x00000010);
      sumSquares_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> bucketLimit_ = java.util.Collections.emptyList();
    private void ensureBucketLimitIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        bucketLimit_ = new java.util.ArrayList<java.lang.Double>(bucketLimit_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated double bucket_limit = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getBucketLimitList() {
      return java.util.Collections.unmodifiableList(bucketLimit_);
    }
    /**
     * <code>repeated double bucket_limit = 6 [packed = true];</code>
     */
    public int getBucketLimitCount() {
      return bucketLimit_.size();
    }
    /**
     * <code>repeated double bucket_limit = 6 [packed = true];</code>
     */
    public double getBucketLimit(int index) {
      return bucketLimit_.get(index);
    }
    /**
     * <code>repeated double bucket_limit = 6 [packed = true];</code>
     */
    public Builder setBucketLimit(
        int index, double value) {
      ensureBucketLimitIsMutable();
      bucketLimit_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double bucket_limit = 6 [packed = true];</code>
     */
    public Builder addBucketLimit(double value) {
      ensureBucketLimitIsMutable();
      bucketLimit_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double bucket_limit = 6 [packed = true];</code>
     */
    public Builder addAllBucketLimit(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureBucketLimitIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, bucketLimit_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double bucket_limit = 6 [packed = true];</code>
     */
    public Builder clearBucketLimit() {
      bucketLimit_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> bucket_ = java.util.Collections.emptyList();
    private void ensureBucketIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        bucket_ = new java.util.ArrayList<java.lang.Double>(bucket_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <code>repeated double bucket = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getBucketList() {
      return java.util.Collections.unmodifiableList(bucket_);
    }
    /**
     * <code>repeated double bucket = 7 [packed = true];</code>
     */
    public int getBucketCount() {
      return bucket_.size();
    }
    /**
     * <code>repeated double bucket = 7 [packed = true];</code>
     */
    public double getBucket(int index) {
      return bucket_.get(index);
    }
    /**
     * <code>repeated double bucket = 7 [packed = true];</code>
     */
    public Builder setBucket(
        int index, double value) {
      ensureBucketIsMutable();
      bucket_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double bucket = 7 [packed = true];</code>
     */
    public Builder addBucket(double value) {
      ensureBucketIsMutable();
      bucket_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double bucket = 7 [packed = true];</code>
     */
    public Builder addAllBucket(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureBucketIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, bucket_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double bucket = 7 [packed = true];</code>
     */
    public Builder clearBucket() {
      bucket_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oneflow.summary.HistogramProto)
  }

  // @@protoc_insertion_point(class_scope:oneflow.summary.HistogramProto)
  private static final org.oneflow.core.summary.HistogramProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.oneflow.core.summary.HistogramProto();
  }

  public static org.oneflow.core.summary.HistogramProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<HistogramProto>
      PARSER = new com.google.protobuf.AbstractParser<HistogramProto>() {
    public HistogramProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new HistogramProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HistogramProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HistogramProto> getParserForType() {
    return PARSER;
  }

  public org.oneflow.core.summary.HistogramProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

