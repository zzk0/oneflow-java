// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/learning_rate_schedule_conf.proto

package org.oneflow.core.job;

/**
 * Protobuf type {@code oneflow.WarmupConf}
 */
public  final class WarmupConf extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oneflow.WarmupConf)
    WarmupConfOrBuilder {
  // Use WarmupConf.newBuilder() to construct.
  private WarmupConf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WarmupConf() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WarmupConf(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 24002: {
            org.oneflow.core.job.ConstantWarmupConf.Builder subBuilder = null;
            if (typeCase_ == 3000) {
              subBuilder = ((org.oneflow.core.job.ConstantWarmupConf) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.job.ConstantWarmupConf.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.job.ConstantWarmupConf) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 3000;
            break;
          }
          case 24010: {
            org.oneflow.core.job.LinearWarmupConf.Builder subBuilder = null;
            if (typeCase_ == 3001) {
              subBuilder = ((org.oneflow.core.job.LinearWarmupConf) type_).toBuilder();
            }
            type_ =
                input.readMessage(org.oneflow.core.job.LinearWarmupConf.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.job.LinearWarmupConf) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 3001;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.oneflow.core.job.LearningRateScheduleConf.internal_static_oneflow_WarmupConf_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.oneflow.core.job.LearningRateScheduleConf.internal_static_oneflow_WarmupConf_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.oneflow.core.job.WarmupConf.class, org.oneflow.core.job.WarmupConf.Builder.class);
  }

  private int bitField0_;
  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite {
    CONSTANT_CONF(3000),
    LINEAR_CONF(3001),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 3000: return CONSTANT_CONF;
        case 3001: return LINEAR_CONF;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int CONSTANT_CONF_FIELD_NUMBER = 3000;
  /**
   * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
   */
  public boolean hasConstantConf() {
    return typeCase_ == 3000;
  }
  /**
   * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
   */
  public org.oneflow.core.job.ConstantWarmupConf getConstantConf() {
    if (typeCase_ == 3000) {
       return (org.oneflow.core.job.ConstantWarmupConf) type_;
    }
    return org.oneflow.core.job.ConstantWarmupConf.getDefaultInstance();
  }
  /**
   * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
   */
  public org.oneflow.core.job.ConstantWarmupConfOrBuilder getConstantConfOrBuilder() {
    if (typeCase_ == 3000) {
       return (org.oneflow.core.job.ConstantWarmupConf) type_;
    }
    return org.oneflow.core.job.ConstantWarmupConf.getDefaultInstance();
  }

  public static final int LINEAR_CONF_FIELD_NUMBER = 3001;
  /**
   * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
   */
  public boolean hasLinearConf() {
    return typeCase_ == 3001;
  }
  /**
   * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
   */
  public org.oneflow.core.job.LinearWarmupConf getLinearConf() {
    if (typeCase_ == 3001) {
       return (org.oneflow.core.job.LinearWarmupConf) type_;
    }
    return org.oneflow.core.job.LinearWarmupConf.getDefaultInstance();
  }
  /**
   * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
   */
  public org.oneflow.core.job.LinearWarmupConfOrBuilder getLinearConfOrBuilder() {
    if (typeCase_ == 3001) {
       return (org.oneflow.core.job.LinearWarmupConf) type_;
    }
    return org.oneflow.core.job.LinearWarmupConf.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasConstantConf()) {
      if (!getConstantConf().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasLinearConf()) {
      if (!getLinearConf().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 3000) {
      output.writeMessage(3000, (org.oneflow.core.job.ConstantWarmupConf) type_);
    }
    if (typeCase_ == 3001) {
      output.writeMessage(3001, (org.oneflow.core.job.LinearWarmupConf) type_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 3000) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3000, (org.oneflow.core.job.ConstantWarmupConf) type_);
    }
    if (typeCase_ == 3001) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3001, (org.oneflow.core.job.LinearWarmupConf) type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.oneflow.core.job.WarmupConf)) {
      return super.equals(obj);
    }
    org.oneflow.core.job.WarmupConf other = (org.oneflow.core.job.WarmupConf) obj;

    boolean result = true;
    result = result && getTypeCase().equals(
        other.getTypeCase());
    if (!result) return false;
    switch (typeCase_) {
      case 3000:
        result = result && getConstantConf()
            .equals(other.getConstantConf());
        break;
      case 3001:
        result = result && getLinearConf()
            .equals(other.getLinearConf());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    switch (typeCase_) {
      case 3000:
        hash = (37 * hash) + CONSTANT_CONF_FIELD_NUMBER;
        hash = (53 * hash) + getConstantConf().hashCode();
        break;
      case 3001:
        hash = (37 * hash) + LINEAR_CONF_FIELD_NUMBER;
        hash = (53 * hash) + getLinearConf().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.oneflow.core.job.WarmupConf parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.job.WarmupConf parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.job.WarmupConf parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.job.WarmupConf parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.job.WarmupConf parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.WarmupConf parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.job.WarmupConf parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.WarmupConf parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.job.WarmupConf parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.WarmupConf parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.oneflow.core.job.WarmupConf prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code oneflow.WarmupConf}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oneflow.WarmupConf)
      org.oneflow.core.job.WarmupConfOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.oneflow.core.job.LearningRateScheduleConf.internal_static_oneflow_WarmupConf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.oneflow.core.job.LearningRateScheduleConf.internal_static_oneflow_WarmupConf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.oneflow.core.job.WarmupConf.class, org.oneflow.core.job.WarmupConf.Builder.class);
    }

    // Construct using org.oneflow.core.job.WarmupConf.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.oneflow.core.job.LearningRateScheduleConf.internal_static_oneflow_WarmupConf_descriptor;
    }

    public org.oneflow.core.job.WarmupConf getDefaultInstanceForType() {
      return org.oneflow.core.job.WarmupConf.getDefaultInstance();
    }

    public org.oneflow.core.job.WarmupConf build() {
      org.oneflow.core.job.WarmupConf result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.oneflow.core.job.WarmupConf buildPartial() {
      org.oneflow.core.job.WarmupConf result = new org.oneflow.core.job.WarmupConf(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (typeCase_ == 3000) {
        if (constantConfBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = constantConfBuilder_.build();
        }
      }
      if (typeCase_ == 3001) {
        if (linearConfBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = linearConfBuilder_.build();
        }
      }
      result.bitField0_ = to_bitField0_;
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.oneflow.core.job.WarmupConf) {
        return mergeFrom((org.oneflow.core.job.WarmupConf)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.oneflow.core.job.WarmupConf other) {
      if (other == org.oneflow.core.job.WarmupConf.getDefaultInstance()) return this;
      switch (other.getTypeCase()) {
        case CONSTANT_CONF: {
          mergeConstantConf(other.getConstantConf());
          break;
        }
        case LINEAR_CONF: {
          mergeLinearConf(other.getLinearConf());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (hasConstantConf()) {
        if (!getConstantConf().isInitialized()) {
          return false;
        }
      }
      if (hasLinearConf()) {
        if (!getLinearConf().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.oneflow.core.job.WarmupConf parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.oneflow.core.job.WarmupConf) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ConstantWarmupConf, org.oneflow.core.job.ConstantWarmupConf.Builder, org.oneflow.core.job.ConstantWarmupConfOrBuilder> constantConfBuilder_;
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public boolean hasConstantConf() {
      return typeCase_ == 3000;
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public org.oneflow.core.job.ConstantWarmupConf getConstantConf() {
      if (constantConfBuilder_ == null) {
        if (typeCase_ == 3000) {
          return (org.oneflow.core.job.ConstantWarmupConf) type_;
        }
        return org.oneflow.core.job.ConstantWarmupConf.getDefaultInstance();
      } else {
        if (typeCase_ == 3000) {
          return constantConfBuilder_.getMessage();
        }
        return org.oneflow.core.job.ConstantWarmupConf.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public Builder setConstantConf(org.oneflow.core.job.ConstantWarmupConf value) {
      if (constantConfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        constantConfBuilder_.setMessage(value);
      }
      typeCase_ = 3000;
      return this;
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public Builder setConstantConf(
        org.oneflow.core.job.ConstantWarmupConf.Builder builderForValue) {
      if (constantConfBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        constantConfBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 3000;
      return this;
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public Builder mergeConstantConf(org.oneflow.core.job.ConstantWarmupConf value) {
      if (constantConfBuilder_ == null) {
        if (typeCase_ == 3000 &&
            type_ != org.oneflow.core.job.ConstantWarmupConf.getDefaultInstance()) {
          type_ = org.oneflow.core.job.ConstantWarmupConf.newBuilder((org.oneflow.core.job.ConstantWarmupConf) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 3000) {
          constantConfBuilder_.mergeFrom(value);
        }
        constantConfBuilder_.setMessage(value);
      }
      typeCase_ = 3000;
      return this;
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public Builder clearConstantConf() {
      if (constantConfBuilder_ == null) {
        if (typeCase_ == 3000) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 3000) {
          typeCase_ = 0;
          type_ = null;
        }
        constantConfBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public org.oneflow.core.job.ConstantWarmupConf.Builder getConstantConfBuilder() {
      return getConstantConfFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    public org.oneflow.core.job.ConstantWarmupConfOrBuilder getConstantConfOrBuilder() {
      if ((typeCase_ == 3000) && (constantConfBuilder_ != null)) {
        return constantConfBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 3000) {
          return (org.oneflow.core.job.ConstantWarmupConf) type_;
        }
        return org.oneflow.core.job.ConstantWarmupConf.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.ConstantWarmupConf constant_conf = 3000;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ConstantWarmupConf, org.oneflow.core.job.ConstantWarmupConf.Builder, org.oneflow.core.job.ConstantWarmupConfOrBuilder> 
        getConstantConfFieldBuilder() {
      if (constantConfBuilder_ == null) {
        if (!(typeCase_ == 3000)) {
          type_ = org.oneflow.core.job.ConstantWarmupConf.getDefaultInstance();
        }
        constantConfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.ConstantWarmupConf, org.oneflow.core.job.ConstantWarmupConf.Builder, org.oneflow.core.job.ConstantWarmupConfOrBuilder>(
                (org.oneflow.core.job.ConstantWarmupConf) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 3000;
      onChanged();;
      return constantConfBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.LinearWarmupConf, org.oneflow.core.job.LinearWarmupConf.Builder, org.oneflow.core.job.LinearWarmupConfOrBuilder> linearConfBuilder_;
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public boolean hasLinearConf() {
      return typeCase_ == 3001;
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public org.oneflow.core.job.LinearWarmupConf getLinearConf() {
      if (linearConfBuilder_ == null) {
        if (typeCase_ == 3001) {
          return (org.oneflow.core.job.LinearWarmupConf) type_;
        }
        return org.oneflow.core.job.LinearWarmupConf.getDefaultInstance();
      } else {
        if (typeCase_ == 3001) {
          return linearConfBuilder_.getMessage();
        }
        return org.oneflow.core.job.LinearWarmupConf.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public Builder setLinearConf(org.oneflow.core.job.LinearWarmupConf value) {
      if (linearConfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        linearConfBuilder_.setMessage(value);
      }
      typeCase_ = 3001;
      return this;
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public Builder setLinearConf(
        org.oneflow.core.job.LinearWarmupConf.Builder builderForValue) {
      if (linearConfBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        linearConfBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 3001;
      return this;
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public Builder mergeLinearConf(org.oneflow.core.job.LinearWarmupConf value) {
      if (linearConfBuilder_ == null) {
        if (typeCase_ == 3001 &&
            type_ != org.oneflow.core.job.LinearWarmupConf.getDefaultInstance()) {
          type_ = org.oneflow.core.job.LinearWarmupConf.newBuilder((org.oneflow.core.job.LinearWarmupConf) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 3001) {
          linearConfBuilder_.mergeFrom(value);
        }
        linearConfBuilder_.setMessage(value);
      }
      typeCase_ = 3001;
      return this;
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public Builder clearLinearConf() {
      if (linearConfBuilder_ == null) {
        if (typeCase_ == 3001) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 3001) {
          typeCase_ = 0;
          type_ = null;
        }
        linearConfBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public org.oneflow.core.job.LinearWarmupConf.Builder getLinearConfBuilder() {
      return getLinearConfFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    public org.oneflow.core.job.LinearWarmupConfOrBuilder getLinearConfOrBuilder() {
      if ((typeCase_ == 3001) && (linearConfBuilder_ != null)) {
        return linearConfBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 3001) {
          return (org.oneflow.core.job.LinearWarmupConf) type_;
        }
        return org.oneflow.core.job.LinearWarmupConf.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.LinearWarmupConf linear_conf = 3001;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.LinearWarmupConf, org.oneflow.core.job.LinearWarmupConf.Builder, org.oneflow.core.job.LinearWarmupConfOrBuilder> 
        getLinearConfFieldBuilder() {
      if (linearConfBuilder_ == null) {
        if (!(typeCase_ == 3001)) {
          type_ = org.oneflow.core.job.LinearWarmupConf.getDefaultInstance();
        }
        linearConfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.LinearWarmupConf, org.oneflow.core.job.LinearWarmupConf.Builder, org.oneflow.core.job.LinearWarmupConfOrBuilder>(
                (org.oneflow.core.job.LinearWarmupConf) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 3001;
      onChanged();;
      return linearConfBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oneflow.WarmupConf)
  }

  // @@protoc_insertion_point(class_scope:oneflow.WarmupConf)
  private static final org.oneflow.core.job.WarmupConf DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.oneflow.core.job.WarmupConf();
  }

  public static org.oneflow.core.job.WarmupConf getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<WarmupConf>
      PARSER = new com.google.protobuf.AbstractParser<WarmupConf>() {
    public WarmupConf parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new WarmupConf(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WarmupConf> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WarmupConf> getParserForType() {
    return PARSER;
  }

  public org.oneflow.core.job.WarmupConf getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

