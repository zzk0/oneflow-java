// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/sbp_parallel.proto

package org.oneflow.core.job;

/**
 * Protobuf type {@code oneflow.SbpParallel}
 */
public  final class SbpParallel extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oneflow.SbpParallel)
    SbpParallelOrBuilder {
  // Use SbpParallel.newBuilder() to construct.
  private SbpParallel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SbpParallel() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SbpParallel(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            org.oneflow.core.job.SplitParallel.Builder subBuilder = null;
            if (parallelTypeCase_ == 1) {
              subBuilder = ((org.oneflow.core.job.SplitParallel) parallelType_).toBuilder();
            }
            parallelType_ =
                input.readMessage(org.oneflow.core.job.SplitParallel.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.job.SplitParallel) parallelType_);
              parallelType_ = subBuilder.buildPartial();
            }
            parallelTypeCase_ = 1;
            break;
          }
          case 18: {
            org.oneflow.core.job.BroadcastParallel.Builder subBuilder = null;
            if (parallelTypeCase_ == 2) {
              subBuilder = ((org.oneflow.core.job.BroadcastParallel) parallelType_).toBuilder();
            }
            parallelType_ =
                input.readMessage(org.oneflow.core.job.BroadcastParallel.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.job.BroadcastParallel) parallelType_);
              parallelType_ = subBuilder.buildPartial();
            }
            parallelTypeCase_ = 2;
            break;
          }
          case 26: {
            org.oneflow.core.job.PartialSumParallel.Builder subBuilder = null;
            if (parallelTypeCase_ == 3) {
              subBuilder = ((org.oneflow.core.job.PartialSumParallel) parallelType_).toBuilder();
            }
            parallelType_ =
                input.readMessage(org.oneflow.core.job.PartialSumParallel.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.oneflow.core.job.PartialSumParallel) parallelType_);
              parallelType_ = subBuilder.buildPartial();
            }
            parallelTypeCase_ = 3;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.oneflow.core.job.SbpParallelOuterClass.internal_static_oneflow_SbpParallel_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.oneflow.core.job.SbpParallelOuterClass.internal_static_oneflow_SbpParallel_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.oneflow.core.job.SbpParallel.class, org.oneflow.core.job.SbpParallel.Builder.class);
  }

  private int bitField0_;
  private int parallelTypeCase_ = 0;
  private java.lang.Object parallelType_;
  public enum ParallelTypeCase
      implements com.google.protobuf.Internal.EnumLite {
    SPLIT_PARALLEL(1),
    BROADCAST_PARALLEL(2),
    PARTIAL_SUM_PARALLEL(3),
    PARALLELTYPE_NOT_SET(0);
    private final int value;
    private ParallelTypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParallelTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ParallelTypeCase forNumber(int value) {
      switch (value) {
        case 1: return SPLIT_PARALLEL;
        case 2: return BROADCAST_PARALLEL;
        case 3: return PARTIAL_SUM_PARALLEL;
        case 0: return PARALLELTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ParallelTypeCase
  getParallelTypeCase() {
    return ParallelTypeCase.forNumber(
        parallelTypeCase_);
  }

  public static final int SPLIT_PARALLEL_FIELD_NUMBER = 1;
  /**
   * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
   */
  public boolean hasSplitParallel() {
    return parallelTypeCase_ == 1;
  }
  /**
   * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
   */
  public org.oneflow.core.job.SplitParallel getSplitParallel() {
    if (parallelTypeCase_ == 1) {
       return (org.oneflow.core.job.SplitParallel) parallelType_;
    }
    return org.oneflow.core.job.SplitParallel.getDefaultInstance();
  }
  /**
   * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
   */
  public org.oneflow.core.job.SplitParallelOrBuilder getSplitParallelOrBuilder() {
    if (parallelTypeCase_ == 1) {
       return (org.oneflow.core.job.SplitParallel) parallelType_;
    }
    return org.oneflow.core.job.SplitParallel.getDefaultInstance();
  }

  public static final int BROADCAST_PARALLEL_FIELD_NUMBER = 2;
  /**
   * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
   */
  public boolean hasBroadcastParallel() {
    return parallelTypeCase_ == 2;
  }
  /**
   * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
   */
  public org.oneflow.core.job.BroadcastParallel getBroadcastParallel() {
    if (parallelTypeCase_ == 2) {
       return (org.oneflow.core.job.BroadcastParallel) parallelType_;
    }
    return org.oneflow.core.job.BroadcastParallel.getDefaultInstance();
  }
  /**
   * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
   */
  public org.oneflow.core.job.BroadcastParallelOrBuilder getBroadcastParallelOrBuilder() {
    if (parallelTypeCase_ == 2) {
       return (org.oneflow.core.job.BroadcastParallel) parallelType_;
    }
    return org.oneflow.core.job.BroadcastParallel.getDefaultInstance();
  }

  public static final int PARTIAL_SUM_PARALLEL_FIELD_NUMBER = 3;
  /**
   * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
   */
  public boolean hasPartialSumParallel() {
    return parallelTypeCase_ == 3;
  }
  /**
   * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
   */
  public org.oneflow.core.job.PartialSumParallel getPartialSumParallel() {
    if (parallelTypeCase_ == 3) {
       return (org.oneflow.core.job.PartialSumParallel) parallelType_;
    }
    return org.oneflow.core.job.PartialSumParallel.getDefaultInstance();
  }
  /**
   * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
   */
  public org.oneflow.core.job.PartialSumParallelOrBuilder getPartialSumParallelOrBuilder() {
    if (parallelTypeCase_ == 3) {
       return (org.oneflow.core.job.PartialSumParallel) parallelType_;
    }
    return org.oneflow.core.job.PartialSumParallel.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasSplitParallel()) {
      if (!getSplitParallel().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (parallelTypeCase_ == 1) {
      output.writeMessage(1, (org.oneflow.core.job.SplitParallel) parallelType_);
    }
    if (parallelTypeCase_ == 2) {
      output.writeMessage(2, (org.oneflow.core.job.BroadcastParallel) parallelType_);
    }
    if (parallelTypeCase_ == 3) {
      output.writeMessage(3, (org.oneflow.core.job.PartialSumParallel) parallelType_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (parallelTypeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.oneflow.core.job.SplitParallel) parallelType_);
    }
    if (parallelTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.oneflow.core.job.BroadcastParallel) parallelType_);
    }
    if (parallelTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.oneflow.core.job.PartialSumParallel) parallelType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.oneflow.core.job.SbpParallel)) {
      return super.equals(obj);
    }
    org.oneflow.core.job.SbpParallel other = (org.oneflow.core.job.SbpParallel) obj;

    boolean result = true;
    result = result && getParallelTypeCase().equals(
        other.getParallelTypeCase());
    if (!result) return false;
    switch (parallelTypeCase_) {
      case 1:
        result = result && getSplitParallel()
            .equals(other.getSplitParallel());
        break;
      case 2:
        result = result && getBroadcastParallel()
            .equals(other.getBroadcastParallel());
        break;
      case 3:
        result = result && getPartialSumParallel()
            .equals(other.getPartialSumParallel());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    switch (parallelTypeCase_) {
      case 1:
        hash = (37 * hash) + SPLIT_PARALLEL_FIELD_NUMBER;
        hash = (53 * hash) + getSplitParallel().hashCode();
        break;
      case 2:
        hash = (37 * hash) + BROADCAST_PARALLEL_FIELD_NUMBER;
        hash = (53 * hash) + getBroadcastParallel().hashCode();
        break;
      case 3:
        hash = (37 * hash) + PARTIAL_SUM_PARALLEL_FIELD_NUMBER;
        hash = (53 * hash) + getPartialSumParallel().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.oneflow.core.job.SbpParallel parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.job.SbpParallel parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.job.SbpParallel parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.job.SbpParallel parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.job.SbpParallel parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.SbpParallel parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.job.SbpParallel parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.SbpParallel parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.job.SbpParallel parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.SbpParallel parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.oneflow.core.job.SbpParallel prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code oneflow.SbpParallel}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oneflow.SbpParallel)
      org.oneflow.core.job.SbpParallelOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.oneflow.core.job.SbpParallelOuterClass.internal_static_oneflow_SbpParallel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.oneflow.core.job.SbpParallelOuterClass.internal_static_oneflow_SbpParallel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.oneflow.core.job.SbpParallel.class, org.oneflow.core.job.SbpParallel.Builder.class);
    }

    // Construct using org.oneflow.core.job.SbpParallel.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      parallelTypeCase_ = 0;
      parallelType_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.oneflow.core.job.SbpParallelOuterClass.internal_static_oneflow_SbpParallel_descriptor;
    }

    public org.oneflow.core.job.SbpParallel getDefaultInstanceForType() {
      return org.oneflow.core.job.SbpParallel.getDefaultInstance();
    }

    public org.oneflow.core.job.SbpParallel build() {
      org.oneflow.core.job.SbpParallel result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.oneflow.core.job.SbpParallel buildPartial() {
      org.oneflow.core.job.SbpParallel result = new org.oneflow.core.job.SbpParallel(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (parallelTypeCase_ == 1) {
        if (splitParallelBuilder_ == null) {
          result.parallelType_ = parallelType_;
        } else {
          result.parallelType_ = splitParallelBuilder_.build();
        }
      }
      if (parallelTypeCase_ == 2) {
        if (broadcastParallelBuilder_ == null) {
          result.parallelType_ = parallelType_;
        } else {
          result.parallelType_ = broadcastParallelBuilder_.build();
        }
      }
      if (parallelTypeCase_ == 3) {
        if (partialSumParallelBuilder_ == null) {
          result.parallelType_ = parallelType_;
        } else {
          result.parallelType_ = partialSumParallelBuilder_.build();
        }
      }
      result.bitField0_ = to_bitField0_;
      result.parallelTypeCase_ = parallelTypeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.oneflow.core.job.SbpParallel) {
        return mergeFrom((org.oneflow.core.job.SbpParallel)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.oneflow.core.job.SbpParallel other) {
      if (other == org.oneflow.core.job.SbpParallel.getDefaultInstance()) return this;
      switch (other.getParallelTypeCase()) {
        case SPLIT_PARALLEL: {
          mergeSplitParallel(other.getSplitParallel());
          break;
        }
        case BROADCAST_PARALLEL: {
          mergeBroadcastParallel(other.getBroadcastParallel());
          break;
        }
        case PARTIAL_SUM_PARALLEL: {
          mergePartialSumParallel(other.getPartialSumParallel());
          break;
        }
        case PARALLELTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (hasSplitParallel()) {
        if (!getSplitParallel().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.oneflow.core.job.SbpParallel parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.oneflow.core.job.SbpParallel) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int parallelTypeCase_ = 0;
    private java.lang.Object parallelType_;
    public ParallelTypeCase
        getParallelTypeCase() {
      return ParallelTypeCase.forNumber(
          parallelTypeCase_);
    }

    public Builder clearParallelType() {
      parallelTypeCase_ = 0;
      parallelType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.SplitParallel, org.oneflow.core.job.SplitParallel.Builder, org.oneflow.core.job.SplitParallelOrBuilder> splitParallelBuilder_;
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public boolean hasSplitParallel() {
      return parallelTypeCase_ == 1;
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public org.oneflow.core.job.SplitParallel getSplitParallel() {
      if (splitParallelBuilder_ == null) {
        if (parallelTypeCase_ == 1) {
          return (org.oneflow.core.job.SplitParallel) parallelType_;
        }
        return org.oneflow.core.job.SplitParallel.getDefaultInstance();
      } else {
        if (parallelTypeCase_ == 1) {
          return splitParallelBuilder_.getMessage();
        }
        return org.oneflow.core.job.SplitParallel.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public Builder setSplitParallel(org.oneflow.core.job.SplitParallel value) {
      if (splitParallelBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parallelType_ = value;
        onChanged();
      } else {
        splitParallelBuilder_.setMessage(value);
      }
      parallelTypeCase_ = 1;
      return this;
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public Builder setSplitParallel(
        org.oneflow.core.job.SplitParallel.Builder builderForValue) {
      if (splitParallelBuilder_ == null) {
        parallelType_ = builderForValue.build();
        onChanged();
      } else {
        splitParallelBuilder_.setMessage(builderForValue.build());
      }
      parallelTypeCase_ = 1;
      return this;
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public Builder mergeSplitParallel(org.oneflow.core.job.SplitParallel value) {
      if (splitParallelBuilder_ == null) {
        if (parallelTypeCase_ == 1 &&
            parallelType_ != org.oneflow.core.job.SplitParallel.getDefaultInstance()) {
          parallelType_ = org.oneflow.core.job.SplitParallel.newBuilder((org.oneflow.core.job.SplitParallel) parallelType_)
              .mergeFrom(value).buildPartial();
        } else {
          parallelType_ = value;
        }
        onChanged();
      } else {
        if (parallelTypeCase_ == 1) {
          splitParallelBuilder_.mergeFrom(value);
        }
        splitParallelBuilder_.setMessage(value);
      }
      parallelTypeCase_ = 1;
      return this;
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public Builder clearSplitParallel() {
      if (splitParallelBuilder_ == null) {
        if (parallelTypeCase_ == 1) {
          parallelTypeCase_ = 0;
          parallelType_ = null;
          onChanged();
        }
      } else {
        if (parallelTypeCase_ == 1) {
          parallelTypeCase_ = 0;
          parallelType_ = null;
        }
        splitParallelBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public org.oneflow.core.job.SplitParallel.Builder getSplitParallelBuilder() {
      return getSplitParallelFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    public org.oneflow.core.job.SplitParallelOrBuilder getSplitParallelOrBuilder() {
      if ((parallelTypeCase_ == 1) && (splitParallelBuilder_ != null)) {
        return splitParallelBuilder_.getMessageOrBuilder();
      } else {
        if (parallelTypeCase_ == 1) {
          return (org.oneflow.core.job.SplitParallel) parallelType_;
        }
        return org.oneflow.core.job.SplitParallel.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.SplitParallel split_parallel = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.SplitParallel, org.oneflow.core.job.SplitParallel.Builder, org.oneflow.core.job.SplitParallelOrBuilder> 
        getSplitParallelFieldBuilder() {
      if (splitParallelBuilder_ == null) {
        if (!(parallelTypeCase_ == 1)) {
          parallelType_ = org.oneflow.core.job.SplitParallel.getDefaultInstance();
        }
        splitParallelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.SplitParallel, org.oneflow.core.job.SplitParallel.Builder, org.oneflow.core.job.SplitParallelOrBuilder>(
                (org.oneflow.core.job.SplitParallel) parallelType_,
                getParentForChildren(),
                isClean());
        parallelType_ = null;
      }
      parallelTypeCase_ = 1;
      onChanged();;
      return splitParallelBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.BroadcastParallel, org.oneflow.core.job.BroadcastParallel.Builder, org.oneflow.core.job.BroadcastParallelOrBuilder> broadcastParallelBuilder_;
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public boolean hasBroadcastParallel() {
      return parallelTypeCase_ == 2;
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public org.oneflow.core.job.BroadcastParallel getBroadcastParallel() {
      if (broadcastParallelBuilder_ == null) {
        if (parallelTypeCase_ == 2) {
          return (org.oneflow.core.job.BroadcastParallel) parallelType_;
        }
        return org.oneflow.core.job.BroadcastParallel.getDefaultInstance();
      } else {
        if (parallelTypeCase_ == 2) {
          return broadcastParallelBuilder_.getMessage();
        }
        return org.oneflow.core.job.BroadcastParallel.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public Builder setBroadcastParallel(org.oneflow.core.job.BroadcastParallel value) {
      if (broadcastParallelBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parallelType_ = value;
        onChanged();
      } else {
        broadcastParallelBuilder_.setMessage(value);
      }
      parallelTypeCase_ = 2;
      return this;
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public Builder setBroadcastParallel(
        org.oneflow.core.job.BroadcastParallel.Builder builderForValue) {
      if (broadcastParallelBuilder_ == null) {
        parallelType_ = builderForValue.build();
        onChanged();
      } else {
        broadcastParallelBuilder_.setMessage(builderForValue.build());
      }
      parallelTypeCase_ = 2;
      return this;
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public Builder mergeBroadcastParallel(org.oneflow.core.job.BroadcastParallel value) {
      if (broadcastParallelBuilder_ == null) {
        if (parallelTypeCase_ == 2 &&
            parallelType_ != org.oneflow.core.job.BroadcastParallel.getDefaultInstance()) {
          parallelType_ = org.oneflow.core.job.BroadcastParallel.newBuilder((org.oneflow.core.job.BroadcastParallel) parallelType_)
              .mergeFrom(value).buildPartial();
        } else {
          parallelType_ = value;
        }
        onChanged();
      } else {
        if (parallelTypeCase_ == 2) {
          broadcastParallelBuilder_.mergeFrom(value);
        }
        broadcastParallelBuilder_.setMessage(value);
      }
      parallelTypeCase_ = 2;
      return this;
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public Builder clearBroadcastParallel() {
      if (broadcastParallelBuilder_ == null) {
        if (parallelTypeCase_ == 2) {
          parallelTypeCase_ = 0;
          parallelType_ = null;
          onChanged();
        }
      } else {
        if (parallelTypeCase_ == 2) {
          parallelTypeCase_ = 0;
          parallelType_ = null;
        }
        broadcastParallelBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public org.oneflow.core.job.BroadcastParallel.Builder getBroadcastParallelBuilder() {
      return getBroadcastParallelFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    public org.oneflow.core.job.BroadcastParallelOrBuilder getBroadcastParallelOrBuilder() {
      if ((parallelTypeCase_ == 2) && (broadcastParallelBuilder_ != null)) {
        return broadcastParallelBuilder_.getMessageOrBuilder();
      } else {
        if (parallelTypeCase_ == 2) {
          return (org.oneflow.core.job.BroadcastParallel) parallelType_;
        }
        return org.oneflow.core.job.BroadcastParallel.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.BroadcastParallel broadcast_parallel = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.BroadcastParallel, org.oneflow.core.job.BroadcastParallel.Builder, org.oneflow.core.job.BroadcastParallelOrBuilder> 
        getBroadcastParallelFieldBuilder() {
      if (broadcastParallelBuilder_ == null) {
        if (!(parallelTypeCase_ == 2)) {
          parallelType_ = org.oneflow.core.job.BroadcastParallel.getDefaultInstance();
        }
        broadcastParallelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.BroadcastParallel, org.oneflow.core.job.BroadcastParallel.Builder, org.oneflow.core.job.BroadcastParallelOrBuilder>(
                (org.oneflow.core.job.BroadcastParallel) parallelType_,
                getParentForChildren(),
                isClean());
        parallelType_ = null;
      }
      parallelTypeCase_ = 2;
      onChanged();;
      return broadcastParallelBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.PartialSumParallel, org.oneflow.core.job.PartialSumParallel.Builder, org.oneflow.core.job.PartialSumParallelOrBuilder> partialSumParallelBuilder_;
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public boolean hasPartialSumParallel() {
      return parallelTypeCase_ == 3;
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public org.oneflow.core.job.PartialSumParallel getPartialSumParallel() {
      if (partialSumParallelBuilder_ == null) {
        if (parallelTypeCase_ == 3) {
          return (org.oneflow.core.job.PartialSumParallel) parallelType_;
        }
        return org.oneflow.core.job.PartialSumParallel.getDefaultInstance();
      } else {
        if (parallelTypeCase_ == 3) {
          return partialSumParallelBuilder_.getMessage();
        }
        return org.oneflow.core.job.PartialSumParallel.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public Builder setPartialSumParallel(org.oneflow.core.job.PartialSumParallel value) {
      if (partialSumParallelBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parallelType_ = value;
        onChanged();
      } else {
        partialSumParallelBuilder_.setMessage(value);
      }
      parallelTypeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public Builder setPartialSumParallel(
        org.oneflow.core.job.PartialSumParallel.Builder builderForValue) {
      if (partialSumParallelBuilder_ == null) {
        parallelType_ = builderForValue.build();
        onChanged();
      } else {
        partialSumParallelBuilder_.setMessage(builderForValue.build());
      }
      parallelTypeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public Builder mergePartialSumParallel(org.oneflow.core.job.PartialSumParallel value) {
      if (partialSumParallelBuilder_ == null) {
        if (parallelTypeCase_ == 3 &&
            parallelType_ != org.oneflow.core.job.PartialSumParallel.getDefaultInstance()) {
          parallelType_ = org.oneflow.core.job.PartialSumParallel.newBuilder((org.oneflow.core.job.PartialSumParallel) parallelType_)
              .mergeFrom(value).buildPartial();
        } else {
          parallelType_ = value;
        }
        onChanged();
      } else {
        if (parallelTypeCase_ == 3) {
          partialSumParallelBuilder_.mergeFrom(value);
        }
        partialSumParallelBuilder_.setMessage(value);
      }
      parallelTypeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public Builder clearPartialSumParallel() {
      if (partialSumParallelBuilder_ == null) {
        if (parallelTypeCase_ == 3) {
          parallelTypeCase_ = 0;
          parallelType_ = null;
          onChanged();
        }
      } else {
        if (parallelTypeCase_ == 3) {
          parallelTypeCase_ = 0;
          parallelType_ = null;
        }
        partialSumParallelBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public org.oneflow.core.job.PartialSumParallel.Builder getPartialSumParallelBuilder() {
      return getPartialSumParallelFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    public org.oneflow.core.job.PartialSumParallelOrBuilder getPartialSumParallelOrBuilder() {
      if ((parallelTypeCase_ == 3) && (partialSumParallelBuilder_ != null)) {
        return partialSumParallelBuilder_.getMessageOrBuilder();
      } else {
        if (parallelTypeCase_ == 3) {
          return (org.oneflow.core.job.PartialSumParallel) parallelType_;
        }
        return org.oneflow.core.job.PartialSumParallel.getDefaultInstance();
      }
    }
    /**
     * <code>optional .oneflow.PartialSumParallel partial_sum_parallel = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.PartialSumParallel, org.oneflow.core.job.PartialSumParallel.Builder, org.oneflow.core.job.PartialSumParallelOrBuilder> 
        getPartialSumParallelFieldBuilder() {
      if (partialSumParallelBuilder_ == null) {
        if (!(parallelTypeCase_ == 3)) {
          parallelType_ = org.oneflow.core.job.PartialSumParallel.getDefaultInstance();
        }
        partialSumParallelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.PartialSumParallel, org.oneflow.core.job.PartialSumParallel.Builder, org.oneflow.core.job.PartialSumParallelOrBuilder>(
                (org.oneflow.core.job.PartialSumParallel) parallelType_,
                getParentForChildren(),
                isClean());
        parallelType_ = null;
      }
      parallelTypeCase_ = 3;
      onChanged();;
      return partialSumParallelBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oneflow.SbpParallel)
  }

  // @@protoc_insertion_point(class_scope:oneflow.SbpParallel)
  private static final org.oneflow.core.job.SbpParallel DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.oneflow.core.job.SbpParallel();
  }

  public static org.oneflow.core.job.SbpParallel getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<SbpParallel>
      PARSER = new com.google.protobuf.AbstractParser<SbpParallel>() {
    public SbpParallel parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new SbpParallel(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SbpParallel> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SbpParallel> getParserForType() {
    return PARSER;
  }

  public org.oneflow.core.job.SbpParallel getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

