// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/job.proto

package org.oneflow.core.job;

/**
 * Protobuf type {@code oneflow.JobParallelViewConf}
 */
public  final class JobParallelViewConf extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oneflow.JobParallelViewConf)
    JobParallelViewConfOrBuilder {
  // Use JobParallelViewConf.newBuilder() to construct.
  private JobParallelViewConf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private JobParallelViewConf() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private JobParallelViewConf(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              opName2SbpSignatureConf_ = com.google.protobuf.MapField.newMapField(
                  OpName2SbpSignatureConfDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>
            opName2SbpSignatureConf = input.readMessage(
                OpName2SbpSignatureConfDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            opName2SbpSignatureConf_.getMutableMap().put(opName2SbpSignatureConf.getKey(), opName2SbpSignatureConf.getValue());
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              opName2IsMirroredParallelView_ = com.google.protobuf.MapField.newMapField(
                  OpName2IsMirroredParallelViewDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
            opName2IsMirroredParallelView = input.readMessage(
                OpName2IsMirroredParallelViewDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            opName2IsMirroredParallelView_.getMutableMap().put(opName2IsMirroredParallelView.getKey(), opName2IsMirroredParallelView.getValue());
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              opName2ParallelDistributionSignatureConf_ = com.google.protobuf.MapField.newMapField(
                  OpName2ParallelDistributionSignatureConfDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>
            opName2ParallelDistributionSignatureConf = input.readMessage(
                OpName2ParallelDistributionSignatureConfDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            opName2ParallelDistributionSignatureConf_.getMutableMap().put(opName2ParallelDistributionSignatureConf.getKey(), opName2ParallelDistributionSignatureConf.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetOpName2SbpSignatureConf();
      case 2:
        return internalGetOpName2IsMirroredParallelView();
      case 3:
        return internalGetOpName2ParallelDistributionSignatureConf();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.oneflow.core.job.JobParallelViewConf.class, org.oneflow.core.job.JobParallelViewConf.Builder.class);
  }

  public static final int OP_NAME2SBP_SIGNATURE_CONF_FIELD_NUMBER = 1;
  private static final class OpName2SbpSignatureConfDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>newDefaultInstance(
                org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_OpName2sbpSignatureConfEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                oneflow.SbpParallelOuterClass.SbpSignature.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> opName2SbpSignatureConf_;
  private com.google.protobuf.MapField<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>
  internalGetOpName2SbpSignatureConf() {
    if (opName2SbpSignatureConf_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          OpName2SbpSignatureConfDefaultEntryHolder.defaultEntry);
    }
    return opName2SbpSignatureConf_;
  }

  public int getOpName2SbpSignatureConfCount() {
    return internalGetOpName2SbpSignatureConf().getMap().size();
  }
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */

  public boolean containsOpName2SbpSignatureConf(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetOpName2SbpSignatureConf().getMap().containsKey(key);
  }
  /**
   * Use {@link #getOpName2SbpSignatureConfMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> getOpName2SbpSignatureConf() {
    return getOpName2SbpSignatureConfMap();
  }
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */

  public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> getOpName2SbpSignatureConfMap() {
    return internalGetOpName2SbpSignatureConf().getMap();
  }
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */

  public oneflow.SbpParallelOuterClass.SbpSignature getOpName2SbpSignatureConfOrDefault(
      java.lang.String key,
      oneflow.SbpParallelOuterClass.SbpSignature defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> map =
        internalGetOpName2SbpSignatureConf().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */

  public oneflow.SbpParallelOuterClass.SbpSignature getOpName2SbpSignatureConfOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> map =
        internalGetOpName2SbpSignatureConf().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int OP_NAME2IS_MIRRORED_PARALLEL_VIEW_FIELD_NUMBER = 2;
  private static final class OpName2IsMirroredParallelViewDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Boolean> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Boolean>newDefaultInstance(
                org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_OpName2isMirroredParallelViewEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.BOOL,
                false);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Boolean> opName2IsMirroredParallelView_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
  internalGetOpName2IsMirroredParallelView() {
    if (opName2IsMirroredParallelView_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          OpName2IsMirroredParallelViewDefaultEntryHolder.defaultEntry);
    }
    return opName2IsMirroredParallelView_;
  }

  public int getOpName2IsMirroredParallelViewCount() {
    return internalGetOpName2IsMirroredParallelView().getMap().size();
  }
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */

  public boolean containsOpName2IsMirroredParallelView(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetOpName2IsMirroredParallelView().getMap().containsKey(key);
  }
  /**
   * Use {@link #getOpName2IsMirroredParallelViewMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Boolean> getOpName2IsMirroredParallelView() {
    return getOpName2IsMirroredParallelViewMap();
  }
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */

  public java.util.Map<java.lang.String, java.lang.Boolean> getOpName2IsMirroredParallelViewMap() {
    return internalGetOpName2IsMirroredParallelView().getMap();
  }
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */

  public boolean getOpName2IsMirroredParallelViewOrDefault(
      java.lang.String key,
      boolean defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Boolean> map =
        internalGetOpName2IsMirroredParallelView().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */

  public boolean getOpName2IsMirroredParallelViewOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Boolean> map =
        internalGetOpName2IsMirroredParallelView().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int OP_NAME2PARALLEL_DISTRIBUTION_SIGNATURE_CONF_FIELD_NUMBER = 3;
  private static final class OpName2ParallelDistributionSignatureConfDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>newDefaultInstance(
                org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_OpName2parallelDistributionSignatureConfEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                oneflow.SbpParallelOuterClass.ParallelDistributionSignature.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> opName2ParallelDistributionSignatureConf_;
  private com.google.protobuf.MapField<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>
  internalGetOpName2ParallelDistributionSignatureConf() {
    if (opName2ParallelDistributionSignatureConf_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          OpName2ParallelDistributionSignatureConfDefaultEntryHolder.defaultEntry);
    }
    return opName2ParallelDistributionSignatureConf_;
  }

  public int getOpName2ParallelDistributionSignatureConfCount() {
    return internalGetOpName2ParallelDistributionSignatureConf().getMap().size();
  }
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */

  public boolean containsOpName2ParallelDistributionSignatureConf(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetOpName2ParallelDistributionSignatureConf().getMap().containsKey(key);
  }
  /**
   * Use {@link #getOpName2ParallelDistributionSignatureConfMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> getOpName2ParallelDistributionSignatureConf() {
    return getOpName2ParallelDistributionSignatureConfMap();
  }
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */

  public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> getOpName2ParallelDistributionSignatureConfMap() {
    return internalGetOpName2ParallelDistributionSignatureConf().getMap();
  }
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */

  public oneflow.SbpParallelOuterClass.ParallelDistributionSignature getOpName2ParallelDistributionSignatureConfOrDefault(
      java.lang.String key,
      oneflow.SbpParallelOuterClass.ParallelDistributionSignature defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> map =
        internalGetOpName2ParallelDistributionSignatureConf().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */

  public oneflow.SbpParallelOuterClass.ParallelDistributionSignature getOpName2ParallelDistributionSignatureConfOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> map =
        internalGetOpName2ParallelDistributionSignatureConf().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    for (oneflow.SbpParallelOuterClass.SbpSignature item : getOpName2SbpSignatureConf().values()) {
      if (!item.isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (oneflow.SbpParallelOuterClass.ParallelDistributionSignature item : getOpName2ParallelDistributionSignatureConf().values()) {
      if (!item.isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (java.util.Map.Entry<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> entry
         : internalGetOpName2SbpSignatureConf().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>
      opName2SbpSignatureConf = OpName2SbpSignatureConfDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(1, opName2SbpSignatureConf);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry
         : internalGetOpName2IsMirroredParallelView().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
      opName2IsMirroredParallelView = OpName2IsMirroredParallelViewDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(2, opName2IsMirroredParallelView);
    }
    for (java.util.Map.Entry<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> entry
         : internalGetOpName2ParallelDistributionSignatureConf().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>
      opName2ParallelDistributionSignatureConf = OpName2ParallelDistributionSignatureConfDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(3, opName2ParallelDistributionSignatureConf);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> entry
         : internalGetOpName2SbpSignatureConf().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>
      opName2SbpSignatureConf = OpName2SbpSignatureConfDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, opName2SbpSignatureConf);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry
         : internalGetOpName2IsMirroredParallelView().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
      opName2IsMirroredParallelView = OpName2IsMirroredParallelViewDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, opName2IsMirroredParallelView);
    }
    for (java.util.Map.Entry<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> entry
         : internalGetOpName2ParallelDistributionSignatureConf().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>
      opName2ParallelDistributionSignatureConf = OpName2ParallelDistributionSignatureConfDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, opName2ParallelDistributionSignatureConf);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.oneflow.core.job.JobParallelViewConf)) {
      return super.equals(obj);
    }
    org.oneflow.core.job.JobParallelViewConf other = (org.oneflow.core.job.JobParallelViewConf) obj;

    boolean result = true;
    result = result && internalGetOpName2SbpSignatureConf().equals(
        other.internalGetOpName2SbpSignatureConf());
    result = result && internalGetOpName2IsMirroredParallelView().equals(
        other.internalGetOpName2IsMirroredParallelView());
    result = result && internalGetOpName2ParallelDistributionSignatureConf().equals(
        other.internalGetOpName2ParallelDistributionSignatureConf());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (!internalGetOpName2SbpSignatureConf().getMap().isEmpty()) {
      hash = (37 * hash) + OP_NAME2SBP_SIGNATURE_CONF_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOpName2SbpSignatureConf().hashCode();
    }
    if (!internalGetOpName2IsMirroredParallelView().getMap().isEmpty()) {
      hash = (37 * hash) + OP_NAME2IS_MIRRORED_PARALLEL_VIEW_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOpName2IsMirroredParallelView().hashCode();
    }
    if (!internalGetOpName2ParallelDistributionSignatureConf().getMap().isEmpty()) {
      hash = (37 * hash) + OP_NAME2PARALLEL_DISTRIBUTION_SIGNATURE_CONF_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOpName2ParallelDistributionSignatureConf().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.oneflow.core.job.JobParallelViewConf parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.job.JobParallelViewConf parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.oneflow.core.job.JobParallelViewConf prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code oneflow.JobParallelViewConf}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oneflow.JobParallelViewConf)
      org.oneflow.core.job.JobParallelViewConfOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetOpName2SbpSignatureConf();
        case 2:
          return internalGetOpName2IsMirroredParallelView();
        case 3:
          return internalGetOpName2ParallelDistributionSignatureConf();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableOpName2SbpSignatureConf();
        case 2:
          return internalGetMutableOpName2IsMirroredParallelView();
        case 3:
          return internalGetMutableOpName2ParallelDistributionSignatureConf();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.oneflow.core.job.JobParallelViewConf.class, org.oneflow.core.job.JobParallelViewConf.Builder.class);
    }

    // Construct using org.oneflow.core.job.JobParallelViewConf.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      internalGetMutableOpName2SbpSignatureConf().clear();
      internalGetMutableOpName2IsMirroredParallelView().clear();
      internalGetMutableOpName2ParallelDistributionSignatureConf().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.oneflow.core.job.JobOuterClass.internal_static_oneflow_JobParallelViewConf_descriptor;
    }

    public org.oneflow.core.job.JobParallelViewConf getDefaultInstanceForType() {
      return org.oneflow.core.job.JobParallelViewConf.getDefaultInstance();
    }

    public org.oneflow.core.job.JobParallelViewConf build() {
      org.oneflow.core.job.JobParallelViewConf result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.oneflow.core.job.JobParallelViewConf buildPartial() {
      org.oneflow.core.job.JobParallelViewConf result = new org.oneflow.core.job.JobParallelViewConf(this);
      int from_bitField0_ = bitField0_;
      result.opName2SbpSignatureConf_ = internalGetOpName2SbpSignatureConf();
      result.opName2SbpSignatureConf_.makeImmutable();
      result.opName2IsMirroredParallelView_ = internalGetOpName2IsMirroredParallelView();
      result.opName2IsMirroredParallelView_.makeImmutable();
      result.opName2ParallelDistributionSignatureConf_ = internalGetOpName2ParallelDistributionSignatureConf();
      result.opName2ParallelDistributionSignatureConf_.makeImmutable();
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.oneflow.core.job.JobParallelViewConf) {
        return mergeFrom((org.oneflow.core.job.JobParallelViewConf)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.oneflow.core.job.JobParallelViewConf other) {
      if (other == org.oneflow.core.job.JobParallelViewConf.getDefaultInstance()) return this;
      internalGetMutableOpName2SbpSignatureConf().mergeFrom(
          other.internalGetOpName2SbpSignatureConf());
      internalGetMutableOpName2IsMirroredParallelView().mergeFrom(
          other.internalGetOpName2IsMirroredParallelView());
      internalGetMutableOpName2ParallelDistributionSignatureConf().mergeFrom(
          other.internalGetOpName2ParallelDistributionSignatureConf());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      for (oneflow.SbpParallelOuterClass.SbpSignature item : getOpName2SbpSignatureConf().values()) {
        if (!item.isInitialized()) {
          return false;
        }
      }
      for (oneflow.SbpParallelOuterClass.ParallelDistributionSignature item : getOpName2ParallelDistributionSignatureConf().values()) {
        if (!item.isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.oneflow.core.job.JobParallelViewConf parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.oneflow.core.job.JobParallelViewConf) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> opName2SbpSignatureConf_;
    private com.google.protobuf.MapField<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>
    internalGetOpName2SbpSignatureConf() {
      if (opName2SbpSignatureConf_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OpName2SbpSignatureConfDefaultEntryHolder.defaultEntry);
      }
      return opName2SbpSignatureConf_;
    }
    private com.google.protobuf.MapField<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>
    internalGetMutableOpName2SbpSignatureConf() {
      onChanged();;
      if (opName2SbpSignatureConf_ == null) {
        opName2SbpSignatureConf_ = com.google.protobuf.MapField.newMapField(
            OpName2SbpSignatureConfDefaultEntryHolder.defaultEntry);
      }
      if (!opName2SbpSignatureConf_.isMutable()) {
        opName2SbpSignatureConf_ = opName2SbpSignatureConf_.copy();
      }
      return opName2SbpSignatureConf_;
    }

    public int getOpName2SbpSignatureConfCount() {
      return internalGetOpName2SbpSignatureConf().getMap().size();
    }
    /**
     * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
     */

    public boolean containsOpName2SbpSignatureConf(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetOpName2SbpSignatureConf().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOpName2SbpSignatureConfMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> getOpName2SbpSignatureConf() {
      return getOpName2SbpSignatureConfMap();
    }
    /**
     * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
     */

    public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> getOpName2SbpSignatureConfMap() {
      return internalGetOpName2SbpSignatureConf().getMap();
    }
    /**
     * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
     */

    public oneflow.SbpParallelOuterClass.SbpSignature getOpName2SbpSignatureConfOrDefault(
        java.lang.String key,
        oneflow.SbpParallelOuterClass.SbpSignature defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> map =
          internalGetOpName2SbpSignatureConf().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
     */

    public oneflow.SbpParallelOuterClass.SbpSignature getOpName2SbpSignatureConfOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> map =
          internalGetOpName2SbpSignatureConf().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearOpName2SbpSignatureConf() {
      getMutableOpName2SbpSignatureConf().clear();
      return this;
    }
    /**
     * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
     */

    public Builder removeOpName2SbpSignatureConf(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableOpName2SbpSignatureConf().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature>
    getMutableOpName2SbpSignatureConf() {
      return internalGetMutableOpName2SbpSignatureConf().getMutableMap();
    }
    /**
     * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
     */
    public Builder putOpName2SbpSignatureConf(
        java.lang.String key,
        oneflow.SbpParallelOuterClass.SbpSignature value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      getMutableOpName2SbpSignatureConf().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
     */

    public Builder putAllOpName2SbpSignatureConf(
        java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.SbpSignature> values) {
      getMutableOpName2SbpSignatureConf().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Boolean> opName2IsMirroredParallelView_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
    internalGetOpName2IsMirroredParallelView() {
      if (opName2IsMirroredParallelView_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OpName2IsMirroredParallelViewDefaultEntryHolder.defaultEntry);
      }
      return opName2IsMirroredParallelView_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
    internalGetMutableOpName2IsMirroredParallelView() {
      onChanged();;
      if (opName2IsMirroredParallelView_ == null) {
        opName2IsMirroredParallelView_ = com.google.protobuf.MapField.newMapField(
            OpName2IsMirroredParallelViewDefaultEntryHolder.defaultEntry);
      }
      if (!opName2IsMirroredParallelView_.isMutable()) {
        opName2IsMirroredParallelView_ = opName2IsMirroredParallelView_.copy();
      }
      return opName2IsMirroredParallelView_;
    }

    public int getOpName2IsMirroredParallelViewCount() {
      return internalGetOpName2IsMirroredParallelView().getMap().size();
    }
    /**
     * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
     */

    public boolean containsOpName2IsMirroredParallelView(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetOpName2IsMirroredParallelView().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOpName2IsMirroredParallelViewMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Boolean> getOpName2IsMirroredParallelView() {
      return getOpName2IsMirroredParallelViewMap();
    }
    /**
     * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Boolean> getOpName2IsMirroredParallelViewMap() {
      return internalGetOpName2IsMirroredParallelView().getMap();
    }
    /**
     * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
     */

    public boolean getOpName2IsMirroredParallelViewOrDefault(
        java.lang.String key,
        boolean defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetOpName2IsMirroredParallelView().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
     */

    public boolean getOpName2IsMirroredParallelViewOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetOpName2IsMirroredParallelView().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearOpName2IsMirroredParallelView() {
      getMutableOpName2IsMirroredParallelView().clear();
      return this;
    }
    /**
     * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
     */

    public Builder removeOpName2IsMirroredParallelView(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableOpName2IsMirroredParallelView().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Boolean>
    getMutableOpName2IsMirroredParallelView() {
      return internalGetMutableOpName2IsMirroredParallelView().getMutableMap();
    }
    /**
     * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
     */
    public Builder putOpName2IsMirroredParallelView(
        java.lang.String key,
        boolean value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      getMutableOpName2IsMirroredParallelView().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
     */

    public Builder putAllOpName2IsMirroredParallelView(
        java.util.Map<java.lang.String, java.lang.Boolean> values) {
      getMutableOpName2IsMirroredParallelView().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> opName2ParallelDistributionSignatureConf_;
    private com.google.protobuf.MapField<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>
    internalGetOpName2ParallelDistributionSignatureConf() {
      if (opName2ParallelDistributionSignatureConf_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OpName2ParallelDistributionSignatureConfDefaultEntryHolder.defaultEntry);
      }
      return opName2ParallelDistributionSignatureConf_;
    }
    private com.google.protobuf.MapField<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>
    internalGetMutableOpName2ParallelDistributionSignatureConf() {
      onChanged();;
      if (opName2ParallelDistributionSignatureConf_ == null) {
        opName2ParallelDistributionSignatureConf_ = com.google.protobuf.MapField.newMapField(
            OpName2ParallelDistributionSignatureConfDefaultEntryHolder.defaultEntry);
      }
      if (!opName2ParallelDistributionSignatureConf_.isMutable()) {
        opName2ParallelDistributionSignatureConf_ = opName2ParallelDistributionSignatureConf_.copy();
      }
      return opName2ParallelDistributionSignatureConf_;
    }

    public int getOpName2ParallelDistributionSignatureConfCount() {
      return internalGetOpName2ParallelDistributionSignatureConf().getMap().size();
    }
    /**
     * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
     */

    public boolean containsOpName2ParallelDistributionSignatureConf(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetOpName2ParallelDistributionSignatureConf().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOpName2ParallelDistributionSignatureConfMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> getOpName2ParallelDistributionSignatureConf() {
      return getOpName2ParallelDistributionSignatureConfMap();
    }
    /**
     * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
     */

    public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> getOpName2ParallelDistributionSignatureConfMap() {
      return internalGetOpName2ParallelDistributionSignatureConf().getMap();
    }
    /**
     * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
     */

    public oneflow.SbpParallelOuterClass.ParallelDistributionSignature getOpName2ParallelDistributionSignatureConfOrDefault(
        java.lang.String key,
        oneflow.SbpParallelOuterClass.ParallelDistributionSignature defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> map =
          internalGetOpName2ParallelDistributionSignatureConf().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
     */

    public oneflow.SbpParallelOuterClass.ParallelDistributionSignature getOpName2ParallelDistributionSignatureConfOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> map =
          internalGetOpName2ParallelDistributionSignatureConf().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearOpName2ParallelDistributionSignatureConf() {
      getMutableOpName2ParallelDistributionSignatureConf().clear();
      return this;
    }
    /**
     * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
     */

    public Builder removeOpName2ParallelDistributionSignatureConf(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableOpName2ParallelDistributionSignatureConf().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature>
    getMutableOpName2ParallelDistributionSignatureConf() {
      return internalGetMutableOpName2ParallelDistributionSignatureConf().getMutableMap();
    }
    /**
     * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
     */
    public Builder putOpName2ParallelDistributionSignatureConf(
        java.lang.String key,
        oneflow.SbpParallelOuterClass.ParallelDistributionSignature value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      getMutableOpName2ParallelDistributionSignatureConf().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
     */

    public Builder putAllOpName2ParallelDistributionSignatureConf(
        java.util.Map<java.lang.String, oneflow.SbpParallelOuterClass.ParallelDistributionSignature> values) {
      getMutableOpName2ParallelDistributionSignatureConf().putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oneflow.JobParallelViewConf)
  }

  // @@protoc_insertion_point(class_scope:oneflow.JobParallelViewConf)
  private static final org.oneflow.core.job.JobParallelViewConf DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.oneflow.core.job.JobParallelViewConf();
  }

  public static org.oneflow.core.job.JobParallelViewConf getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<JobParallelViewConf>
      PARSER = new com.google.protobuf.AbstractParser<JobParallelViewConf>() {
    public JobParallelViewConf parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new JobParallelViewConf(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<JobParallelViewConf> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<JobParallelViewConf> getParserForType() {
    return PARSER;
  }

  public org.oneflow.core.job.JobParallelViewConf getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

