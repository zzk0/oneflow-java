// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/job.proto

package org.oneflow.core.job;

public interface JobParallelViewConfOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.JobParallelViewConf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */
  int getOpName2SbpSignatureConfCount();
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */
  boolean containsOpName2SbpSignatureConf(
      java.lang.String key);
  /**
   * Use {@link #getOpName2SbpSignatureConfMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.oneflow.core.job.SbpSignature>
  getOpName2SbpSignatureConf();
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */
  java.util.Map<java.lang.String, org.oneflow.core.job.SbpSignature>
  getOpName2SbpSignatureConfMap();
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */

  org.oneflow.core.job.SbpSignature getOpName2SbpSignatureConfOrDefault(
      java.lang.String key,
      org.oneflow.core.job.SbpSignature defaultValue);
  /**
   * <code>map&lt;string, .oneflow.SbpSignature&gt; op_name2sbp_signature_conf = 1;</code>
   */

  org.oneflow.core.job.SbpSignature getOpName2SbpSignatureConfOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */
  int getOpName2IsMirroredParallelViewCount();
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */
  boolean containsOpName2IsMirroredParallelView(
      java.lang.String key);
  /**
   * Use {@link #getOpName2IsMirroredParallelViewMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Boolean>
  getOpName2IsMirroredParallelView();
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */
  java.util.Map<java.lang.String, java.lang.Boolean>
  getOpName2IsMirroredParallelViewMap();
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */

  boolean getOpName2IsMirroredParallelViewOrDefault(
      java.lang.String key,
      boolean defaultValue);
  /**
   * <code>map&lt;string, bool&gt; op_name2is_mirrored_parallel_view = 2;</code>
   */

  boolean getOpName2IsMirroredParallelViewOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */
  int getOpName2ParallelDistributionSignatureConfCount();
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */
  boolean containsOpName2ParallelDistributionSignatureConf(
      java.lang.String key);
  /**
   * Use {@link #getOpName2ParallelDistributionSignatureConfMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.oneflow.core.job.ParallelDistributionSignature>
  getOpName2ParallelDistributionSignatureConf();
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */
  java.util.Map<java.lang.String, org.oneflow.core.job.ParallelDistributionSignature>
  getOpName2ParallelDistributionSignatureConfMap();
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */

  org.oneflow.core.job.ParallelDistributionSignature getOpName2ParallelDistributionSignatureConfOrDefault(
      java.lang.String key,
      org.oneflow.core.job.ParallelDistributionSignature defaultValue);
  /**
   * <code>map&lt;string, .oneflow.ParallelDistributionSignature&gt; op_name2parallel_distribution_signature_conf = 3;</code>
   */

  org.oneflow.core.job.ParallelDistributionSignature getOpName2ParallelDistributionSignatureConfOrThrow(
      java.lang.String key);
}
