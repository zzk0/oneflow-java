// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/parallel_conf_signature.proto

package org.oneflow.core.job;

public interface ParallelConfSignatureOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.ParallelConfSignature)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .oneflow.ParallelConf op_parallel_conf = 1;</code>
   */
  boolean hasOpParallelConf();
  /**
   * <code>optional .oneflow.ParallelConf op_parallel_conf = 1;</code>
   */
  org.oneflow.core.job.ParallelConf getOpParallelConf();
  /**
   * <code>optional .oneflow.ParallelConf op_parallel_conf = 1;</code>
   */
  org.oneflow.core.job.ParallelConfOrBuilder getOpParallelConfOrBuilder();

  /**
   * <code>map&lt;string, .oneflow.ParallelConf&gt; bn_in_op2parallel_conf = 2;</code>
   */
  int getBnInOp2ParallelConfCount();
  /**
   * <code>map&lt;string, .oneflow.ParallelConf&gt; bn_in_op2parallel_conf = 2;</code>
   */
  boolean containsBnInOp2ParallelConf(
      java.lang.String key);
  /**
   * Use {@link #getBnInOp2ParallelConfMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.oneflow.core.job.ParallelConf>
  getBnInOp2ParallelConf();
  /**
   * <code>map&lt;string, .oneflow.ParallelConf&gt; bn_in_op2parallel_conf = 2;</code>
   */
  java.util.Map<java.lang.String, org.oneflow.core.job.ParallelConf>
  getBnInOp2ParallelConfMap();
  /**
   * <code>map&lt;string, .oneflow.ParallelConf&gt; bn_in_op2parallel_conf = 2;</code>
   */

  org.oneflow.core.job.ParallelConf getBnInOp2ParallelConfOrDefault(
      java.lang.String key,
      org.oneflow.core.job.ParallelConf defaultValue);
  /**
   * <code>map&lt;string, .oneflow.ParallelConf&gt; bn_in_op2parallel_conf = 2;</code>
   */

  org.oneflow.core.job.ParallelConf getBnInOp2ParallelConfOrThrow(
      java.lang.String key);
}
