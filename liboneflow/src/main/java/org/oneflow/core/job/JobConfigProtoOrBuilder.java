// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/job_conf.proto

package org.oneflow.core.job;

public interface JobConfigProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.JobConfigProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>required string job_name = 1;</code>
   */
  boolean hasJobName();
  /**
   * <code>required string job_name = 1;</code>
   */
  java.lang.String getJobName();
  /**
   * <code>required string job_name = 1;</code>
   */
  com.google.protobuf.ByteString
      getJobNameBytes();

  /**
   * <code>optional .oneflow.TrainConf train_conf = 3;</code>
   */
  boolean hasTrainConf();
  /**
   * <code>optional .oneflow.TrainConf train_conf = 3;</code>
   */
  org.oneflow.core.job.TrainConf getTrainConf();
  /**
   * <code>optional .oneflow.TrainConf train_conf = 3;</code>
   */
  org.oneflow.core.job.TrainConfOrBuilder getTrainConfOrBuilder();

  /**
   * <code>optional .oneflow.PredictConf predict_conf = 4;</code>
   */
  boolean hasPredictConf();
  /**
   * <code>optional .oneflow.PredictConf predict_conf = 4;</code>
   */
  org.oneflow.core.job.PredictConf getPredictConf();
  /**
   * <code>optional .oneflow.PredictConf predict_conf = 4;</code>
   */
  org.oneflow.core.job.PredictConfOrBuilder getPredictConfOrBuilder();

  /**
   * <pre>
   * kFloat or kDouble
   * </pre>
   *
   * <code>optional .oneflow.DataType default_data_type = 8 [default = kFloat];</code>
   */
  boolean hasDefaultDataType();
  /**
   * <pre>
   * kFloat or kDouble
   * </pre>
   *
   * <code>optional .oneflow.DataType default_data_type = 8 [default = kFloat];</code>
   */
  oneflow.DataTypeOuterClass.DataType getDefaultDataType();

  /**
   * <code>optional .oneflow.InitializerConf default_initializer_conf = 10;</code>
   */
  boolean hasDefaultInitializerConf();
  /**
   * <code>optional .oneflow.InitializerConf default_initializer_conf = 10;</code>
   */
  org.oneflow.core.job.InitializerConf getDefaultInitializerConf();
  /**
   * <code>optional .oneflow.InitializerConf default_initializer_conf = 10;</code>
   */
  org.oneflow.core.job.InitializerConfOrBuilder getDefaultInitializerConfOrBuilder();

  /**
   * <code>optional string default_initialize_with_snapshot_path = 11;</code>
   */
  boolean hasDefaultInitializeWithSnapshotPath();
  /**
   * <code>optional string default_initialize_with_snapshot_path = 11;</code>
   */
  java.lang.String getDefaultInitializeWithSnapshotPath();
  /**
   * <code>optional string default_initialize_with_snapshot_path = 11;</code>
   */
  com.google.protobuf.ByteString
      getDefaultInitializeWithSnapshotPathBytes();

  /**
   * <code>optional .oneflow.MemoryAllocationAlgorithmConf memory_allocation_algorithm_conf = 102;</code>
   */
  boolean hasMemoryAllocationAlgorithmConf();
  /**
   * <code>optional .oneflow.MemoryAllocationAlgorithmConf memory_allocation_algorithm_conf = 102;</code>
   */
  org.oneflow.core.job.MemoryAllocationAlgorithmConf getMemoryAllocationAlgorithmConf();
  /**
   * <code>optional .oneflow.MemoryAllocationAlgorithmConf memory_allocation_algorithm_conf = 102;</code>
   */
  org.oneflow.core.job.MemoryAllocationAlgorithmConfOrBuilder getMemoryAllocationAlgorithmConfOrBuilder();

  /**
   * <code>optional .oneflow.XrtConfig xrt_config = 103;</code>
   */
  boolean hasXrtConfig();
  /**
   * <code>optional .oneflow.XrtConfig xrt_config = 103;</code>
   */
  org.oneflow.core.job.XrtConfig getXrtConfig();
  /**
   * <code>optional .oneflow.XrtConfig xrt_config = 103;</code>
   */
  org.oneflow.core.job.XrtConfigOrBuilder getXrtConfigOrBuilder();

  /**
   * <code>optional .oneflow.IndexedSlicesOptimizerConf indexed_slices_optimizer_conf = 104;</code>
   */
  boolean hasIndexedSlicesOptimizerConf();
  /**
   * <code>optional .oneflow.IndexedSlicesOptimizerConf indexed_slices_optimizer_conf = 104;</code>
   */
  org.oneflow.core.job.IndexedSlicesOptimizerConf getIndexedSlicesOptimizerConf();
  /**
   * <code>optional .oneflow.IndexedSlicesOptimizerConf indexed_slices_optimizer_conf = 104;</code>
   */
  org.oneflow.core.job.IndexedSlicesOptimizerConfOrBuilder getIndexedSlicesOptimizerConfOrBuilder();

  /**
   * <code>optional bool enable_fuse_model_update_ops = 105 [default = false];</code>
   */
  boolean hasEnableFuseModelUpdateOps();
  /**
   * <code>optional bool enable_fuse_model_update_ops = 105 [default = false];</code>
   */
  boolean getEnableFuseModelUpdateOps();

  /**
   * <code>optional bool enable_gradients_stats_aggregation = 106 [default = true];</code>
   */
  boolean hasEnableGradientsStatsAggregation();
  /**
   * <code>optional bool enable_gradients_stats_aggregation = 106 [default = true];</code>
   */
  boolean getEnableGradientsStatsAggregation();

  /**
   * <code>optional string optimizer_placement_optimization_mode = 107;</code>
   */
  boolean hasOptimizerPlacementOptimizationMode();
  /**
   * <code>optional string optimizer_placement_optimization_mode = 107;</code>
   */
  java.lang.String getOptimizerPlacementOptimizationMode();
  /**
   * <code>optional string optimizer_placement_optimization_mode = 107;</code>
   */
  com.google.protobuf.ByteString
      getOptimizerPlacementOptimizationModeBytes();

  /**
   * <code>optional int64 optimizer_placement_optimization_threshold = 108 [default = 1024];</code>
   */
  boolean hasOptimizerPlacementOptimizationThreshold();
  /**
   * <code>optional int64 optimizer_placement_optimization_threshold = 108 [default = 1024];</code>
   */
  long getOptimizerPlacementOptimizationThreshold();

  /**
   * <code>optional .oneflow.QatConfig qat_config = 109;</code>
   */
  boolean hasQatConfig();
  /**
   * <code>optional .oneflow.QatConfig qat_config = 109;</code>
   */
  org.oneflow.core.job.QatConfig getQatConfig();
  /**
   * <code>optional .oneflow.QatConfig qat_config = 109;</code>
   */
  org.oneflow.core.job.QatConfigOrBuilder getQatConfigOrBuilder();

  /**
   * <code>optional bool enable_cudnn = 200 [default = true];</code>
   */
  boolean hasEnableCudnn();
  /**
   * <code>optional bool enable_cudnn = 200 [default = true];</code>
   */
  boolean getEnableCudnn();

  /**
   * <pre>
   * 1GByte
   * </pre>
   *
   * <code>optional int64 cudnn_buf_limit_mbyte = 201 [default = 1024];</code>
   */
  boolean hasCudnnBufLimitMbyte();
  /**
   * <pre>
   * 1GByte
   * </pre>
   *
   * <code>optional int64 cudnn_buf_limit_mbyte = 201 [default = 1024];</code>
   */
  long getCudnnBufLimitMbyte();

  /**
   * <code>optional int32 cudnn_conv_force_fwd_algo = 202;</code>
   */
  boolean hasCudnnConvForceFwdAlgo();
  /**
   * <code>optional int32 cudnn_conv_force_fwd_algo = 202;</code>
   */
  int getCudnnConvForceFwdAlgo();

  /**
   * <code>optional int32 cudnn_conv_force_bwd_data_algo = 203;</code>
   */
  boolean hasCudnnConvForceBwdDataAlgo();
  /**
   * <code>optional int32 cudnn_conv_force_bwd_data_algo = 203;</code>
   */
  int getCudnnConvForceBwdDataAlgo();

  /**
   * <code>optional int32 cudnn_conv_force_bwd_filter_algo = 204;</code>
   */
  boolean hasCudnnConvForceBwdFilterAlgo();
  /**
   * <code>optional int32 cudnn_conv_force_bwd_filter_algo = 204;</code>
   */
  int getCudnnConvForceBwdFilterAlgo();

  /**
   * <code>optional bool cudnn_conv_heuristic_search_algo = 205 [default = true];</code>
   */
  boolean hasCudnnConvHeuristicSearchAlgo();
  /**
   * <code>optional bool cudnn_conv_heuristic_search_algo = 205 [default = true];</code>
   */
  boolean getCudnnConvHeuristicSearchAlgo();

  /**
   * <code>optional bool cudnn_conv_use_deterministic_algo_only = 206 [default = false];</code>
   */
  boolean hasCudnnConvUseDeterministicAlgoOnly();
  /**
   * <code>optional bool cudnn_conv_use_deterministic_algo_only = 206 [default = false];</code>
   */
  boolean getCudnnConvUseDeterministicAlgoOnly();

  /**
   * <code>optional bool enable_cudnn_fused_normalization_add_relu = 207;</code>
   */
  boolean hasEnableCudnnFusedNormalizationAddRelu();
  /**
   * <code>optional bool enable_cudnn_fused_normalization_add_relu = 207;</code>
   */
  boolean getEnableCudnnFusedNormalizationAddRelu();

  /**
   * <code>optional bool enable_fuse_add_to_output = 208 [default = false];</code>
   */
  boolean hasEnableFuseAddToOutput();
  /**
   * <code>optional bool enable_fuse_add_to_output = 208 [default = false];</code>
   */
  boolean getEnableFuseAddToOutput();

  /**
   * <code>optional bool enable_fuse_cast_scale = 209 [default = false];</code>
   */
  boolean hasEnableFuseCastScale();
  /**
   * <code>optional bool enable_fuse_cast_scale = 209 [default = false];</code>
   */
  boolean getEnableFuseCastScale();

  /**
   * <code>optional int64 num_gradient_accumulation_steps = 210;</code>
   */
  boolean hasNumGradientAccumulationSteps();
  /**
   * <code>optional int64 num_gradient_accumulation_steps = 210;</code>
   */
  long getNumGradientAccumulationSteps();

  /**
   * <code>optional bool enable_reuse_mem = 300 [default = true];</code>
   */
  boolean hasEnableReuseMem();
  /**
   * <code>optional bool enable_reuse_mem = 300 [default = true];</code>
   */
  boolean getEnableReuseMem();

  /**
   * <code>optional bool enable_inplace = 301 [default = true];</code>
   */
  boolean hasEnableInplace();
  /**
   * <code>optional bool enable_inplace = 301 [default = true];</code>
   */
  boolean getEnableInplace();

  /**
   * <code>optional bool enable_inplace_in_reduce_struct = 302 [default = true];</code>
   */
  boolean hasEnableInplaceInReduceStruct();
  /**
   * <code>optional bool enable_inplace_in_reduce_struct = 302 [default = true];</code>
   */
  boolean getEnableInplaceInReduceStruct();

  /**
   * <code>optional bool do_parallel_cast_before_widening_type_cast = 403 [default = true];</code>
   */
  boolean hasDoParallelCastBeforeWideningTypeCast();
  /**
   * <code>optional bool do_parallel_cast_before_widening_type_cast = 403 [default = true];</code>
   */
  boolean getDoParallelCastBeforeWideningTypeCast();

  /**
   * <code>optional bool prune_parallel_cast_ops = 509 [default = true];</code>
   */
  boolean hasPruneParallelCastOps();
  /**
   * <code>optional bool prune_parallel_cast_ops = 509 [default = true];</code>
   */
  boolean getPruneParallelCastOps();

  /**
   * <code>optional bool prune_cast_to_static_shape_ops = 510 [default = true];</code>
   */
  boolean hasPruneCastToStaticShapeOps();
  /**
   * <code>optional bool prune_cast_to_static_shape_ops = 510 [default = true];</code>
   */
  boolean getPruneCastToStaticShapeOps();

  /**
   * <code>optional bool prune_amp_white_identity_ops = 511 [default = true];</code>
   */
  boolean hasPruneAmpWhiteIdentityOps();
  /**
   * <code>optional bool prune_amp_white_identity_ops = 511 [default = true];</code>
   */
  boolean getPruneAmpWhiteIdentityOps();

  /**
   * <code>optional bool cudnn_conv_enable_pseudo_half = 600 [default = true];</code>
   */
  boolean hasCudnnConvEnablePseudoHalf();
  /**
   * <code>optional bool cudnn_conv_enable_pseudo_half = 600 [default = true];</code>
   */
  boolean getCudnnConvEnablePseudoHalf();

  /**
   * <code>optional bool enable_auto_mixed_precision = 602 [default = false];</code>
   */
  boolean hasEnableAutoMixedPrecision();
  /**
   * <code>optional bool enable_auto_mixed_precision = 602 [default = false];</code>
   */
  boolean getEnableAutoMixedPrecision();

  /**
   * <code>optional bool enable_quantization_aware_training = 603 [default = false];</code>
   */
  boolean hasEnableQuantizationAwareTraining();
  /**
   * <code>optional bool enable_quantization_aware_training = 603 [default = false];</code>
   */
  boolean getEnableQuantizationAwareTraining();

  /**
   * <code>optional int64 concurrency_width = 1000 [default = 128];</code>
   */
  boolean hasConcurrencyWidth();
  /**
   * <code>optional int64 concurrency_width = 1000 [default = 128];</code>
   */
  long getConcurrencyWidth();

  /**
   * <code>map&lt;string, .oneflow.AttrValue&gt; flag_name2flag_value = 2000;</code>
   */
  int getFlagName2FlagValueCount();
  /**
   * <code>map&lt;string, .oneflow.AttrValue&gt; flag_name2flag_value = 2000;</code>
   */
  boolean containsFlagName2FlagValue(
      java.lang.String key);
  /**
   * Use {@link #getFlagName2FlagValueMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.oneflow.core.framework.AttrValue>
  getFlagName2FlagValue();
  /**
   * <code>map&lt;string, .oneflow.AttrValue&gt; flag_name2flag_value = 2000;</code>
   */
  java.util.Map<java.lang.String, org.oneflow.core.framework.AttrValue>
  getFlagName2FlagValueMap();
  /**
   * <code>map&lt;string, .oneflow.AttrValue&gt; flag_name2flag_value = 2000;</code>
   */

  org.oneflow.core.framework.AttrValue getFlagName2FlagValueOrDefault(
      java.lang.String key,
      org.oneflow.core.framework.AttrValue defaultValue);
  /**
   * <code>map&lt;string, .oneflow.AttrValue&gt; flag_name2flag_value = 2000;</code>
   */

  org.oneflow.core.framework.AttrValue getFlagName2FlagValueOrThrow(
      java.lang.String key);

  /**
   * <code>optional int64 logical_object_id = 3000;</code>
   */
  boolean hasLogicalObjectId();
  /**
   * <code>optional int64 logical_object_id = 3000;</code>
   */
  long getLogicalObjectId();

  /**
   * <code>optional .oneflow.JobSignatureDef signature = 4000;</code>
   */
  boolean hasSignature();
  /**
   * <code>optional .oneflow.JobSignatureDef signature = 4000;</code>
   */
  org.oneflow.core.job.JobSignatureDef getSignature();
  /**
   * <code>optional .oneflow.JobSignatureDef signature = 4000;</code>
   */
  org.oneflow.core.job.JobSignatureDefOrBuilder getSignatureOrBuilder();

  public org.oneflow.core.job.JobConfigProto.JobTypeCase getJobTypeCase();

  public org.oneflow.core.job.JobConfigProto.DefaultInitializeConfCase getDefaultInitializeConfCase();
}
