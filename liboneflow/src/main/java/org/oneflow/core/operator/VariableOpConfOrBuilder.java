// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/operator/op_conf.proto

package org.oneflow.core.operator;

public interface VariableOpConfOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.VariableOpConf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string tick = 1;</code>
   */
  boolean hasTick();
  /**
   * <code>optional string tick = 1;</code>
   */
  java.lang.String getTick();
  /**
   * <code>optional string tick = 1;</code>
   */
  com.google.protobuf.ByteString
      getTickBytes();

  /**
   * <code>required string out = 2;</code>
   */
  boolean hasOut();
  /**
   * <code>required string out = 2;</code>
   */
  java.lang.String getOut();
  /**
   * <code>required string out = 2;</code>
   */
  com.google.protobuf.ByteString
      getOutBytes();

  /**
   * <code>required .oneflow.ShapeProto shape = 3;</code>
   */
  boolean hasShape();
  /**
   * <code>required .oneflow.ShapeProto shape = 3;</code>
   */
  org.oneflow.core.common.ShapeProto getShape();
  /**
   * <code>required .oneflow.ShapeProto shape = 3;</code>
   */
  org.oneflow.core.common.ShapeProtoOrBuilder getShapeOrBuilder();

  /**
   * <code>optional .oneflow.DataType data_type = 4;</code>
   */
  boolean hasDataType();
  /**
   * <code>optional .oneflow.DataType data_type = 4;</code>
   */
  org.oneflow.core.common.DataType getDataType();

  /**
   * <code>optional .oneflow.InitializerConf initializer = 5;</code>
   */
  boolean hasInitializer();
  /**
   * <code>optional .oneflow.InitializerConf initializer = 5;</code>
   */
  org.oneflow.core.job.InitializerConf getInitializer();
  /**
   * <code>optional .oneflow.InitializerConf initializer = 5;</code>
   */
  org.oneflow.core.job.InitializerConfOrBuilder getInitializerOrBuilder();

  /**
   * <code>optional .oneflow.InitializeWithSnapshotConf initialize_with_snapshot = 6;</code>
   */
  boolean hasInitializeWithSnapshot();
  /**
   * <code>optional .oneflow.InitializeWithSnapshotConf initialize_with_snapshot = 6;</code>
   */
  org.oneflow.core.job.InitializeWithSnapshotConf getInitializeWithSnapshot();
  /**
   * <code>optional .oneflow.InitializeWithSnapshotConf initialize_with_snapshot = 6;</code>
   */
  org.oneflow.core.job.InitializeWithSnapshotConfOrBuilder getInitializeWithSnapshotOrBuilder();

  /**
   * <code>optional string model_name = 7 [default = "weight"];</code>
   */
  boolean hasModelName();
  /**
   * <code>optional string model_name = 7 [default = "weight"];</code>
   */
  java.lang.String getModelName();
  /**
   * <code>optional string model_name = 7 [default = "weight"];</code>
   */
  com.google.protobuf.ByteString
      getModelNameBytes();

  /**
   * <code>optional int64 random_seed = 9;</code>
   */
  boolean hasRandomSeed();
  /**
   * <code>optional int64 random_seed = 9;</code>
   */
  long getRandomSeed();

  /**
   * <code>optional .oneflow.RegularizerConf regularizer = 10;</code>
   */
  boolean hasRegularizer();
  /**
   * <code>optional .oneflow.RegularizerConf regularizer = 10;</code>
   */
  org.oneflow.core.job.RegularizerConf getRegularizer();
  /**
   * <code>optional .oneflow.RegularizerConf regularizer = 10;</code>
   */
  org.oneflow.core.job.RegularizerConfOrBuilder getRegularizerOrBuilder();

  /**
   * <code>optional bool trainable = 11 [default = true];</code>
   */
  boolean hasTrainable();
  /**
   * <code>optional bool trainable = 11 [default = true];</code>
   */
  boolean getTrainable();

  /**
   * <code>repeated string parallel_distribution = 12;</code>
   */
  java.util.List<java.lang.String>
      getParallelDistributionList();
  /**
   * <code>repeated string parallel_distribution = 12;</code>
   */
  int getParallelDistributionCount();
  /**
   * <code>repeated string parallel_distribution = 12;</code>
   */
  java.lang.String getParallelDistribution(int index);
  /**
   * <code>repeated string parallel_distribution = 12;</code>
   */
  com.google.protobuf.ByteString
      getParallelDistributionBytes(int index);

  public org.oneflow.core.operator.VariableOpConf.InitializeCase getInitializeCase();
}
