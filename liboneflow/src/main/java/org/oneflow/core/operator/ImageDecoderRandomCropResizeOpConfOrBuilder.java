// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/operator/op_conf.proto

package org.oneflow.core.operator;

public interface ImageDecoderRandomCropResizeOpConfOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.ImageDecoderRandomCropResizeOpConf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>required string in = 1;</code>
   */
  boolean hasIn();
  /**
   * <code>required string in = 1;</code>
   */
  java.lang.String getIn();
  /**
   * <code>required string in = 1;</code>
   */
  com.google.protobuf.ByteString
      getInBytes();

  /**
   * <code>required string out = 2;</code>
   */
  boolean hasOut();
  /**
   * <code>required string out = 2;</code>
   */
  java.lang.String getOut();
  /**
   * <code>required string out = 2;</code>
   */
  com.google.protobuf.ByteString
      getOutBytes();

  /**
   * <code>required int64 target_width = 3;</code>
   */
  boolean hasTargetWidth();
  /**
   * <code>required int64 target_width = 3;</code>
   */
  long getTargetWidth();

  /**
   * <code>required int64 target_height = 4;</code>
   */
  boolean hasTargetHeight();
  /**
   * <code>required int64 target_height = 4;</code>
   */
  long getTargetHeight();

  /**
   * <code>optional int64 num_workers = 5 [default = 3];</code>
   */
  boolean hasNumWorkers();
  /**
   * <code>optional int64 num_workers = 5 [default = 3];</code>
   */
  long getNumWorkers();

  /**
   * <code>optional int64 max_num_pixels = 6 [default = 67108864];</code>
   */
  boolean hasMaxNumPixels();
  /**
   * <code>optional int64 max_num_pixels = 6 [default = 67108864];</code>
   */
  long getMaxNumPixels();

  /**
   * <code>optional int64 warmup_size = 7 [default = 6400];</code>
   */
  boolean hasWarmupSize();
  /**
   * <code>optional int64 warmup_size = 7 [default = 6400];</code>
   */
  long getWarmupSize();

  /**
   * <code>optional int64 seed = 8;</code>
   */
  boolean hasSeed();
  /**
   * <code>optional int64 seed = 8;</code>
   */
  long getSeed();

  /**
   * <code>optional int64 num_attempts = 9 [default = 10];</code>
   */
  boolean hasNumAttempts();
  /**
   * <code>optional int64 num_attempts = 9 [default = 10];</code>
   */
  long getNumAttempts();

  /**
   * <code>optional float random_area_min = 10 [default = 0.08];</code>
   */
  boolean hasRandomAreaMin();
  /**
   * <code>optional float random_area_min = 10 [default = 0.08];</code>
   */
  float getRandomAreaMin();

  /**
   * <code>optional float random_area_max = 11 [default = 1];</code>
   */
  boolean hasRandomAreaMax();
  /**
   * <code>optional float random_area_max = 11 [default = 1];</code>
   */
  float getRandomAreaMax();

  /**
   * <code>optional float random_aspect_ratio_min = 12 [default = 0.75];</code>
   */
  boolean hasRandomAspectRatioMin();
  /**
   * <code>optional float random_aspect_ratio_min = 12 [default = 0.75];</code>
   */
  float getRandomAspectRatioMin();

  /**
   * <code>optional float random_aspect_ratio_max = 13 [default = 1.333333];</code>
   */
  boolean hasRandomAspectRatioMax();
  /**
   * <code>optional float random_aspect_ratio_max = 13 [default = 1.333333];</code>
   */
  float getRandomAspectRatioMax();
}
