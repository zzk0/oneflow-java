// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/operator/op_conf.proto

package org.oneflow.core.operator;

public interface CollectiveBoxingPackOpConfOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oneflow.CollectiveBoxingPackOpConf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>required .oneflow.LogicalBlobId lbi = 1;</code>
   */
  boolean hasLbi();
  /**
   * <code>required .oneflow.LogicalBlobId lbi = 1;</code>
   */
  org.oneflow.core.register.LogicalBlobId getLbi();
  /**
   * <code>required .oneflow.LogicalBlobId lbi = 1;</code>
   */
  org.oneflow.core.register.LogicalBlobIdOrBuilder getLbiOrBuilder();

  /**
   * <code>required .oneflow.SbpParallel src_sbp_parallel = 2;</code>
   */
  boolean hasSrcSbpParallel();
  /**
   * <code>required .oneflow.SbpParallel src_sbp_parallel = 2;</code>
   */
  org.oneflow.core.job.SbpParallel getSrcSbpParallel();
  /**
   * <code>required .oneflow.SbpParallel src_sbp_parallel = 2;</code>
   */
  org.oneflow.core.job.SbpParallelOrBuilder getSrcSbpParallelOrBuilder();

  /**
   * <code>required .oneflow.SbpParallel dst_sbp_parallel = 3;</code>
   */
  boolean hasDstSbpParallel();
  /**
   * <code>required .oneflow.SbpParallel dst_sbp_parallel = 3;</code>
   */
  org.oneflow.core.job.SbpParallel getDstSbpParallel();
  /**
   * <code>required .oneflow.SbpParallel dst_sbp_parallel = 3;</code>
   */
  org.oneflow.core.job.SbpParallelOrBuilder getDstSbpParallelOrBuilder();

  /**
   * <code>required int64 num_ranks = 4;</code>
   */
  boolean hasNumRanks();
  /**
   * <code>required int64 num_ranks = 4;</code>
   */
  long getNumRanks();

  /**
   * <code>required .oneflow.ShapeProto logical_shape = 5;</code>
   */
  boolean hasLogicalShape();
  /**
   * <code>required .oneflow.ShapeProto logical_shape = 5;</code>
   */
  org.oneflow.core.common.ShapeProto getLogicalShape();
  /**
   * <code>required .oneflow.ShapeProto logical_shape = 5;</code>
   */
  org.oneflow.core.common.ShapeProtoOrBuilder getLogicalShapeOrBuilder();
}
