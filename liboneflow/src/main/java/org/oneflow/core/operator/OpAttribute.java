// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/operator/op_attribute.proto

package org.oneflow.core.operator;

/**
 * Protobuf type {@code oneflow.OpAttribute}
 */
public  final class OpAttribute extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oneflow.OpAttribute)
    OpAttributeOrBuilder {
  // Use OpAttribute.newBuilder() to construct.
  private OpAttribute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OpAttribute() {
    inputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    outputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    tmpBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OpAttribute(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              inputBns_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            inputBns_.add(bs);
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              outputBns_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            outputBns_.add(bs);
            break;
          }
          case 26: {
            com.google.protobuf.ByteString bs = input.readBytes();
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              tmpBns_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            tmpBns_.add(bs);
            break;
          }
          case 402: {
            org.oneflow.core.operator.OperatorConf.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = opConf_.toBuilder();
            }
            opConf_ = input.readMessage(org.oneflow.core.operator.OperatorConf.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(opConf_);
              opConf_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 802: {
            org.oneflow.core.register.ArgSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              subBuilder = argSignature_.toBuilder();
            }
            argSignature_ = input.readMessage(org.oneflow.core.register.ArgSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(argSignature_);
              argSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 810: {
            org.oneflow.core.operator.ArgModifierSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              subBuilder = argModifierSignature_.toBuilder();
            }
            argModifierSignature_ = input.readMessage(org.oneflow.core.operator.ArgModifierSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(argModifierSignature_);
              argModifierSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 818: {
            org.oneflow.core.job.BlobLastUsedSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              subBuilder = blobLastUsedSignature_.toBuilder();
            }
            blobLastUsedSignature_ = input.readMessage(org.oneflow.core.job.BlobLastUsedSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(blobLastUsedSignature_);
              blobLastUsedSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000008;
            break;
          }
          case 826: {
            org.oneflow.core.job.BlobBackwardUsedSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = blobBackwardUsedSignature_.toBuilder();
            }
            blobBackwardUsedSignature_ = input.readMessage(org.oneflow.core.job.BlobBackwardUsedSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(blobBackwardUsedSignature_);
              blobBackwardUsedSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
          case 834: {
            org.oneflow.core.job.SbpSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              subBuilder = sbpSignature_.toBuilder();
            }
            sbpSignature_ = input.readMessage(org.oneflow.core.job.SbpSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sbpSignature_);
              sbpSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
          case 842: {
            org.oneflow.core.job.MirroredSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              subBuilder = mirroredSignature_.toBuilder();
            }
            mirroredSignature_ = input.readMessage(org.oneflow.core.job.MirroredSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(mirroredSignature_);
              mirroredSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000040;
            break;
          }
          case 850: {
            org.oneflow.core.register.BlobDescSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              subBuilder = logicalBlobDescSignature_.toBuilder();
            }
            logicalBlobDescSignature_ = input.readMessage(org.oneflow.core.register.BlobDescSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(logicalBlobDescSignature_);
              logicalBlobDescSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000080;
            break;
          }
          case 866: {
            org.oneflow.core.job.ParallelSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
              subBuilder = parallelSignature_.toBuilder();
            }
            parallelSignature_ = input.readMessage(org.oneflow.core.job.ParallelSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(parallelSignature_);
              parallelSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000100;
            break;
          }
          case 874: {
            org.oneflow.core.job.ParallelConfSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
              subBuilder = parallelConfSignature_.toBuilder();
            }
            parallelConfSignature_ = input.readMessage(org.oneflow.core.job.ParallelConfSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(parallelConfSignature_);
              parallelConfSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000200;
            break;
          }
          case 882: {
            org.oneflow.core.job.ParallelDistributionSignature.Builder subBuilder = null;
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
              subBuilder = parallelDistributionSignature_.toBuilder();
            }
            parallelDistributionSignature_ = input.readMessage(org.oneflow.core.job.ParallelDistributionSignature.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(parallelDistributionSignature_);
              parallelDistributionSignature_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000400;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        inputBns_ = inputBns_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        outputBns_ = outputBns_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        tmpBns_ = tmpBns_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.oneflow.core.operator.OpAttributeOuterClass.internal_static_oneflow_OpAttribute_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.oneflow.core.operator.OpAttributeOuterClass.internal_static_oneflow_OpAttribute_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.oneflow.core.operator.OpAttribute.class, org.oneflow.core.operator.OpAttribute.Builder.class);
  }

  private int bitField0_;
  public static final int INPUT_BNS_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList inputBns_;
  /**
   * <code>repeated string input_bns = 1;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getInputBnsList() {
    return inputBns_;
  }
  /**
   * <code>repeated string input_bns = 1;</code>
   */
  public int getInputBnsCount() {
    return inputBns_.size();
  }
  /**
   * <code>repeated string input_bns = 1;</code>
   */
  public java.lang.String getInputBns(int index) {
    return inputBns_.get(index);
  }
  /**
   * <code>repeated string input_bns = 1;</code>
   */
  public com.google.protobuf.ByteString
      getInputBnsBytes(int index) {
    return inputBns_.getByteString(index);
  }

  public static final int OUTPUT_BNS_FIELD_NUMBER = 2;
  private com.google.protobuf.LazyStringList outputBns_;
  /**
   * <code>repeated string output_bns = 2;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getOutputBnsList() {
    return outputBns_;
  }
  /**
   * <code>repeated string output_bns = 2;</code>
   */
  public int getOutputBnsCount() {
    return outputBns_.size();
  }
  /**
   * <code>repeated string output_bns = 2;</code>
   */
  public java.lang.String getOutputBns(int index) {
    return outputBns_.get(index);
  }
  /**
   * <code>repeated string output_bns = 2;</code>
   */
  public com.google.protobuf.ByteString
      getOutputBnsBytes(int index) {
    return outputBns_.getByteString(index);
  }

  public static final int TMP_BNS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList tmpBns_;
  /**
   * <code>repeated string tmp_bns = 3;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getTmpBnsList() {
    return tmpBns_;
  }
  /**
   * <code>repeated string tmp_bns = 3;</code>
   */
  public int getTmpBnsCount() {
    return tmpBns_.size();
  }
  /**
   * <code>repeated string tmp_bns = 3;</code>
   */
  public java.lang.String getTmpBns(int index) {
    return tmpBns_.get(index);
  }
  /**
   * <code>repeated string tmp_bns = 3;</code>
   */
  public com.google.protobuf.ByteString
      getTmpBnsBytes(int index) {
    return tmpBns_.getByteString(index);
  }

  public static final int OP_CONF_FIELD_NUMBER = 50;
  private org.oneflow.core.operator.OperatorConf opConf_;
  /**
   * <code>required .oneflow.OperatorConf op_conf = 50;</code>
   */
  public boolean hasOpConf() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .oneflow.OperatorConf op_conf = 50;</code>
   */
  public org.oneflow.core.operator.OperatorConf getOpConf() {
    return opConf_ == null ? org.oneflow.core.operator.OperatorConf.getDefaultInstance() : opConf_;
  }
  /**
   * <code>required .oneflow.OperatorConf op_conf = 50;</code>
   */
  public org.oneflow.core.operator.OperatorConfOrBuilder getOpConfOrBuilder() {
    return opConf_ == null ? org.oneflow.core.operator.OperatorConf.getDefaultInstance() : opConf_;
  }

  public static final int ARG_SIGNATURE_FIELD_NUMBER = 100;
  private org.oneflow.core.register.ArgSignature argSignature_;
  /**
   * <pre>
   * inter-node signature
   * </pre>
   *
   * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
   */
  public boolean hasArgSignature() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * inter-node signature
   * </pre>
   *
   * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
   */
  public org.oneflow.core.register.ArgSignature getArgSignature() {
    return argSignature_ == null ? org.oneflow.core.register.ArgSignature.getDefaultInstance() : argSignature_;
  }
  /**
   * <pre>
   * inter-node signature
   * </pre>
   *
   * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
   */
  public org.oneflow.core.register.ArgSignatureOrBuilder getArgSignatureOrBuilder() {
    return argSignature_ == null ? org.oneflow.core.register.ArgSignature.getDefaultInstance() : argSignature_;
  }

  public static final int ARG_MODIFIER_SIGNATURE_FIELD_NUMBER = 101;
  private org.oneflow.core.operator.ArgModifierSignature argModifierSignature_;
  /**
   * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
   */
  public boolean hasArgModifierSignature() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
   */
  public org.oneflow.core.operator.ArgModifierSignature getArgModifierSignature() {
    return argModifierSignature_ == null ? org.oneflow.core.operator.ArgModifierSignature.getDefaultInstance() : argModifierSignature_;
  }
  /**
   * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
   */
  public org.oneflow.core.operator.ArgModifierSignatureOrBuilder getArgModifierSignatureOrBuilder() {
    return argModifierSignature_ == null ? org.oneflow.core.operator.ArgModifierSignature.getDefaultInstance() : argModifierSignature_;
  }

  public static final int BLOB_LAST_USED_SIGNATURE_FIELD_NUMBER = 102;
  private org.oneflow.core.job.BlobLastUsedSignature blobLastUsedSignature_;
  /**
   * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
   */
  public boolean hasBlobLastUsedSignature() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
   */
  public org.oneflow.core.job.BlobLastUsedSignature getBlobLastUsedSignature() {
    return blobLastUsedSignature_ == null ? org.oneflow.core.job.BlobLastUsedSignature.getDefaultInstance() : blobLastUsedSignature_;
  }
  /**
   * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
   */
  public org.oneflow.core.job.BlobLastUsedSignatureOrBuilder getBlobLastUsedSignatureOrBuilder() {
    return blobLastUsedSignature_ == null ? org.oneflow.core.job.BlobLastUsedSignature.getDefaultInstance() : blobLastUsedSignature_;
  }

  public static final int BLOB_BACKWARD_USED_SIGNATURE_FIELD_NUMBER = 103;
  private org.oneflow.core.job.BlobBackwardUsedSignature blobBackwardUsedSignature_;
  /**
   * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
   */
  public boolean hasBlobBackwardUsedSignature() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
   */
  public org.oneflow.core.job.BlobBackwardUsedSignature getBlobBackwardUsedSignature() {
    return blobBackwardUsedSignature_ == null ? org.oneflow.core.job.BlobBackwardUsedSignature.getDefaultInstance() : blobBackwardUsedSignature_;
  }
  /**
   * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
   */
  public org.oneflow.core.job.BlobBackwardUsedSignatureOrBuilder getBlobBackwardUsedSignatureOrBuilder() {
    return blobBackwardUsedSignature_ == null ? org.oneflow.core.job.BlobBackwardUsedSignature.getDefaultInstance() : blobBackwardUsedSignature_;
  }

  public static final int SBP_SIGNATURE_FIELD_NUMBER = 104;
  private org.oneflow.core.job.SbpSignature sbpSignature_;
  /**
   * <pre>
   * op node signature
   * </pre>
   *
   * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
   */
  public boolean hasSbpSignature() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * op node signature
   * </pre>
   *
   * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
   */
  public org.oneflow.core.job.SbpSignature getSbpSignature() {
    return sbpSignature_ == null ? org.oneflow.core.job.SbpSignature.getDefaultInstance() : sbpSignature_;
  }
  /**
   * <pre>
   * op node signature
   * </pre>
   *
   * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
   */
  public org.oneflow.core.job.SbpSignatureOrBuilder getSbpSignatureOrBuilder() {
    return sbpSignature_ == null ? org.oneflow.core.job.SbpSignature.getDefaultInstance() : sbpSignature_;
  }

  public static final int MIRRORED_SIGNATURE_FIELD_NUMBER = 105;
  private org.oneflow.core.job.MirroredSignature mirroredSignature_;
  /**
   * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
   */
  public boolean hasMirroredSignature() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
   */
  public org.oneflow.core.job.MirroredSignature getMirroredSignature() {
    return mirroredSignature_ == null ? org.oneflow.core.job.MirroredSignature.getDefaultInstance() : mirroredSignature_;
  }
  /**
   * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
   */
  public org.oneflow.core.job.MirroredSignatureOrBuilder getMirroredSignatureOrBuilder() {
    return mirroredSignature_ == null ? org.oneflow.core.job.MirroredSignature.getDefaultInstance() : mirroredSignature_;
  }

  public static final int LOGICAL_BLOB_DESC_SIGNATURE_FIELD_NUMBER = 106;
  private org.oneflow.core.register.BlobDescSignature logicalBlobDescSignature_;
  /**
   * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
   */
  public boolean hasLogicalBlobDescSignature() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
   */
  public org.oneflow.core.register.BlobDescSignature getLogicalBlobDescSignature() {
    return logicalBlobDescSignature_ == null ? org.oneflow.core.register.BlobDescSignature.getDefaultInstance() : logicalBlobDescSignature_;
  }
  /**
   * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
   */
  public org.oneflow.core.register.BlobDescSignatureOrBuilder getLogicalBlobDescSignatureOrBuilder() {
    return logicalBlobDescSignature_ == null ? org.oneflow.core.register.BlobDescSignature.getDefaultInstance() : logicalBlobDescSignature_;
  }

  public static final int PARALLEL_SIGNATURE_FIELD_NUMBER = 108;
  private org.oneflow.core.job.ParallelSignature parallelSignature_;
  /**
   * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
   */
  public boolean hasParallelSignature() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
   */
  public org.oneflow.core.job.ParallelSignature getParallelSignature() {
    return parallelSignature_ == null ? org.oneflow.core.job.ParallelSignature.getDefaultInstance() : parallelSignature_;
  }
  /**
   * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
   */
  public org.oneflow.core.job.ParallelSignatureOrBuilder getParallelSignatureOrBuilder() {
    return parallelSignature_ == null ? org.oneflow.core.job.ParallelSignature.getDefaultInstance() : parallelSignature_;
  }

  public static final int PARALLEL_CONF_SIGNATURE_FIELD_NUMBER = 109;
  private org.oneflow.core.job.ParallelConfSignature parallelConfSignature_;
  /**
   * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
   */
  public boolean hasParallelConfSignature() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
   */
  public org.oneflow.core.job.ParallelConfSignature getParallelConfSignature() {
    return parallelConfSignature_ == null ? org.oneflow.core.job.ParallelConfSignature.getDefaultInstance() : parallelConfSignature_;
  }
  /**
   * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
   */
  public org.oneflow.core.job.ParallelConfSignatureOrBuilder getParallelConfSignatureOrBuilder() {
    return parallelConfSignature_ == null ? org.oneflow.core.job.ParallelConfSignature.getDefaultInstance() : parallelConfSignature_;
  }

  public static final int PARALLEL_DISTRIBUTION_SIGNATURE_FIELD_NUMBER = 110;
  private org.oneflow.core.job.ParallelDistributionSignature parallelDistributionSignature_;
  /**
   * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
   */
  public boolean hasParallelDistributionSignature() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
   */
  public org.oneflow.core.job.ParallelDistributionSignature getParallelDistributionSignature() {
    return parallelDistributionSignature_ == null ? org.oneflow.core.job.ParallelDistributionSignature.getDefaultInstance() : parallelDistributionSignature_;
  }
  /**
   * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
   */
  public org.oneflow.core.job.ParallelDistributionSignatureOrBuilder getParallelDistributionSignatureOrBuilder() {
    return parallelDistributionSignature_ == null ? org.oneflow.core.job.ParallelDistributionSignature.getDefaultInstance() : parallelDistributionSignature_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasOpConf()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasArgSignature()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasArgModifierSignature()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getOpConf().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasSbpSignature()) {
      if (!getSbpSignature().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasLogicalBlobDescSignature()) {
      if (!getLogicalBlobDescSignature().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasParallelConfSignature()) {
      if (!getParallelConfSignature().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasParallelDistributionSignature()) {
      if (!getParallelDistributionSignature().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < inputBns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, inputBns_.getRaw(i));
    }
    for (int i = 0; i < outputBns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, outputBns_.getRaw(i));
    }
    for (int i = 0; i < tmpBns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tmpBns_.getRaw(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(50, getOpConf());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(100, getArgSignature());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(101, getArgModifierSignature());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeMessage(102, getBlobLastUsedSignature());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(103, getBlobBackwardUsedSignature());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(104, getSbpSignature());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeMessage(105, getMirroredSignature());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeMessage(106, getLogicalBlobDescSignature());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeMessage(108, getParallelSignature());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeMessage(109, getParallelConfSignature());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeMessage(110, getParallelDistributionSignature());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < inputBns_.size(); i++) {
        dataSize += computeStringSizeNoTag(inputBns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getInputBnsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < outputBns_.size(); i++) {
        dataSize += computeStringSizeNoTag(outputBns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getOutputBnsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tmpBns_.size(); i++) {
        dataSize += computeStringSizeNoTag(tmpBns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTmpBnsList().size();
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(50, getOpConf());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(100, getArgSignature());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(101, getArgModifierSignature());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(102, getBlobLastUsedSignature());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(103, getBlobBackwardUsedSignature());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(104, getSbpSignature());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(105, getMirroredSignature());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(106, getLogicalBlobDescSignature());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(108, getParallelSignature());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(109, getParallelConfSignature());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(110, getParallelDistributionSignature());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.oneflow.core.operator.OpAttribute)) {
      return super.equals(obj);
    }
    org.oneflow.core.operator.OpAttribute other = (org.oneflow.core.operator.OpAttribute) obj;

    boolean result = true;
    result = result && getInputBnsList()
        .equals(other.getInputBnsList());
    result = result && getOutputBnsList()
        .equals(other.getOutputBnsList());
    result = result && getTmpBnsList()
        .equals(other.getTmpBnsList());
    result = result && (hasOpConf() == other.hasOpConf());
    if (hasOpConf()) {
      result = result && getOpConf()
          .equals(other.getOpConf());
    }
    result = result && (hasArgSignature() == other.hasArgSignature());
    if (hasArgSignature()) {
      result = result && getArgSignature()
          .equals(other.getArgSignature());
    }
    result = result && (hasArgModifierSignature() == other.hasArgModifierSignature());
    if (hasArgModifierSignature()) {
      result = result && getArgModifierSignature()
          .equals(other.getArgModifierSignature());
    }
    result = result && (hasBlobLastUsedSignature() == other.hasBlobLastUsedSignature());
    if (hasBlobLastUsedSignature()) {
      result = result && getBlobLastUsedSignature()
          .equals(other.getBlobLastUsedSignature());
    }
    result = result && (hasBlobBackwardUsedSignature() == other.hasBlobBackwardUsedSignature());
    if (hasBlobBackwardUsedSignature()) {
      result = result && getBlobBackwardUsedSignature()
          .equals(other.getBlobBackwardUsedSignature());
    }
    result = result && (hasSbpSignature() == other.hasSbpSignature());
    if (hasSbpSignature()) {
      result = result && getSbpSignature()
          .equals(other.getSbpSignature());
    }
    result = result && (hasMirroredSignature() == other.hasMirroredSignature());
    if (hasMirroredSignature()) {
      result = result && getMirroredSignature()
          .equals(other.getMirroredSignature());
    }
    result = result && (hasLogicalBlobDescSignature() == other.hasLogicalBlobDescSignature());
    if (hasLogicalBlobDescSignature()) {
      result = result && getLogicalBlobDescSignature()
          .equals(other.getLogicalBlobDescSignature());
    }
    result = result && (hasParallelSignature() == other.hasParallelSignature());
    if (hasParallelSignature()) {
      result = result && getParallelSignature()
          .equals(other.getParallelSignature());
    }
    result = result && (hasParallelConfSignature() == other.hasParallelConfSignature());
    if (hasParallelConfSignature()) {
      result = result && getParallelConfSignature()
          .equals(other.getParallelConfSignature());
    }
    result = result && (hasParallelDistributionSignature() == other.hasParallelDistributionSignature());
    if (hasParallelDistributionSignature()) {
      result = result && getParallelDistributionSignature()
          .equals(other.getParallelDistributionSignature());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getInputBnsCount() > 0) {
      hash = (37 * hash) + INPUT_BNS_FIELD_NUMBER;
      hash = (53 * hash) + getInputBnsList().hashCode();
    }
    if (getOutputBnsCount() > 0) {
      hash = (37 * hash) + OUTPUT_BNS_FIELD_NUMBER;
      hash = (53 * hash) + getOutputBnsList().hashCode();
    }
    if (getTmpBnsCount() > 0) {
      hash = (37 * hash) + TMP_BNS_FIELD_NUMBER;
      hash = (53 * hash) + getTmpBnsList().hashCode();
    }
    if (hasOpConf()) {
      hash = (37 * hash) + OP_CONF_FIELD_NUMBER;
      hash = (53 * hash) + getOpConf().hashCode();
    }
    if (hasArgSignature()) {
      hash = (37 * hash) + ARG_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getArgSignature().hashCode();
    }
    if (hasArgModifierSignature()) {
      hash = (37 * hash) + ARG_MODIFIER_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getArgModifierSignature().hashCode();
    }
    if (hasBlobLastUsedSignature()) {
      hash = (37 * hash) + BLOB_LAST_USED_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getBlobLastUsedSignature().hashCode();
    }
    if (hasBlobBackwardUsedSignature()) {
      hash = (37 * hash) + BLOB_BACKWARD_USED_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getBlobBackwardUsedSignature().hashCode();
    }
    if (hasSbpSignature()) {
      hash = (37 * hash) + SBP_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSbpSignature().hashCode();
    }
    if (hasMirroredSignature()) {
      hash = (37 * hash) + MIRRORED_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getMirroredSignature().hashCode();
    }
    if (hasLogicalBlobDescSignature()) {
      hash = (37 * hash) + LOGICAL_BLOB_DESC_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getLogicalBlobDescSignature().hashCode();
    }
    if (hasParallelSignature()) {
      hash = (37 * hash) + PARALLEL_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getParallelSignature().hashCode();
    }
    if (hasParallelConfSignature()) {
      hash = (37 * hash) + PARALLEL_CONF_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getParallelConfSignature().hashCode();
    }
    if (hasParallelDistributionSignature()) {
      hash = (37 * hash) + PARALLEL_DISTRIBUTION_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getParallelDistributionSignature().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.oneflow.core.operator.OpAttribute parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.operator.OpAttribute parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.operator.OpAttribute parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.oneflow.core.operator.OpAttribute parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.oneflow.core.operator.OpAttribute parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.operator.OpAttribute parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.operator.OpAttribute parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.oneflow.core.operator.OpAttribute parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.oneflow.core.operator.OpAttribute parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.oneflow.core.operator.OpAttribute parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.oneflow.core.operator.OpAttribute prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code oneflow.OpAttribute}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oneflow.OpAttribute)
      org.oneflow.core.operator.OpAttributeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.oneflow.core.operator.OpAttributeOuterClass.internal_static_oneflow_OpAttribute_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.oneflow.core.operator.OpAttributeOuterClass.internal_static_oneflow_OpAttribute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.oneflow.core.operator.OpAttribute.class, org.oneflow.core.operator.OpAttribute.Builder.class);
    }

    // Construct using org.oneflow.core.operator.OpAttribute.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getOpConfFieldBuilder();
        getArgSignatureFieldBuilder();
        getArgModifierSignatureFieldBuilder();
        getBlobLastUsedSignatureFieldBuilder();
        getBlobBackwardUsedSignatureFieldBuilder();
        getSbpSignatureFieldBuilder();
        getMirroredSignatureFieldBuilder();
        getLogicalBlobDescSignatureFieldBuilder();
        getParallelSignatureFieldBuilder();
        getParallelConfSignatureFieldBuilder();
        getParallelDistributionSignatureFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      inputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      outputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      tmpBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      if (opConfBuilder_ == null) {
        opConf_ = null;
      } else {
        opConfBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (argSignatureBuilder_ == null) {
        argSignature_ = null;
      } else {
        argSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (argModifierSignatureBuilder_ == null) {
        argModifierSignature_ = null;
      } else {
        argModifierSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (blobLastUsedSignatureBuilder_ == null) {
        blobLastUsedSignature_ = null;
      } else {
        blobLastUsedSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (blobBackwardUsedSignatureBuilder_ == null) {
        blobBackwardUsedSignature_ = null;
      } else {
        blobBackwardUsedSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (sbpSignatureBuilder_ == null) {
        sbpSignature_ = null;
      } else {
        sbpSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (mirroredSignatureBuilder_ == null) {
        mirroredSignature_ = null;
      } else {
        mirroredSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      if (logicalBlobDescSignatureBuilder_ == null) {
        logicalBlobDescSignature_ = null;
      } else {
        logicalBlobDescSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      if (parallelSignatureBuilder_ == null) {
        parallelSignature_ = null;
      } else {
        parallelSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      if (parallelConfSignatureBuilder_ == null) {
        parallelConfSignature_ = null;
      } else {
        parallelConfSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      if (parallelDistributionSignatureBuilder_ == null) {
        parallelDistributionSignature_ = null;
      } else {
        parallelDistributionSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00002000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.oneflow.core.operator.OpAttributeOuterClass.internal_static_oneflow_OpAttribute_descriptor;
    }

    public org.oneflow.core.operator.OpAttribute getDefaultInstanceForType() {
      return org.oneflow.core.operator.OpAttribute.getDefaultInstance();
    }

    public org.oneflow.core.operator.OpAttribute build() {
      org.oneflow.core.operator.OpAttribute result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.oneflow.core.operator.OpAttribute buildPartial() {
      org.oneflow.core.operator.OpAttribute result = new org.oneflow.core.operator.OpAttribute(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        inputBns_ = inputBns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.inputBns_ = inputBns_;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        outputBns_ = outputBns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.outputBns_ = outputBns_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        tmpBns_ = tmpBns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.tmpBns_ = tmpBns_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000001;
      }
      if (opConfBuilder_ == null) {
        result.opConf_ = opConf_;
      } else {
        result.opConf_ = opConfBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000002;
      }
      if (argSignatureBuilder_ == null) {
        result.argSignature_ = argSignature_;
      } else {
        result.argSignature_ = argSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000004;
      }
      if (argModifierSignatureBuilder_ == null) {
        result.argModifierSignature_ = argModifierSignature_;
      } else {
        result.argModifierSignature_ = argModifierSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000008;
      }
      if (blobLastUsedSignatureBuilder_ == null) {
        result.blobLastUsedSignature_ = blobLastUsedSignature_;
      } else {
        result.blobLastUsedSignature_ = blobLastUsedSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000010;
      }
      if (blobBackwardUsedSignatureBuilder_ == null) {
        result.blobBackwardUsedSignature_ = blobBackwardUsedSignature_;
      } else {
        result.blobBackwardUsedSignature_ = blobBackwardUsedSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000020;
      }
      if (sbpSignatureBuilder_ == null) {
        result.sbpSignature_ = sbpSignature_;
      } else {
        result.sbpSignature_ = sbpSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000040;
      }
      if (mirroredSignatureBuilder_ == null) {
        result.mirroredSignature_ = mirroredSignature_;
      } else {
        result.mirroredSignature_ = mirroredSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000080;
      }
      if (logicalBlobDescSignatureBuilder_ == null) {
        result.logicalBlobDescSignature_ = logicalBlobDescSignature_;
      } else {
        result.logicalBlobDescSignature_ = logicalBlobDescSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000100;
      }
      if (parallelSignatureBuilder_ == null) {
        result.parallelSignature_ = parallelSignature_;
      } else {
        result.parallelSignature_ = parallelSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
        to_bitField0_ |= 0x00000200;
      }
      if (parallelConfSignatureBuilder_ == null) {
        result.parallelConfSignature_ = parallelConfSignature_;
      } else {
        result.parallelConfSignature_ = parallelConfSignatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
        to_bitField0_ |= 0x00000400;
      }
      if (parallelDistributionSignatureBuilder_ == null) {
        result.parallelDistributionSignature_ = parallelDistributionSignature_;
      } else {
        result.parallelDistributionSignature_ = parallelDistributionSignatureBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.oneflow.core.operator.OpAttribute) {
        return mergeFrom((org.oneflow.core.operator.OpAttribute)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.oneflow.core.operator.OpAttribute other) {
      if (other == org.oneflow.core.operator.OpAttribute.getDefaultInstance()) return this;
      if (!other.inputBns_.isEmpty()) {
        if (inputBns_.isEmpty()) {
          inputBns_ = other.inputBns_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureInputBnsIsMutable();
          inputBns_.addAll(other.inputBns_);
        }
        onChanged();
      }
      if (!other.outputBns_.isEmpty()) {
        if (outputBns_.isEmpty()) {
          outputBns_ = other.outputBns_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureOutputBnsIsMutable();
          outputBns_.addAll(other.outputBns_);
        }
        onChanged();
      }
      if (!other.tmpBns_.isEmpty()) {
        if (tmpBns_.isEmpty()) {
          tmpBns_ = other.tmpBns_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureTmpBnsIsMutable();
          tmpBns_.addAll(other.tmpBns_);
        }
        onChanged();
      }
      if (other.hasOpConf()) {
        mergeOpConf(other.getOpConf());
      }
      if (other.hasArgSignature()) {
        mergeArgSignature(other.getArgSignature());
      }
      if (other.hasArgModifierSignature()) {
        mergeArgModifierSignature(other.getArgModifierSignature());
      }
      if (other.hasBlobLastUsedSignature()) {
        mergeBlobLastUsedSignature(other.getBlobLastUsedSignature());
      }
      if (other.hasBlobBackwardUsedSignature()) {
        mergeBlobBackwardUsedSignature(other.getBlobBackwardUsedSignature());
      }
      if (other.hasSbpSignature()) {
        mergeSbpSignature(other.getSbpSignature());
      }
      if (other.hasMirroredSignature()) {
        mergeMirroredSignature(other.getMirroredSignature());
      }
      if (other.hasLogicalBlobDescSignature()) {
        mergeLogicalBlobDescSignature(other.getLogicalBlobDescSignature());
      }
      if (other.hasParallelSignature()) {
        mergeParallelSignature(other.getParallelSignature());
      }
      if (other.hasParallelConfSignature()) {
        mergeParallelConfSignature(other.getParallelConfSignature());
      }
      if (other.hasParallelDistributionSignature()) {
        mergeParallelDistributionSignature(other.getParallelDistributionSignature());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasOpConf()) {
        return false;
      }
      if (!hasArgSignature()) {
        return false;
      }
      if (!hasArgModifierSignature()) {
        return false;
      }
      if (!getOpConf().isInitialized()) {
        return false;
      }
      if (hasSbpSignature()) {
        if (!getSbpSignature().isInitialized()) {
          return false;
        }
      }
      if (hasLogicalBlobDescSignature()) {
        if (!getLogicalBlobDescSignature().isInitialized()) {
          return false;
        }
      }
      if (hasParallelConfSignature()) {
        if (!getParallelConfSignature().isInitialized()) {
          return false;
        }
      }
      if (hasParallelDistributionSignature()) {
        if (!getParallelDistributionSignature().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.oneflow.core.operator.OpAttribute parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.oneflow.core.operator.OpAttribute) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList inputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureInputBnsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        inputBns_ = new com.google.protobuf.LazyStringArrayList(inputBns_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInputBnsList() {
      return inputBns_.getUnmodifiableView();
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public int getInputBnsCount() {
      return inputBns_.size();
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public java.lang.String getInputBns(int index) {
      return inputBns_.get(index);
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public com.google.protobuf.ByteString
        getInputBnsBytes(int index) {
      return inputBns_.getByteString(index);
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public Builder setInputBns(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInputBnsIsMutable();
      inputBns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public Builder addInputBns(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInputBnsIsMutable();
      inputBns_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public Builder addAllInputBns(
        java.lang.Iterable<java.lang.String> values) {
      ensureInputBnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, inputBns_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public Builder clearInputBns() {
      inputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input_bns = 1;</code>
     */
    public Builder addInputBnsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInputBnsIsMutable();
      inputBns_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList outputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureOutputBnsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        outputBns_ = new com.google.protobuf.LazyStringArrayList(outputBns_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getOutputBnsList() {
      return outputBns_.getUnmodifiableView();
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public int getOutputBnsCount() {
      return outputBns_.size();
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public java.lang.String getOutputBns(int index) {
      return outputBns_.get(index);
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOutputBnsBytes(int index) {
      return outputBns_.getByteString(index);
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public Builder setOutputBns(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputBnsIsMutable();
      outputBns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public Builder addOutputBns(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputBnsIsMutable();
      outputBns_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public Builder addAllOutputBns(
        java.lang.Iterable<java.lang.String> values) {
      ensureOutputBnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, outputBns_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public Builder clearOutputBns() {
      outputBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string output_bns = 2;</code>
     */
    public Builder addOutputBnsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputBnsIsMutable();
      outputBns_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList tmpBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTmpBnsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        tmpBns_ = new com.google.protobuf.LazyStringArrayList(tmpBns_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTmpBnsList() {
      return tmpBns_.getUnmodifiableView();
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public int getTmpBnsCount() {
      return tmpBns_.size();
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public java.lang.String getTmpBns(int index) {
      return tmpBns_.get(index);
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTmpBnsBytes(int index) {
      return tmpBns_.getByteString(index);
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public Builder setTmpBns(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTmpBnsIsMutable();
      tmpBns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public Builder addTmpBns(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTmpBnsIsMutable();
      tmpBns_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public Builder addAllTmpBns(
        java.lang.Iterable<java.lang.String> values) {
      ensureTmpBnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, tmpBns_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public Builder clearTmpBns() {
      tmpBns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tmp_bns = 3;</code>
     */
    public Builder addTmpBnsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTmpBnsIsMutable();
      tmpBns_.add(value);
      onChanged();
      return this;
    }

    private org.oneflow.core.operator.OperatorConf opConf_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.operator.OperatorConf, org.oneflow.core.operator.OperatorConf.Builder, org.oneflow.core.operator.OperatorConfOrBuilder> opConfBuilder_;
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public boolean hasOpConf() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public org.oneflow.core.operator.OperatorConf getOpConf() {
      if (opConfBuilder_ == null) {
        return opConf_ == null ? org.oneflow.core.operator.OperatorConf.getDefaultInstance() : opConf_;
      } else {
        return opConfBuilder_.getMessage();
      }
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public Builder setOpConf(org.oneflow.core.operator.OperatorConf value) {
      if (opConfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        opConf_ = value;
        onChanged();
      } else {
        opConfBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public Builder setOpConf(
        org.oneflow.core.operator.OperatorConf.Builder builderForValue) {
      if (opConfBuilder_ == null) {
        opConf_ = builderForValue.build();
        onChanged();
      } else {
        opConfBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public Builder mergeOpConf(org.oneflow.core.operator.OperatorConf value) {
      if (opConfBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            opConf_ != null &&
            opConf_ != org.oneflow.core.operator.OperatorConf.getDefaultInstance()) {
          opConf_ =
            org.oneflow.core.operator.OperatorConf.newBuilder(opConf_).mergeFrom(value).buildPartial();
        } else {
          opConf_ = value;
        }
        onChanged();
      } else {
        opConfBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public Builder clearOpConf() {
      if (opConfBuilder_ == null) {
        opConf_ = null;
        onChanged();
      } else {
        opConfBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public org.oneflow.core.operator.OperatorConf.Builder getOpConfBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getOpConfFieldBuilder().getBuilder();
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    public org.oneflow.core.operator.OperatorConfOrBuilder getOpConfOrBuilder() {
      if (opConfBuilder_ != null) {
        return opConfBuilder_.getMessageOrBuilder();
      } else {
        return opConf_ == null ?
            org.oneflow.core.operator.OperatorConf.getDefaultInstance() : opConf_;
      }
    }
    /**
     * <code>required .oneflow.OperatorConf op_conf = 50;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.operator.OperatorConf, org.oneflow.core.operator.OperatorConf.Builder, org.oneflow.core.operator.OperatorConfOrBuilder> 
        getOpConfFieldBuilder() {
      if (opConfBuilder_ == null) {
        opConfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.operator.OperatorConf, org.oneflow.core.operator.OperatorConf.Builder, org.oneflow.core.operator.OperatorConfOrBuilder>(
                getOpConf(),
                getParentForChildren(),
                isClean());
        opConf_ = null;
      }
      return opConfBuilder_;
    }

    private org.oneflow.core.register.ArgSignature argSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.register.ArgSignature, org.oneflow.core.register.ArgSignature.Builder, org.oneflow.core.register.ArgSignatureOrBuilder> argSignatureBuilder_;
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public boolean hasArgSignature() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public org.oneflow.core.register.ArgSignature getArgSignature() {
      if (argSignatureBuilder_ == null) {
        return argSignature_ == null ? org.oneflow.core.register.ArgSignature.getDefaultInstance() : argSignature_;
      } else {
        return argSignatureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public Builder setArgSignature(org.oneflow.core.register.ArgSignature value) {
      if (argSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        argSignature_ = value;
        onChanged();
      } else {
        argSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public Builder setArgSignature(
        org.oneflow.core.register.ArgSignature.Builder builderForValue) {
      if (argSignatureBuilder_ == null) {
        argSignature_ = builderForValue.build();
        onChanged();
      } else {
        argSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public Builder mergeArgSignature(org.oneflow.core.register.ArgSignature value) {
      if (argSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            argSignature_ != null &&
            argSignature_ != org.oneflow.core.register.ArgSignature.getDefaultInstance()) {
          argSignature_ =
            org.oneflow.core.register.ArgSignature.newBuilder(argSignature_).mergeFrom(value).buildPartial();
        } else {
          argSignature_ = value;
        }
        onChanged();
      } else {
        argSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public Builder clearArgSignature() {
      if (argSignatureBuilder_ == null) {
        argSignature_ = null;
        onChanged();
      } else {
        argSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public org.oneflow.core.register.ArgSignature.Builder getArgSignatureBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getArgSignatureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    public org.oneflow.core.register.ArgSignatureOrBuilder getArgSignatureOrBuilder() {
      if (argSignatureBuilder_ != null) {
        return argSignatureBuilder_.getMessageOrBuilder();
      } else {
        return argSignature_ == null ?
            org.oneflow.core.register.ArgSignature.getDefaultInstance() : argSignature_;
      }
    }
    /**
     * <pre>
     * inter-node signature
     * </pre>
     *
     * <code>required .oneflow.ArgSignature arg_signature = 100;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.register.ArgSignature, org.oneflow.core.register.ArgSignature.Builder, org.oneflow.core.register.ArgSignatureOrBuilder> 
        getArgSignatureFieldBuilder() {
      if (argSignatureBuilder_ == null) {
        argSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.register.ArgSignature, org.oneflow.core.register.ArgSignature.Builder, org.oneflow.core.register.ArgSignatureOrBuilder>(
                getArgSignature(),
                getParentForChildren(),
                isClean());
        argSignature_ = null;
      }
      return argSignatureBuilder_;
    }

    private org.oneflow.core.operator.ArgModifierSignature argModifierSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.operator.ArgModifierSignature, org.oneflow.core.operator.ArgModifierSignature.Builder, org.oneflow.core.operator.ArgModifierSignatureOrBuilder> argModifierSignatureBuilder_;
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public boolean hasArgModifierSignature() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public org.oneflow.core.operator.ArgModifierSignature getArgModifierSignature() {
      if (argModifierSignatureBuilder_ == null) {
        return argModifierSignature_ == null ? org.oneflow.core.operator.ArgModifierSignature.getDefaultInstance() : argModifierSignature_;
      } else {
        return argModifierSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public Builder setArgModifierSignature(org.oneflow.core.operator.ArgModifierSignature value) {
      if (argModifierSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        argModifierSignature_ = value;
        onChanged();
      } else {
        argModifierSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public Builder setArgModifierSignature(
        org.oneflow.core.operator.ArgModifierSignature.Builder builderForValue) {
      if (argModifierSignatureBuilder_ == null) {
        argModifierSignature_ = builderForValue.build();
        onChanged();
      } else {
        argModifierSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public Builder mergeArgModifierSignature(org.oneflow.core.operator.ArgModifierSignature value) {
      if (argModifierSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            argModifierSignature_ != null &&
            argModifierSignature_ != org.oneflow.core.operator.ArgModifierSignature.getDefaultInstance()) {
          argModifierSignature_ =
            org.oneflow.core.operator.ArgModifierSignature.newBuilder(argModifierSignature_).mergeFrom(value).buildPartial();
        } else {
          argModifierSignature_ = value;
        }
        onChanged();
      } else {
        argModifierSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public Builder clearArgModifierSignature() {
      if (argModifierSignatureBuilder_ == null) {
        argModifierSignature_ = null;
        onChanged();
      } else {
        argModifierSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public org.oneflow.core.operator.ArgModifierSignature.Builder getArgModifierSignatureBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getArgModifierSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    public org.oneflow.core.operator.ArgModifierSignatureOrBuilder getArgModifierSignatureOrBuilder() {
      if (argModifierSignatureBuilder_ != null) {
        return argModifierSignatureBuilder_.getMessageOrBuilder();
      } else {
        return argModifierSignature_ == null ?
            org.oneflow.core.operator.ArgModifierSignature.getDefaultInstance() : argModifierSignature_;
      }
    }
    /**
     * <code>required .oneflow.ArgModifierSignature arg_modifier_signature = 101;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.operator.ArgModifierSignature, org.oneflow.core.operator.ArgModifierSignature.Builder, org.oneflow.core.operator.ArgModifierSignatureOrBuilder> 
        getArgModifierSignatureFieldBuilder() {
      if (argModifierSignatureBuilder_ == null) {
        argModifierSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.operator.ArgModifierSignature, org.oneflow.core.operator.ArgModifierSignature.Builder, org.oneflow.core.operator.ArgModifierSignatureOrBuilder>(
                getArgModifierSignature(),
                getParentForChildren(),
                isClean());
        argModifierSignature_ = null;
      }
      return argModifierSignatureBuilder_;
    }

    private org.oneflow.core.job.BlobLastUsedSignature blobLastUsedSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.BlobLastUsedSignature, org.oneflow.core.job.BlobLastUsedSignature.Builder, org.oneflow.core.job.BlobLastUsedSignatureOrBuilder> blobLastUsedSignatureBuilder_;
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public boolean hasBlobLastUsedSignature() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public org.oneflow.core.job.BlobLastUsedSignature getBlobLastUsedSignature() {
      if (blobLastUsedSignatureBuilder_ == null) {
        return blobLastUsedSignature_ == null ? org.oneflow.core.job.BlobLastUsedSignature.getDefaultInstance() : blobLastUsedSignature_;
      } else {
        return blobLastUsedSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public Builder setBlobLastUsedSignature(org.oneflow.core.job.BlobLastUsedSignature value) {
      if (blobLastUsedSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blobLastUsedSignature_ = value;
        onChanged();
      } else {
        blobLastUsedSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public Builder setBlobLastUsedSignature(
        org.oneflow.core.job.BlobLastUsedSignature.Builder builderForValue) {
      if (blobLastUsedSignatureBuilder_ == null) {
        blobLastUsedSignature_ = builderForValue.build();
        onChanged();
      } else {
        blobLastUsedSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public Builder mergeBlobLastUsedSignature(org.oneflow.core.job.BlobLastUsedSignature value) {
      if (blobLastUsedSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            blobLastUsedSignature_ != null &&
            blobLastUsedSignature_ != org.oneflow.core.job.BlobLastUsedSignature.getDefaultInstance()) {
          blobLastUsedSignature_ =
            org.oneflow.core.job.BlobLastUsedSignature.newBuilder(blobLastUsedSignature_).mergeFrom(value).buildPartial();
        } else {
          blobLastUsedSignature_ = value;
        }
        onChanged();
      } else {
        blobLastUsedSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public Builder clearBlobLastUsedSignature() {
      if (blobLastUsedSignatureBuilder_ == null) {
        blobLastUsedSignature_ = null;
        onChanged();
      } else {
        blobLastUsedSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public org.oneflow.core.job.BlobLastUsedSignature.Builder getBlobLastUsedSignatureBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getBlobLastUsedSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    public org.oneflow.core.job.BlobLastUsedSignatureOrBuilder getBlobLastUsedSignatureOrBuilder() {
      if (blobLastUsedSignatureBuilder_ != null) {
        return blobLastUsedSignatureBuilder_.getMessageOrBuilder();
      } else {
        return blobLastUsedSignature_ == null ?
            org.oneflow.core.job.BlobLastUsedSignature.getDefaultInstance() : blobLastUsedSignature_;
      }
    }
    /**
     * <code>optional .oneflow.BlobLastUsedSignature blob_last_used_signature = 102;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.BlobLastUsedSignature, org.oneflow.core.job.BlobLastUsedSignature.Builder, org.oneflow.core.job.BlobLastUsedSignatureOrBuilder> 
        getBlobLastUsedSignatureFieldBuilder() {
      if (blobLastUsedSignatureBuilder_ == null) {
        blobLastUsedSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.BlobLastUsedSignature, org.oneflow.core.job.BlobLastUsedSignature.Builder, org.oneflow.core.job.BlobLastUsedSignatureOrBuilder>(
                getBlobLastUsedSignature(),
                getParentForChildren(),
                isClean());
        blobLastUsedSignature_ = null;
      }
      return blobLastUsedSignatureBuilder_;
    }

    private org.oneflow.core.job.BlobBackwardUsedSignature blobBackwardUsedSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.BlobBackwardUsedSignature, org.oneflow.core.job.BlobBackwardUsedSignature.Builder, org.oneflow.core.job.BlobBackwardUsedSignatureOrBuilder> blobBackwardUsedSignatureBuilder_;
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public boolean hasBlobBackwardUsedSignature() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public org.oneflow.core.job.BlobBackwardUsedSignature getBlobBackwardUsedSignature() {
      if (blobBackwardUsedSignatureBuilder_ == null) {
        return blobBackwardUsedSignature_ == null ? org.oneflow.core.job.BlobBackwardUsedSignature.getDefaultInstance() : blobBackwardUsedSignature_;
      } else {
        return blobBackwardUsedSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public Builder setBlobBackwardUsedSignature(org.oneflow.core.job.BlobBackwardUsedSignature value) {
      if (blobBackwardUsedSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blobBackwardUsedSignature_ = value;
        onChanged();
      } else {
        blobBackwardUsedSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public Builder setBlobBackwardUsedSignature(
        org.oneflow.core.job.BlobBackwardUsedSignature.Builder builderForValue) {
      if (blobBackwardUsedSignatureBuilder_ == null) {
        blobBackwardUsedSignature_ = builderForValue.build();
        onChanged();
      } else {
        blobBackwardUsedSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public Builder mergeBlobBackwardUsedSignature(org.oneflow.core.job.BlobBackwardUsedSignature value) {
      if (blobBackwardUsedSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            blobBackwardUsedSignature_ != null &&
            blobBackwardUsedSignature_ != org.oneflow.core.job.BlobBackwardUsedSignature.getDefaultInstance()) {
          blobBackwardUsedSignature_ =
            org.oneflow.core.job.BlobBackwardUsedSignature.newBuilder(blobBackwardUsedSignature_).mergeFrom(value).buildPartial();
        } else {
          blobBackwardUsedSignature_ = value;
        }
        onChanged();
      } else {
        blobBackwardUsedSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public Builder clearBlobBackwardUsedSignature() {
      if (blobBackwardUsedSignatureBuilder_ == null) {
        blobBackwardUsedSignature_ = null;
        onChanged();
      } else {
        blobBackwardUsedSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public org.oneflow.core.job.BlobBackwardUsedSignature.Builder getBlobBackwardUsedSignatureBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getBlobBackwardUsedSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    public org.oneflow.core.job.BlobBackwardUsedSignatureOrBuilder getBlobBackwardUsedSignatureOrBuilder() {
      if (blobBackwardUsedSignatureBuilder_ != null) {
        return blobBackwardUsedSignatureBuilder_.getMessageOrBuilder();
      } else {
        return blobBackwardUsedSignature_ == null ?
            org.oneflow.core.job.BlobBackwardUsedSignature.getDefaultInstance() : blobBackwardUsedSignature_;
      }
    }
    /**
     * <code>optional .oneflow.BlobBackwardUsedSignature blob_backward_used_signature = 103;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.BlobBackwardUsedSignature, org.oneflow.core.job.BlobBackwardUsedSignature.Builder, org.oneflow.core.job.BlobBackwardUsedSignatureOrBuilder> 
        getBlobBackwardUsedSignatureFieldBuilder() {
      if (blobBackwardUsedSignatureBuilder_ == null) {
        blobBackwardUsedSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.BlobBackwardUsedSignature, org.oneflow.core.job.BlobBackwardUsedSignature.Builder, org.oneflow.core.job.BlobBackwardUsedSignatureOrBuilder>(
                getBlobBackwardUsedSignature(),
                getParentForChildren(),
                isClean());
        blobBackwardUsedSignature_ = null;
      }
      return blobBackwardUsedSignatureBuilder_;
    }

    private org.oneflow.core.job.SbpSignature sbpSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.SbpSignature, org.oneflow.core.job.SbpSignature.Builder, org.oneflow.core.job.SbpSignatureOrBuilder> sbpSignatureBuilder_;
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public boolean hasSbpSignature() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public org.oneflow.core.job.SbpSignature getSbpSignature() {
      if (sbpSignatureBuilder_ == null) {
        return sbpSignature_ == null ? org.oneflow.core.job.SbpSignature.getDefaultInstance() : sbpSignature_;
      } else {
        return sbpSignatureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public Builder setSbpSignature(org.oneflow.core.job.SbpSignature value) {
      if (sbpSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sbpSignature_ = value;
        onChanged();
      } else {
        sbpSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public Builder setSbpSignature(
        org.oneflow.core.job.SbpSignature.Builder builderForValue) {
      if (sbpSignatureBuilder_ == null) {
        sbpSignature_ = builderForValue.build();
        onChanged();
      } else {
        sbpSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public Builder mergeSbpSignature(org.oneflow.core.job.SbpSignature value) {
      if (sbpSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            sbpSignature_ != null &&
            sbpSignature_ != org.oneflow.core.job.SbpSignature.getDefaultInstance()) {
          sbpSignature_ =
            org.oneflow.core.job.SbpSignature.newBuilder(sbpSignature_).mergeFrom(value).buildPartial();
        } else {
          sbpSignature_ = value;
        }
        onChanged();
      } else {
        sbpSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public Builder clearSbpSignature() {
      if (sbpSignatureBuilder_ == null) {
        sbpSignature_ = null;
        onChanged();
      } else {
        sbpSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public org.oneflow.core.job.SbpSignature.Builder getSbpSignatureBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getSbpSignatureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    public org.oneflow.core.job.SbpSignatureOrBuilder getSbpSignatureOrBuilder() {
      if (sbpSignatureBuilder_ != null) {
        return sbpSignatureBuilder_.getMessageOrBuilder();
      } else {
        return sbpSignature_ == null ?
            org.oneflow.core.job.SbpSignature.getDefaultInstance() : sbpSignature_;
      }
    }
    /**
     * <pre>
     * op node signature
     * </pre>
     *
     * <code>optional .oneflow.SbpSignature sbp_signature = 104;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.SbpSignature, org.oneflow.core.job.SbpSignature.Builder, org.oneflow.core.job.SbpSignatureOrBuilder> 
        getSbpSignatureFieldBuilder() {
      if (sbpSignatureBuilder_ == null) {
        sbpSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.SbpSignature, org.oneflow.core.job.SbpSignature.Builder, org.oneflow.core.job.SbpSignatureOrBuilder>(
                getSbpSignature(),
                getParentForChildren(),
                isClean());
        sbpSignature_ = null;
      }
      return sbpSignatureBuilder_;
    }

    private org.oneflow.core.job.MirroredSignature mirroredSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.MirroredSignature, org.oneflow.core.job.MirroredSignature.Builder, org.oneflow.core.job.MirroredSignatureOrBuilder> mirroredSignatureBuilder_;
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public boolean hasMirroredSignature() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public org.oneflow.core.job.MirroredSignature getMirroredSignature() {
      if (mirroredSignatureBuilder_ == null) {
        return mirroredSignature_ == null ? org.oneflow.core.job.MirroredSignature.getDefaultInstance() : mirroredSignature_;
      } else {
        return mirroredSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public Builder setMirroredSignature(org.oneflow.core.job.MirroredSignature value) {
      if (mirroredSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mirroredSignature_ = value;
        onChanged();
      } else {
        mirroredSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public Builder setMirroredSignature(
        org.oneflow.core.job.MirroredSignature.Builder builderForValue) {
      if (mirroredSignatureBuilder_ == null) {
        mirroredSignature_ = builderForValue.build();
        onChanged();
      } else {
        mirroredSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public Builder mergeMirroredSignature(org.oneflow.core.job.MirroredSignature value) {
      if (mirroredSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            mirroredSignature_ != null &&
            mirroredSignature_ != org.oneflow.core.job.MirroredSignature.getDefaultInstance()) {
          mirroredSignature_ =
            org.oneflow.core.job.MirroredSignature.newBuilder(mirroredSignature_).mergeFrom(value).buildPartial();
        } else {
          mirroredSignature_ = value;
        }
        onChanged();
      } else {
        mirroredSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public Builder clearMirroredSignature() {
      if (mirroredSignatureBuilder_ == null) {
        mirroredSignature_ = null;
        onChanged();
      } else {
        mirroredSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public org.oneflow.core.job.MirroredSignature.Builder getMirroredSignatureBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getMirroredSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    public org.oneflow.core.job.MirroredSignatureOrBuilder getMirroredSignatureOrBuilder() {
      if (mirroredSignatureBuilder_ != null) {
        return mirroredSignatureBuilder_.getMessageOrBuilder();
      } else {
        return mirroredSignature_ == null ?
            org.oneflow.core.job.MirroredSignature.getDefaultInstance() : mirroredSignature_;
      }
    }
    /**
     * <code>optional .oneflow.MirroredSignature mirrored_signature = 105;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.MirroredSignature, org.oneflow.core.job.MirroredSignature.Builder, org.oneflow.core.job.MirroredSignatureOrBuilder> 
        getMirroredSignatureFieldBuilder() {
      if (mirroredSignatureBuilder_ == null) {
        mirroredSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.MirroredSignature, org.oneflow.core.job.MirroredSignature.Builder, org.oneflow.core.job.MirroredSignatureOrBuilder>(
                getMirroredSignature(),
                getParentForChildren(),
                isClean());
        mirroredSignature_ = null;
      }
      return mirroredSignatureBuilder_;
    }

    private org.oneflow.core.register.BlobDescSignature logicalBlobDescSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.register.BlobDescSignature, org.oneflow.core.register.BlobDescSignature.Builder, org.oneflow.core.register.BlobDescSignatureOrBuilder> logicalBlobDescSignatureBuilder_;
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public boolean hasLogicalBlobDescSignature() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public org.oneflow.core.register.BlobDescSignature getLogicalBlobDescSignature() {
      if (logicalBlobDescSignatureBuilder_ == null) {
        return logicalBlobDescSignature_ == null ? org.oneflow.core.register.BlobDescSignature.getDefaultInstance() : logicalBlobDescSignature_;
      } else {
        return logicalBlobDescSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public Builder setLogicalBlobDescSignature(org.oneflow.core.register.BlobDescSignature value) {
      if (logicalBlobDescSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logicalBlobDescSignature_ = value;
        onChanged();
      } else {
        logicalBlobDescSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public Builder setLogicalBlobDescSignature(
        org.oneflow.core.register.BlobDescSignature.Builder builderForValue) {
      if (logicalBlobDescSignatureBuilder_ == null) {
        logicalBlobDescSignature_ = builderForValue.build();
        onChanged();
      } else {
        logicalBlobDescSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public Builder mergeLogicalBlobDescSignature(org.oneflow.core.register.BlobDescSignature value) {
      if (logicalBlobDescSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            logicalBlobDescSignature_ != null &&
            logicalBlobDescSignature_ != org.oneflow.core.register.BlobDescSignature.getDefaultInstance()) {
          logicalBlobDescSignature_ =
            org.oneflow.core.register.BlobDescSignature.newBuilder(logicalBlobDescSignature_).mergeFrom(value).buildPartial();
        } else {
          logicalBlobDescSignature_ = value;
        }
        onChanged();
      } else {
        logicalBlobDescSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public Builder clearLogicalBlobDescSignature() {
      if (logicalBlobDescSignatureBuilder_ == null) {
        logicalBlobDescSignature_ = null;
        onChanged();
      } else {
        logicalBlobDescSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public org.oneflow.core.register.BlobDescSignature.Builder getLogicalBlobDescSignatureBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getLogicalBlobDescSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    public org.oneflow.core.register.BlobDescSignatureOrBuilder getLogicalBlobDescSignatureOrBuilder() {
      if (logicalBlobDescSignatureBuilder_ != null) {
        return logicalBlobDescSignatureBuilder_.getMessageOrBuilder();
      } else {
        return logicalBlobDescSignature_ == null ?
            org.oneflow.core.register.BlobDescSignature.getDefaultInstance() : logicalBlobDescSignature_;
      }
    }
    /**
     * <code>optional .oneflow.BlobDescSignature logical_blob_desc_signature = 106;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.register.BlobDescSignature, org.oneflow.core.register.BlobDescSignature.Builder, org.oneflow.core.register.BlobDescSignatureOrBuilder> 
        getLogicalBlobDescSignatureFieldBuilder() {
      if (logicalBlobDescSignatureBuilder_ == null) {
        logicalBlobDescSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.register.BlobDescSignature, org.oneflow.core.register.BlobDescSignature.Builder, org.oneflow.core.register.BlobDescSignatureOrBuilder>(
                getLogicalBlobDescSignature(),
                getParentForChildren(),
                isClean());
        logicalBlobDescSignature_ = null;
      }
      return logicalBlobDescSignatureBuilder_;
    }

    private org.oneflow.core.job.ParallelSignature parallelSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ParallelSignature, org.oneflow.core.job.ParallelSignature.Builder, org.oneflow.core.job.ParallelSignatureOrBuilder> parallelSignatureBuilder_;
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public boolean hasParallelSignature() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public org.oneflow.core.job.ParallelSignature getParallelSignature() {
      if (parallelSignatureBuilder_ == null) {
        return parallelSignature_ == null ? org.oneflow.core.job.ParallelSignature.getDefaultInstance() : parallelSignature_;
      } else {
        return parallelSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public Builder setParallelSignature(org.oneflow.core.job.ParallelSignature value) {
      if (parallelSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parallelSignature_ = value;
        onChanged();
      } else {
        parallelSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public Builder setParallelSignature(
        org.oneflow.core.job.ParallelSignature.Builder builderForValue) {
      if (parallelSignatureBuilder_ == null) {
        parallelSignature_ = builderForValue.build();
        onChanged();
      } else {
        parallelSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public Builder mergeParallelSignature(org.oneflow.core.job.ParallelSignature value) {
      if (parallelSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00000800) == 0x00000800) &&
            parallelSignature_ != null &&
            parallelSignature_ != org.oneflow.core.job.ParallelSignature.getDefaultInstance()) {
          parallelSignature_ =
            org.oneflow.core.job.ParallelSignature.newBuilder(parallelSignature_).mergeFrom(value).buildPartial();
        } else {
          parallelSignature_ = value;
        }
        onChanged();
      } else {
        parallelSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public Builder clearParallelSignature() {
      if (parallelSignatureBuilder_ == null) {
        parallelSignature_ = null;
        onChanged();
      } else {
        parallelSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public org.oneflow.core.job.ParallelSignature.Builder getParallelSignatureBuilder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getParallelSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    public org.oneflow.core.job.ParallelSignatureOrBuilder getParallelSignatureOrBuilder() {
      if (parallelSignatureBuilder_ != null) {
        return parallelSignatureBuilder_.getMessageOrBuilder();
      } else {
        return parallelSignature_ == null ?
            org.oneflow.core.job.ParallelSignature.getDefaultInstance() : parallelSignature_;
      }
    }
    /**
     * <code>optional .oneflow.ParallelSignature parallel_signature = 108;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ParallelSignature, org.oneflow.core.job.ParallelSignature.Builder, org.oneflow.core.job.ParallelSignatureOrBuilder> 
        getParallelSignatureFieldBuilder() {
      if (parallelSignatureBuilder_ == null) {
        parallelSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.ParallelSignature, org.oneflow.core.job.ParallelSignature.Builder, org.oneflow.core.job.ParallelSignatureOrBuilder>(
                getParallelSignature(),
                getParentForChildren(),
                isClean());
        parallelSignature_ = null;
      }
      return parallelSignatureBuilder_;
    }

    private org.oneflow.core.job.ParallelConfSignature parallelConfSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ParallelConfSignature, org.oneflow.core.job.ParallelConfSignature.Builder, org.oneflow.core.job.ParallelConfSignatureOrBuilder> parallelConfSignatureBuilder_;
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public boolean hasParallelConfSignature() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public org.oneflow.core.job.ParallelConfSignature getParallelConfSignature() {
      if (parallelConfSignatureBuilder_ == null) {
        return parallelConfSignature_ == null ? org.oneflow.core.job.ParallelConfSignature.getDefaultInstance() : parallelConfSignature_;
      } else {
        return parallelConfSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public Builder setParallelConfSignature(org.oneflow.core.job.ParallelConfSignature value) {
      if (parallelConfSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parallelConfSignature_ = value;
        onChanged();
      } else {
        parallelConfSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public Builder setParallelConfSignature(
        org.oneflow.core.job.ParallelConfSignature.Builder builderForValue) {
      if (parallelConfSignatureBuilder_ == null) {
        parallelConfSignature_ = builderForValue.build();
        onChanged();
      } else {
        parallelConfSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public Builder mergeParallelConfSignature(org.oneflow.core.job.ParallelConfSignature value) {
      if (parallelConfSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000) &&
            parallelConfSignature_ != null &&
            parallelConfSignature_ != org.oneflow.core.job.ParallelConfSignature.getDefaultInstance()) {
          parallelConfSignature_ =
            org.oneflow.core.job.ParallelConfSignature.newBuilder(parallelConfSignature_).mergeFrom(value).buildPartial();
        } else {
          parallelConfSignature_ = value;
        }
        onChanged();
      } else {
        parallelConfSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00001000;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public Builder clearParallelConfSignature() {
      if (parallelConfSignatureBuilder_ == null) {
        parallelConfSignature_ = null;
        onChanged();
      } else {
        parallelConfSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public org.oneflow.core.job.ParallelConfSignature.Builder getParallelConfSignatureBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getParallelConfSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    public org.oneflow.core.job.ParallelConfSignatureOrBuilder getParallelConfSignatureOrBuilder() {
      if (parallelConfSignatureBuilder_ != null) {
        return parallelConfSignatureBuilder_.getMessageOrBuilder();
      } else {
        return parallelConfSignature_ == null ?
            org.oneflow.core.job.ParallelConfSignature.getDefaultInstance() : parallelConfSignature_;
      }
    }
    /**
     * <code>optional .oneflow.ParallelConfSignature parallel_conf_signature = 109;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ParallelConfSignature, org.oneflow.core.job.ParallelConfSignature.Builder, org.oneflow.core.job.ParallelConfSignatureOrBuilder> 
        getParallelConfSignatureFieldBuilder() {
      if (parallelConfSignatureBuilder_ == null) {
        parallelConfSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.ParallelConfSignature, org.oneflow.core.job.ParallelConfSignature.Builder, org.oneflow.core.job.ParallelConfSignatureOrBuilder>(
                getParallelConfSignature(),
                getParentForChildren(),
                isClean());
        parallelConfSignature_ = null;
      }
      return parallelConfSignatureBuilder_;
    }

    private org.oneflow.core.job.ParallelDistributionSignature parallelDistributionSignature_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ParallelDistributionSignature, org.oneflow.core.job.ParallelDistributionSignature.Builder, org.oneflow.core.job.ParallelDistributionSignatureOrBuilder> parallelDistributionSignatureBuilder_;
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public boolean hasParallelDistributionSignature() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public org.oneflow.core.job.ParallelDistributionSignature getParallelDistributionSignature() {
      if (parallelDistributionSignatureBuilder_ == null) {
        return parallelDistributionSignature_ == null ? org.oneflow.core.job.ParallelDistributionSignature.getDefaultInstance() : parallelDistributionSignature_;
      } else {
        return parallelDistributionSignatureBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public Builder setParallelDistributionSignature(org.oneflow.core.job.ParallelDistributionSignature value) {
      if (parallelDistributionSignatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parallelDistributionSignature_ = value;
        onChanged();
      } else {
        parallelDistributionSignatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public Builder setParallelDistributionSignature(
        org.oneflow.core.job.ParallelDistributionSignature.Builder builderForValue) {
      if (parallelDistributionSignatureBuilder_ == null) {
        parallelDistributionSignature_ = builderForValue.build();
        onChanged();
      } else {
        parallelDistributionSignatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public Builder mergeParallelDistributionSignature(org.oneflow.core.job.ParallelDistributionSignature value) {
      if (parallelDistributionSignatureBuilder_ == null) {
        if (((bitField0_ & 0x00002000) == 0x00002000) &&
            parallelDistributionSignature_ != null &&
            parallelDistributionSignature_ != org.oneflow.core.job.ParallelDistributionSignature.getDefaultInstance()) {
          parallelDistributionSignature_ =
            org.oneflow.core.job.ParallelDistributionSignature.newBuilder(parallelDistributionSignature_).mergeFrom(value).buildPartial();
        } else {
          parallelDistributionSignature_ = value;
        }
        onChanged();
      } else {
        parallelDistributionSignatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00002000;
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public Builder clearParallelDistributionSignature() {
      if (parallelDistributionSignatureBuilder_ == null) {
        parallelDistributionSignature_ = null;
        onChanged();
      } else {
        parallelDistributionSignatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00002000);
      return this;
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public org.oneflow.core.job.ParallelDistributionSignature.Builder getParallelDistributionSignatureBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getParallelDistributionSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    public org.oneflow.core.job.ParallelDistributionSignatureOrBuilder getParallelDistributionSignatureOrBuilder() {
      if (parallelDistributionSignatureBuilder_ != null) {
        return parallelDistributionSignatureBuilder_.getMessageOrBuilder();
      } else {
        return parallelDistributionSignature_ == null ?
            org.oneflow.core.job.ParallelDistributionSignature.getDefaultInstance() : parallelDistributionSignature_;
      }
    }
    /**
     * <code>optional .oneflow.ParallelDistributionSignature parallel_distribution_signature = 110;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.oneflow.core.job.ParallelDistributionSignature, org.oneflow.core.job.ParallelDistributionSignature.Builder, org.oneflow.core.job.ParallelDistributionSignatureOrBuilder> 
        getParallelDistributionSignatureFieldBuilder() {
      if (parallelDistributionSignatureBuilder_ == null) {
        parallelDistributionSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.oneflow.core.job.ParallelDistributionSignature, org.oneflow.core.job.ParallelDistributionSignature.Builder, org.oneflow.core.job.ParallelDistributionSignatureOrBuilder>(
                getParallelDistributionSignature(),
                getParentForChildren(),
                isClean());
        parallelDistributionSignature_ = null;
      }
      return parallelDistributionSignatureBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oneflow.OpAttribute)
  }

  // @@protoc_insertion_point(class_scope:oneflow.OpAttribute)
  private static final org.oneflow.core.operator.OpAttribute DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.oneflow.core.operator.OpAttribute();
  }

  public static org.oneflow.core.operator.OpAttribute getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<OpAttribute>
      PARSER = new com.google.protobuf.AbstractParser<OpAttribute>() {
    public OpAttribute parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpAttribute(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OpAttribute> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OpAttribute> getParserForType() {
    return PARSER;
  }

  public org.oneflow.core.operator.OpAttribute getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

